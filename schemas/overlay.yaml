overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Overlay seqera-api-latest.yml => seqera-final.yaml
  version: 0.0.0
actions:
  - target: $["paths"]["/data-links"]["post"]
    update:
      x-speakeasy-entity-operation: DataLink#create
  - target: $["paths"]["/data-links/{dataLinkId}"]["get"]
    update:
      x-speakeasy-entity-operation: DataLink#read
  - target: $["paths"]["/data-links/{dataLinkId}"]["put"]
    update:
      x-speakeasy-entity-operation: DataLink#update
  - target: $["paths"]["/data-links/{dataLinkId}"]["delete"]
    update:
      x-speakeasy-entity-operation: DataLink#delete
  - target: $["paths"]["/datasets"]["get"]["x-speakeasy-entity-operation"]
    remove: true
  - target: $["paths"]["/datasets"]["post"]
    update:
      x-speakeasy-entity-operation: Datasets#create
  - target: $["paths"]["/datasets/{datasetId}"]["put"]
    update:
      x-speakeasy-entity-operation: Dataset#update
  - target: $["paths"]["/datasets/{datasetId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Dataset#delete
  - target: $["paths"]["/datasets/{datasetId}/metadata"]["get"]
    update:
      x-speakeasy-entity-operation: Dataset#read
  - target: $["paths"]["/labels"]["get"]
    update:
      x-speakeasy-entity-operation: Labels#read
  - target: $["paths"]["/labels"]["post"]
    update:
      x-speakeasy-entity-operation: Labels#create
  - target: $["paths"]["/labels/{labelId}"]["put"]
    update:
      x-speakeasy-entity-operation: Labels#update
  - target: $["paths"]["/labels/{labelId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Labels#delete
  - target: $["paths"]["/orgs"]["post"]
    update:
      x-speakeasy-entity-operation: Orgs#create
  - target: $["paths"]["/orgs/{orgId}"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
      # x-speakeasy-match: orgId
  - target: $["paths"]["/orgs/{orgId}"]["get"]
    update:
      x-speakeasy-entity-operation: Organization#read
  - target: $["paths"]["/orgs/{orgId}"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}"]["put"]
    update:
      x-speakeasy-entity-operation: Orgs#update
  - target: $["paths"]["/orgs/{orgId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Orgs#delete
  # - target: $["paths"]["/orgs/{orgId}/collaborators"]["get"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  # - target: $["paths"]["/orgs/{orgId}/members"]["get"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  # - target: $["paths"]["/orgs/{orgId}/members/add"]["put"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  # - target: $["paths"]["/orgs/{orgId}/members/leave"]["delete"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  # - target: $["paths"]["/orgs/{orgId}/members/{memberId}"]["delete"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  # - target: $["paths"]["/orgs/{orgId}/members/{memberId}/role"]["put"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  # - target: $["paths"]["/orgs/{orgId}/quotas"]["get"]["parameters"][0]
  #   update:
  #     x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams"]["post"]["parameters"][0]
    update:
      x-speakeasy-param-optional: false
  - target: $["paths"]["/orgs/{orgId}/teams"]["post"]
    update:
      x-speakeasy-entity-operation: Teams#create
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["get"]["parameters"][1]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["get"]
    update:
      x-speakeasy-entity-operation: Teams#read
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["put"]["parameters"][1]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["put"]
    update:
      x-speakeasy-entity-operation: Teams#update
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["delete"]["parameters"][1]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Teams#delete
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/members"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/members"]["get"]["parameters"][1]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/members"]["post"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/members"]["post"]["parameters"][1]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/members/{memberId}/delete"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/members/{memberId}/delete"]["delete"]["parameters"][1]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/teams/{teamId}/workspaces"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces"]["get"]
    update:
      x-speakeasy-entity-operation: Workspaces#read
  - target: $["paths"]["/orgs/{orgId}/workspaces"]["post"]["parameters"][0]
    update:
      x-speakeasy-param-optional: false
  - target: $["paths"]["/orgs/{orgId}/workspaces"]["post"]
    update:
      x-speakeasy-entity-operation: Workspace#create
  - target: $["paths"]["/orgs/{orgId}/workspaces/validate"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["get"]["parameters"][1]
    update:
      x-speakeasy-name-override: id
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["get"]
    update:
      x-speakeasy-entity-operation: Workspace#read
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["put"]["parameters"][1]
    update:
      x-speakeasy-name-override: id
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["put"]
    update:
      x-speakeasy-entity-operation: Workspace#update
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["delete"]["parameters"][1]
    update:
      x-speakeasy-name-override: id
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Workspace#delete
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/participants"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/participants"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/participants/add"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/settings/studios"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/orgs/{orgId}/workspaces/{workspaceId}/settings/studios"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/pipeline-secrets"]["post"]
    update:
      x-speakeasy-entity-operation: PipelineSecret#create
  - target: $["paths"]["/pipeline-secrets/{secretId}"]["get"]
    update:
      x-speakeasy-entity-operation: PipelineSecret#read
  - target: $["paths"]["/pipeline-secrets/{secretId}"]["put"]
    update:
      x-speakeasy-entity-operation: PipelineSecret#update
  - target: $["paths"]["/pipeline-secrets/{secretId}"]["delete"]
    update:
      x-speakeasy-entity-operation: PipelineSecret#delete
  - target: $["paths"]["/studios"]["post"]
    update:
      x-speakeasy-entity-operation: Studios#create
  - target: $["paths"]["/studios/{sessionId}"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/studios/{sessionId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/studios/{sessionId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Studios#delete
  - target: $["paths"]["/studios/{sessionId}"]["get"]
    update:
      x-speakeasy-entity-operation: Studios#read
  - target: $["paths"]["/tokens"]["get"]
    update:
      x-speakeasy-entity-operation: Tokens#read
  - target: $["paths"]["/tokens"]["post"]
    update:
      x-speakeasy-entity-operation: Tokens#create
  - target: $["paths"]["/tokens/{tokenId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true
  - target: $["paths"]["/tokens/{tokenId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Tokens#delete
  - target: $["paths"]["/workflow/launch"]["post"]
    update:
      x-speakeasy-entity-operation: Workflows#create
  - target: $["paths"]["/workflow/{workflowId}"]["get"]
    update:
      x-speakeasy-entity-operation: Workflows#read
  - target: $["paths"]["/workflow/{workflowId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Workflows#delete
  - target: $["paths"]["/workflow/{workflowId}/star"]["get"]
    update:
      x-speakeasy-group: WorkflowStar
  - target: $["paths"]["/workflow/{workflowId}/star"]["post"]
    update:
      x-speakeasy-group: WorkflowStar
  - target: $["paths"]["/workflow/{workflowId}/star"]["delete"]
    update:
      x-speakeasy-group: WorkflowStar
  - target: $["components"]["schemas"]["AccessToken"]["properties"]["id"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["AccessToken"]
    update:
      x-speakeasy-entity: Tokens
  - target: $["components"]["schemas"]["Action.ConfigType"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["Action.EventType"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["Action.TowerActionConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["Action.TowerActionEvent"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AgentSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AltairPbsComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AwsBatchConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AwsCloudConfig"]["properties"]["forgedResources"]
    update:
      x-speakeasy-terraform-ignore: true
  - target: $["components"]["schemas"]["AwsSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AzBatchConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AzureEntraKeys"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AzureReposSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["AzureSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["BitBucketSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["CodeCommitSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["ComputeConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["ContainerRegistryKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["CreateAccessTokenResponse"]
    update:
      x-speakeasy-entity: Tokens
  - target: $["components"]["schemas"]["CreateDatasetRequest"]["required"][*]
    remove: true
  - target: $["components"]["schemas"]["CreateDatasetRequest"]
    update:
      x-speakeasy-entity: Datasets
      required:
        - name
  - target: $["paths"]["/datasets"]["post"]["parameters"][0]
    update:
      required: true
  - target: $["components"]["schemas"]["CreateLabelRequest"]
    update:
      x-speakeasy-entity: Label
  - target: $["components"]["schemas"]["CreateLabelResponse"]
    update:
      x-speakeasy-entity: Label
  - target: $["components"]["schemas"]["CreatePipelineRequest"]["properties"]["name"]
    update:
      x-speakeasy-param-optional: false
  - target: $["components"]["schemas"]["CreatePipelineResponse"]
    update:
      x-speakeasy-entity: Pipelines
  - target: $["components"]["schemas"]["CreatePipelineSecretRequest"]["required"]
    remove: true
  - target: $["components"]["schemas"]["CreatePipelineSecretRequest"]
    update:
      required:
        - name
        - value
  - target: $["components"]["schemas"]["Credentials"]["properties"]["provider"]["enum"][*]
    remove: true
  - target: $["components"]["schemas"]["Credentials"]["properties"]["provider"]["enum"]
    update:
      - aws
      - azure
      - google
      - github
      - gitlab
      - bitbucket
      - ssh
      - k8s
      - container-reg
      - tw-agent
      - codecommit
      - gitea
      - azurerepos
      - seqeracompute
      # discriminator:
      #   propertyName: discriminator
      #   mapping:
      #     aws: "#/components/schemas/AwsSecurityKeys"
      #     azure: "#/components/schemas/AzureSecurityKeys"
      #     google: "#/components/schemas/GoogleSecurityKeys"
      #     github: "#/components/schemas/GitHubSecurityKeys"
      #     gitlab: "#/components/schemas/GitLabSecurityKeys"
      #     bitbucket: "#/components/schemas/BitBucketSecurityKeys"
      #     ssh: "#/components/schemas/SSHSecurityKeys"
      #     k8s: "#/components/schemas/K8sSecurityKeys"
      #     container-reg: "#/components/schemas/ContainerRegistryKeys"
      #     tw-agent: "#/components/schemas/AgentSecurityKeys"
      #     codecommit: "#/components/schemas/CodeCommitSecurityKeys"
      #     gitea: "#/components/schemas/GiteaSecurityKeys"
      #     azurerepos: "#/components/schemas/AzureReposSecurityKeys"
      #     seqeracompute: "#/components/schemas/SeqeraComputeSecurityKeys"
      #     azure_entra: "#/components/schemas/AzureEntraKeys"
  - target: $["components"]["schemas"]["Credentials"]["properties"]["provider"]
    update:
      x-speakeasy-name-override: providerType
  - target: $["components"]["schemas"]["Credentials"]["properties"]["lastUsed"]
    update:
      x-speakeasy-param-suppress-computed-diff: true
  - target: $["components"]["schemas"]["Credentials"]["properties"]["lastUpdated"]
    update:
      x-speakeasy-param-suppress-computed-diff: true
  - target: $["components"]["schemas"]["Credentials"]["required"][*]
    remove: true
  - target: $["components"]["schemas"]["Credentials"]["required"]
    update:
      - name
      - provider
      - keys
  - target: $["paths"]["/credentials"]["post"]["parameters"][0]
    update:
      required: true
  - target: $["components"]["schemas"]["Credentials"]["properties"]["provider"]
    update:
      x-speakeasy-plan-validators: CredentialsConfigValidator
  - target: $["components"]["schemas"]["GoogleSecurityKeys"]
    update:
      x-speakeasy-plan-validators: GoogleKeysCrdentialValidator
  - target: $["components"]["schemas"]["DataLinkCreateRequest"]["required"][*]
    remove: true
  - target: $["components"]["schemas"]["DataLinkCreateRequest"]
    update:
      required:
        - credentialsId
        - description
        - name
        - provider
        - publicAccessible
        - resourceRef
        - type
  - target: $["paths"]["/data-links"]["post"]["parameters"][0]
    update:
      required: true
  - target: $["components"]["schemas"]["DataLinkDto"]["properties"]["id"]
    update:
      x-speakeasy-name-override: dataLinkId
  - target: $["components"]["schemas"]["DataLinkProvider"]
    update:
      x-speakeasy-name-override: providerType
  - target: $["components"]["schemas"]["DataStudioComputeEnvDto"]
    update:
      x-speakeasy-entity: Studios
  - target: $["components"]["schemas"]["DataStudioConfiguration"]
    update:
      x-speakeasy-entity: Studios
  - target: $["components"]["schemas"]["DataStudioCreateRequest"]
    update:
      x-speakeasy-entity: Studios

  - target: $["components"]["schemas"]["DataStudioDto"]["properties"]["sessionId"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["DataStudioDto"]["properties"]["sessionId"]
    update:
      x-speakeasy-name-override: sessionId
  # - target: $["components"]["schemas"]["DataStudioDto"]["properties"]["sessionId"]["x-speakeasy-param-optional"]
  #   remove: true
  - target: $["components"]["schemas"]["DataStudioDto"]
    update:
      x-speakeasy-entity: Studios
  - target: $["components"]["schemas"]["DescribeComputeEnvResponse"]["properties"]["computeEnv"]
    update:
      x-speakeasy-entity: ComputeEnv
  - target: $["components"]["schemas"]["DescribeComputeEnvResponse"]
    update:
      x-speakeasy-entity: ComputeEnv
  - target: $["components"]["schemas"]["DescribeWorkflowResponse"]["properties"]["x-speakeasy-entity"]
    remove: true
  - target: $["components"]["schemas"]["DescribeWorkflowResponse"]
    update:
      x-speakeasy-entity: Workflows
  - target: $["components"]["schemas"]["EksComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GitHubSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GitHubSecurityKeys"]["properties"]["password"]
    update:
      x-speakeasy-param-sensitive: true
  - target: $["components"]["schemas"]["GitHubSecurityKeys"]["properties"]["password"]
    update:
      x-speakeasy-param-suppress-computed-diff: true
  - target: $["components"]["schemas"]["GitLabSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GiteaSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GithubActionConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GithubActionEvent"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GkeComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GoogleBatchConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["GoogleLifeSciencesConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  # - target: $["components"]["schemas"]["GoogleSecurityKeys"]["properties"]["data"]["type"]
  #   remove: true
  # - target: $["components"]["schemas"]["GoogleSecurityKeys"]["properties"]["data"]
  #   update:
  #     type: object
  - target: $["components"]["schemas"]["GoogleSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["K8sComputeConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["K8sSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["Launch"]["properties"]["id"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["platform"]
    update:
      x-speakeasy-plan-validators: ComputeConfigValidator
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["platform"]
    update:
      x-speakeasy-param-optional: false
  - target: $["components"]["schemas"]["ListActionsResponse.ActionInfo"]
    update:
      x-speakeasy-entity: Action
  - target: $["components"]["schemas"]["ListComputeEnvsResponse"]
    update:
      x-speakeasy-entity: ComputeEnvs
      ## Compute Config Schemas
  - target: $["components"]["schemas"]["ListCredentialsResponse"]
    update:
      x-speakeasy-entity: Credentials
      ## Security Keys Schemas
  # - target: $["components"]["schemas"]["ListWorkspacesAndOrgResponse"]
  #   update:
  #     x-speakeasy-entity: UserWorkspaces
  - target: $["components"]["schemas"]["LsfComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["MoabComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["Organization"]["properties"]["id"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["Organization"]
    update:
      x-speakeasy-entity: Orgs
      #x-speakeasy-name-override: orgId
  - target: $["components"]["schemas"]["OrganizationDbDto"]["properties"]["logoId"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["OrganizationDbDto"]["properties"]["logoUrl"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["OrganizationDbDto"]
    update:
      x-speakeasy-entity: Orgs
  - target: $["components"]["schemas"]["PipelineDbDto"]
    update:
      x-speakeasy-entity: Pipeline
      ## Users
  - target: $["components"]["schemas"]["PipelineInfo"]["properties"]["provider"]
    update:
      x-speakeasy-name-override: repositoryProvider
  - target: $["components"]["schemas"]["PipelineSecret"]
    update:
      x-speakeasy-entity: PipelineSecret
  - target: $["components"]["schemas"]["SSHSecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["SecurityKeys"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["SecurityKeys"]
    update:
      x-speakeasy-param-computed: false
  - target: $["components"]["schemas"]["SeqeraComputeConfig"]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["SeqeraComputeSecurityKeys"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["SlurmComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["Team"]["properties"]["id"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["Team"]["properties"]["id"]
    update:
      x-speakeasy-name-override: teamId
  - target: $["components"]["schemas"]["TeamDbDto"]["properties"]["teamId"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["TeamDbDto"]["properties"]["teamId"]
    update:
      x-speakeasy-name-override: teamId
  - target: $["components"]["schemas"]["UnivaComputeConfig"]["allOf"][1]["properties"]["discriminator"]["readOnly"]
    remove: true
  - target: $["components"]["schemas"]["UserDbDto"]
    update:
      x-speakeasy-entity:
        - CurrentUser
        - User
  - target: $["components"]["schemas"]["Visibility"]
    update:
      x-speakeasy-param-optional: false
  - target: $["components"]["schemas"]["WorkflowLaunchRequest"]["properties"]["id"]
    remove: true
  - target: $["components"]["schemas"]["WorkflowLaunchRequest"]
    update:
      x-speakeasy-entity: Workflows
  - target: $["components"]["schemas"]["Workspace"]["properties"]["id"]
    update:
      x-speakeasy-param-optional: true
  - target: $["components"]["schemas"]["Workspace"]["properties"]["name"]
    update:
      x-speakeasy-param-readonly: false
  - target: $["components"]["schemas"]["Workspace"]["properties"]["fullName"]
    update:
      x-speakeasy-param-readonly: false
  - target: $["components"]["schemas"]["Workspace"]["properties"]["description"]
    update:
      x-speakeasy-param-readonly: false
  - target: $["components"]["schemas"]["Workspace"]["properties"]["visibility"]
    update:
      x-speakeasy-param-readonly: false
  - target: $["components"]["schemas"]["Workspace"]
    update:
      x-speakeasy-entity: Workspace
  - target: $
    update:
      servers:
        - url: https://api.cloud.seqera.io
  - target: $.components.schemas.Credentials
    update:
      description: |
        Represents credentials used for authentication with various platforms and services.
        Contains authentication information for accessing cloud providers, Git repositories,
        and other external services within the Seqera Platform.

  - target: $.components.schemas.PipelineDbDto
    update:
      description: |
        Represents a pipeline configuration in the Seqera Platform.
        Contains pipeline metadata, configuration settings, and execution parameters
        for Nextflow workflows.

  - target: $.components.schemas.ComputeConfig
    update:
      description: |
        Configuration settings for compute environments including work directories,
        pre/post run scripts, and environment-specific parameters.

  # New schema descriptions for additional resources
  - target: $.components.schemas.ActionResponseDto
    update:
      description: |
        Represents a pipeline action in the Seqera Platform.
        Contains action configuration, triggers, and execution settings
        for automated pipeline workflows.

  - target: $.components.schemas.DataLinkDto
    update:
      description: |
        Represents a data link connection to external storage systems.
        Provides access to cloud storage, file systems, and data repositories
        for pipeline input/output operations.

  - target: $.components.schemas.OrganizationDbDto
    update:
      description: |
        Represents an organization in the Seqera Platform.
        Contains organizational metadata, settings, and member management
        information for multi-tenant environments.

  - target: $.components.schemas.DataStudioDto
    update:
      description: |
        Represents a Studio session for interactive data analysis.
        Contains configuration and runtime information for Jupyter-based
        computational environments.

  - target: $.components.schemas.TraceBeginRequest
    update:
      description: |
        Represents workflow execution trace information.
        Contains metadata and progress tracking data for monitoring
        pipeline execution and performance metrics.

  - target: $.components.schemas.Dataset
    update:
      description: |
        Represents a dataset in the Seqera Platform.
        Contains dataset metadata, versioning information, and access
        controls for data management and sharing.

  - target: $.components.schemas.LabelDbDto
    update:
      description: |
        Represents a label for organizing and categorizing resources.
        Provides metadata tagging capabilities for pipelines, workflows,
        and other platform resources.

  - target: $.components.schemas.PipelineSecret
    update:
      description: |
        Represents a secure secret for pipeline execution.
        Contains encrypted sensitive data such as API keys, passwords,
        and configuration values used in workflows.

  - target: $.components.schemas.AccessToken
    update:
      description: |
        Represents an API access token for authentication.
        Contains token metadata, permissions, and expiration information
        for secure API access to platform resources.

  - target: $.components.schemas.WorkflowDbDto
    update:
      description: |
        Represents a workflow execution record.
        Contains execution status, metadata, and results from pipeline
        runs including logs and performance metrics.

  - target: $.components.schemas.WorkspaceDbDto
    update:
      description: |
        Represents a workspace in the Seqera Platform.
        Contains workspace configuration, member permissions, and resource
        isolation settings for project organization.

  - target: $.components.schemas.TeamDbDto
    update:
      description: |
        Represents a team within an organization.
        Contains team membership, permissions, and access controls
        for collaborative workspace management.
  - target: $.components.schemas.ActionResponseDto.properties.id
    update:
      description: Unique identifier for the action
  - target: $.components.schemas.ActionResponseDto.properties.launch
    update:
      description: Launch configuration and parameters for the action
  - target: $.components.schemas.ActionResponseDto.properties.name
    update:
      description: Human-readable name for the action
  - target: $.components.schemas.ActionResponseDto.properties.hookId
    update:
      description: Identifier for the webhook associated with this action
  - target: $.components.schemas.ActionResponseDto.properties.hookUrl
    update:
      description: URL endpoint for the webhook that triggers this action
  - target: $.components.schemas.ActionResponseDto.properties.message
    update:
      description: Status or informational message about the action
  - target: $.components.schemas.ActionResponseDto.properties.source
    update:
      description: Source system or trigger that initiated the action
  - target: $.components.schemas.ActionResponseDto.properties.status
    update:
      description: Current execution status of the action
  - target: $.components.schemas.ActionResponseDto.properties.config
    update:
      description: Configuration type and settings for the action

  # Credentials field descriptions
  - target: $.components.schemas.Credentials.properties.id
    update:
      description: Unique identifier for the credential (max 22 characters)
  - target: $.components.schemas.Credentials.properties.name
    update:
      description: Display name for the credential (max 100 characters)
  - target: $.components.schemas.Credentials.properties.description
    update:
      description: Optional description explaining the purpose of the credential
  - target: $.components.schemas.Credentials.properties.provider
    update:
      description: Cloud or service provider type (e.g., aws, azure, gcp)
  - target: $.components.schemas.Credentials.properties.dateCreated
    update:
      description: Timestamp when the credential was created
  - target: $.components.schemas.Credentials.properties.lastUsed
    update:
      description: Timestamp when the credential was last used
  - target: $.components.schemas.Credentials.properties.deleted
    update:
      description: Flag indicating if the credential has been soft-deleted

  # Dataset field descriptions
  - target: $.components.schemas.Dataset.properties.id
    update:
      description: Unique identifier for the dataset (max 22 characters)
  - target: $.components.schemas.Dataset.properties.name
    update:
      description: Dataset name following naming conventions (1-100 characters)
  - target: $.components.schemas.Dataset.properties.description
    update:
      description: Detailed description of the dataset contents and purpose (max 1000 characters)
  - target: $.components.schemas.Dataset.properties.mediaType
    update:
      description: MIME type or media type of the dataset content (max 80 characters)
  - target: $.components.schemas.Dataset.properties.deleted
    update:
      description: Read-only flag indicating if the dataset has been deleted

  # OrganizationDbDto field descriptions
  - target: $.components.schemas.OrganizationDbDto.properties.orgId
    update:
      description: Unique numeric identifier for the organization
  - target: $.components.schemas.OrganizationDbDto.properties.name
    update:
      description: Short name or handle for the organization
  - target: $.components.schemas.OrganizationDbDto.properties.fullName
    update:
      description: Complete formal name of the organization
  - target: $.components.schemas.OrganizationDbDto.properties.description
    update:
      description: Detailed description of the organization's purpose and activities
  - target: $.components.schemas.OrganizationDbDto.properties.location
    update:
      description: Geographic location or address of the organization
  - target: $.components.schemas.OrganizationDbDto.properties.website
    update:
      description: Official website URL for the organization
  - target: $.components.schemas.OrganizationDbDto.properties.logoId
    update:
      description: Identifier for the organization's logo image
  - target: $.components.schemas.OrganizationDbDto.properties.paying
    update:
      description: Deprecated flag indicating if organization has paid subscription

  # PipelineDbDto field descriptions
  - target: $.components.schemas.PipelineDbDto.properties.pipelineId
    update:
      description: Unique numeric identifier for the pipeline
  - target: $.components.schemas.PipelineDbDto.properties.name
    update:
      description: Display name for the pipeline
  - target: $.components.schemas.PipelineDbDto.properties.description
    update:
      description: Detailed description of the pipeline's purpose and functionality
  - target: $.components.schemas.PipelineDbDto.properties.icon
    update:
      description: Icon identifier or URL for visual representation
  - target: $.components.schemas.PipelineDbDto.properties.repository
    update:
      description: Git repository URL containing the pipeline source code
  - target: $.components.schemas.PipelineDbDto.properties.userId
    update:
      description: Numeric identifier of the user who created the pipeline
  - target: $.components.schemas.PipelineDbDto.properties.userName
    update:
      description: Username of the pipeline creator
  - target: $.components.schemas.PipelineDbDto.properties.userFirstName
    update:
      description: First name of the user who created the pipeline

  # TeamDbDto field descriptions
  - target: $.components.schemas.TeamDbDto.properties.teamId
    update:
      description: Unique numeric identifier for the team
  - target: $.components.schemas.TeamDbDto.properties.name
    update:
      description: Display name for the team
  - target: $.components.schemas.TeamDbDto.properties.description
    update:
      description: Description of the team's purpose and responsibilities
  - target: $.components.schemas.TeamDbDto.properties.avatarUrl
    update:
      description: URL to the team's avatar or profile image
  - target: $.components.schemas.TeamDbDto.properties.membersCount
    update:
      description: Total number of members in the team

  # WorkflowDbDto field descriptions
  - target: $.components.schemas.WorkflowDbDto.properties.id
    update:
      description: Unique identifier for the workflow execution
  - target: $.components.schemas.WorkflowDbDto.properties.ownerId
    update:
      description: Numeric identifier of the user who owns this workflow
  - target: $.components.schemas.WorkflowDbDto.properties.submit
    update:
      description: Timestamp when the workflow was submitted for execution
  - target: $.components.schemas.WorkflowDbDto.properties.start
    update:
      description: Timestamp when the workflow execution actually started
  - target: $.components.schemas.WorkflowDbDto.properties.complete
    update:
      description: Timestamp when the workflow execution completed
  - target: $.components.schemas.WorkflowDbDto.properties.messages
    update:
      description: Array of status messages and logs from workflow execution

  # ComputeConfig field descriptions
  - target: $.components.schemas.ComputeConfig.properties.workDir
    update:
      description: Working directory path for workflow execution
  - target: $.components.schemas.ComputeConfig.properties.preRunScript
    update:
      description: Shell script to execute before workflow starts
  - target: $.components.schemas.ComputeConfig.properties.postRunScript
    update:
      description: Shell script to execute after workflow completes
  - target: $.components.schemas.ComputeConfig.properties.environment
    update:
      description: Array of environment variables for the compute environment
  - target: $.components.schemas.ComputeConfig.properties.nextflowConfig
    update:
      description: Nextflow configuration settings and parameters
  - target: $.components.schemas.ComputeConfig.properties.discriminator
    update:
      description: Read-only property identifying the compute platform type

  # DataLinkDto field descriptions
  - target: $.components.schemas.DataLinkDto.properties.id
    update:
      description: Unique identifier for the data link
  - target: $.components.schemas.DataLinkDto.properties.name
    update:
      description: Display name for the data link connection
  - target: $.components.schemas.DataLinkDto.properties.description
    update:
      description: Description of the data link's purpose and contents
  - target: $.components.schemas.DataLinkDto.properties.resourceRef
    update:
      description: Reference identifier for the external resource
  - target: $.components.schemas.DataLinkDto.properties.type
    update:
      description: Type of data link (e.g., S3, Azure Blob, etc.)
  - target: $.components.schemas.DataLinkDto.properties.provider
    update:
      description: Cloud provider hosting the data link
  - target: $.components.schemas.DataLinkDto.properties.region
    update:
      description: Geographic region where the data link is hosted
  - target: $.components.schemas.DataLinkDto.properties.credentials
    update:
      description: Array of credentials required to access the data link

  # LabelDbDto field descriptions
  - target: $.components.schemas.LabelDbDto.properties.id
    update:
      description: Unique numeric identifier for the label
  - target: $.components.schemas.LabelDbDto.properties.name
    update:
      description: Name or key of the label
  - target: $.components.schemas.LabelDbDto.properties.value
    update:
      description: Value associated with the label
  - target: $.components.schemas.LabelDbDto.properties.resource
    update:
      description: Flag indicating if this is a resource-level label
  - target: $.components.schemas.LabelDbDto.properties.isDefault
    update:
      description: Flag indicating if this is a default system label
  - target: $.components.schemas.LabelDbDto.properties.isDynamic
    update:
      description: Flag indicating if the label value is dynamically generated
  - target: $.components.schemas.LabelDbDto.properties.isInterpolated
    update:
      description: Flag indicating if the label value supports variable interpolation
  - target: $.components.schemas.LabelDbDto.properties.dateCreated
    update:
      description: Timestamp when the label was created

  # PipelineSecret field descriptions
  - target: $.components.schemas.PipelineSecret.properties.id
    update:
      description: Unique numeric identifier for the secret (nullable)
  - target: $.components.schemas.PipelineSecret.properties.name
    update:
      description: Secret name following naming conventions (max 100 characters)
  - target: $.components.schemas.PipelineSecret.properties.lastUsed
    update:
      description: Read-only timestamp when the secret was last accessed
  - target: $.components.schemas.PipelineSecret.properties.dateCreated
    update:
      description: Read-only timestamp when the secret was created

  # DataStudioDto field descriptions
  - target: $.components.schemas.DataStudioDto.properties.sessionId
    update:
      description: Unique identifier for the Studio session
  - target: $.components.schemas.DataStudioDto.properties.workspaceId
    update:
      description: Numeric identifier of the workspace containing the Studio
  - target: $.components.schemas.DataStudioDto.properties.parentCheckpoint
    update:
      description: Reference to the parent checkpoint for session restoration
  - target: $.components.schemas.DataStudioDto.properties.user
    update:
      description: User information for the Studio session owner
  - target: $.components.schemas.DataStudioDto.properties.name
    update:
      description: Display name for the Studio session
  - target: $.components.schemas.DataStudioDto.properties.description
    update:
      description: Description of the Studio session's purpose
  - target: $.components.schemas.DataStudioDto.properties.studioUrl
    update:
      description: URL to access the running Studio instance
  - target: $.components.schemas.DataStudioDto.properties.computeEnv
    update:
      description: Compute environment configuration for the Studio

  # AccessToken field descriptions
  - target: $.components.schemas.AccessToken.properties.id
    update:
      description: Unique numeric identifier for the access token (nullable)
  - target: $.components.schemas.AccessToken.properties.name
    update:
      description: Display name for the token (1-50 characters)
  - target: $.components.schemas.AccessToken.properties.lastUsed
    update:
      description: Timestamp when the token was last used for authentication
  - target: $.components.schemas.AccessToken.properties.dateCreated
    update:
      description: Timestamp when the token was created
  - target: $.components.schemas.AccessToken.properties.basicAuth
    update:
      description: Deprecated basic authentication string

  # WorkspaceDbDto field descriptions
  - target: $.components.schemas.WorkspaceDbDto.properties.id
    update:
      description: Unique numeric identifier for the workspace
  - target: $.components.schemas.WorkspaceDbDto.properties.name
    update:
      description: Short name or handle for the workspace
  - target: $.components.schemas.WorkspaceDbDto.properties.fullName
    update:
      description: Complete display name for the workspace
  - target: $.components.schemas.WorkspaceDbDto.properties.description
    update:
      description: Detailed description of the workspace's purpose
  - target: $.components.schemas.WorkspaceDbDto.properties.visibility
    update:
      description: Visibility level of the workspace (public, private, etc.)
  - target: $.components.schemas.CreateComputeEnvRequest
    update:
      required:
          - name
          - credentialsId
          - platform
          - config

    # Compute config platform-specific schemas
  - target: $.components.schemas.AwsBatchConfig
    update:
      required:
          - region
          - forge

  - target: $.components.schemas.ForgeConfig
    update:
      required:
        - type
        - minCpus
        - MaxCpus

  - target: $.components.schemas.AwsCloudConfig
    update:
      required:
        - region

  - target: $.components.schemas.AzBatchConfig
    update:
      required:
        - region
        - forge

  - target: $.components.schemas.AzBatchForgeConfig
    update:
      required:
        - vmCount

  - target: $.components.schemas.GoogleBatchComputeConfig
    update:
      required:
        - location

  - target: $.components.schemas.K8sComputeConfig
    update:
      required:
        - server
        - namespace
        - sslCert
        - headServiceAccount
        - storageClaimName

  - target: $.components.schemas.EksComputeConfig
    update:
      required:
        - region
        - clusterName

  - target: $.components.schemas.GkeComputeConfig
    update:
      required:
        - region
        - clusterName

  - target: $.components.schemas.UnivaComputeConfig
    update:
      required:
        - workDir

  - target: $.components.schemas.SlurmComputeConfig
    update:
      required:
        - workDir

  - target: $.components.schemas.LsfComputeConfig
    update:
      required:
        - workDir

  - target: $.components.schemas.AltairPbsComputeConfig
    update:
      required:
        - workDir

  - target: $.components.schemas.MoabComputeConfig
    update:
      required:
        - workDir

  - target: $.components.schemas.LocalComputeConfig
    update:
      required:
        - workDir

  - target: $.components.schemas.SeqeraComputeConfig
    update:
      required:
        - region

    # Pipeline requests
  - target: $.components.schemas.CreatePipelineRequest
    update:
      required:
        - name
        - launch

  - target: $.components.schemas.WorkflowLaunchRequest
    update:
      required:
        - pipeline
