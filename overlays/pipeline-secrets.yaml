overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Pipeline Secrets Overlay
  version: 0.0.0

# ==============================================================================
# PIPELINE SECRETS RESOURCE OVERLAY
# ==============================================================================
#
# Pipeline secrets store encrypted sensitive data such as API keys, passwords,
# and configuration values that are accessible to workflows during execution.
# Secrets are scoped to a workspace and can be referenced in pipeline configurations.
#
# TERRAFORM EXAMPLES:
# -------------------
#
# Example 1: Basic pipeline secret
# resource "seqera_pipeline_secret" "api_key" {
#   name         = "github_api_key"
#   value        = var.github_api_key
#   workspace_id = seqera_workspace.main.id
# }
#
# Example 2: Database credentials
# resource "seqera_pipeline_secret" "db_password" {
#   name         = "database_password"
#   value        = var.database_password
#   workspace_id = seqera_workspace.main.id
# }
#
# ==============================================================================

actions:
  # ============================================================================
  # ENTITY CONFIGURATION
  # ============================================================================

  # Pipeline secrets entity schema
  - target: $["components"]["schemas"]["PipelineSecret"]
    update:
      x-speakeasy-entity: PipelineSecret
      x-speakeasy-entity-description: |
        Manage secure secrets for pipeline execution.

        Pipeline secrets store encrypted sensitive data such as API keys,
        passwords, and configuration values used in workflows, providing
        secure access to external services and resources.

  # ============================================================================
  # ENTITY OPERATIONS (CRUD)
  # ============================================================================

  # CREATE - POST /pipeline-secrets
  - target: $["paths"]["/pipeline-secrets"]["post"]
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: PipelineSecret#create

  # Make workspace_id required for creating pipeline secrets
  - target: $["paths"]["/pipeline-secrets"]["post"]["parameters"][?(@.name == "workspaceId")]
    update:
      name: workspaceId
      in: query
      description: Workspace numeric identifier where the secret will be stored
      required: true
      schema:
        type: integer
        format: int64

  # READ - GET /pipeline-secrets/{secretId}
  - target: $["paths"]["/pipeline-secrets/{secretId}"]["get"]
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: PipelineSecret#read

  # UPDATE - PUT /pipeline-secrets/{secretId}
  - target: $["paths"]["/pipeline-secrets/{secretId}"]["put"]
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: PipelineSecret#update

  # DELETE - DELETE /pipeline-secrets/{secretId}
  - target: $["paths"]["/pipeline-secrets/{secretId}"]["delete"]
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: PipelineSecret#delete

  # ============================================================================
  # FIELD CONFIGURATION
  # ============================================================================

  # Mark secret value as sensitive in CreatePipelineSecretRequest
  - target: $.components.schemas.CreatePipelineSecretRequest.properties.value
    update:
      x-speakeasy-param-sensitive: true

  # Mark secret value as sensitive in UpdatePipelineSecretRequest
  - target: $.components.schemas.UpdatePipelineSecretRequest.properties.value
    update:
      x-speakeasy-param-sensitive: true

  # Mark secret value as sensitive in PipelineSecret (response)
  - target: $.components.schemas.PipelineSecret.properties.value
    update:
      x-speakeasy-param-sensitive: true

  # Mark lastUsed as read-only (computed by system)
  - target: $.components.schemas.PipelineSecret.properties.lastUsed
    update:
      x-speakeasy-param-readonly: true

  # Mark dateCreated as read-only (computed by system)
  - target: $.components.schemas.PipelineSecret.properties.dateCreated
    update:
      x-speakeasy-param-readonly: true

  # Mark id as read-only (computed by system)
  - target: $.components.schemas.PipelineSecret.properties.id
    update:
      x-speakeasy-param-readonly: true

  # ============================================================================
  # SCHEMA DESCRIPTIONS
  # ============================================================================

  # PipelineSecret schema description
  - target: $.components.schemas.PipelineSecret
    update:
      description: |
        Represents a secure secret for pipeline execution.
        Contains encrypted sensitive data such as API keys, passwords,
        and configuration values used in workflows.

  # Field descriptions for PipelineSecret
  - target: $.components.schemas.PipelineSecret.properties.id
    update:
      description: Unique numeric identifier for the secret

  - target: $.components.schemas.PipelineSecret.properties.name
    update:
      description: Secret name used to reference the secret in workflows (max 100 characters). Required.

  - target: $.components.schemas.PipelineSecret.properties.value
    update:
      description: The sensitive secret value (encrypted at rest). Required.

  - target: $.components.schemas.PipelineSecret.properties.lastUsed
    update:
      description: Timestamp when the secret was last accessed by a workflow

  - target: $.components.schemas.PipelineSecret.properties.dateCreated
    update:
      description: Timestamp when the secret was created

  # Field descriptions for CreatePipelineSecretRequest
  - target: $.components.schemas.CreatePipelineSecretRequest.properties.name
    update:
      description: Secret name used to reference the secret in workflows (max 100 characters)

  - target: $.components.schemas.CreatePipelineSecretRequest.properties.value
    update:
      description: The sensitive secret value to store (will be encrypted)

  - target: $.components.schemas.CreatePipelineSecretRequest.properties.workspaceId
    update:
      description: Workspace numeric identifier where the secret will be stored

  # ============================================================================
  # REQUEST EXAMPLES
  # ============================================================================

  # Example secret name
  - target: $.components.schemas.CreatePipelineSecretRequest.properties.name
    update:
      example: "api_key"

  # Example secret value (use placeholder, not real secret)
  - target: $.components.schemas.CreatePipelineSecretRequest.properties.value
    update:
      example: "secret_value_here"
