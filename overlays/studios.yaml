overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Studios Overlay
  version: 0.0.0

# ==============================================================================
# STUDIOS RESOURCE OVERLAY
# ==============================================================================
#
# Manages Data Studios for interactive analysis in the Seqera Platform.
# Studios provide a unified platform for hosting container images and compute
# environments for interactive tools like JupyterLab, R-IDE, VS Code, or Xpra.
#
# TERRAFORM EXAMPLES:
# -------------------
#
# Example: Basic Jupyter studio
# resource "seqera_studios" "jupyter" {
#   workspace_id = seqera_workspace.main.id
#   name = "my-jupyter-studio"
#   compute_env_id = seqera_compute_env.aws.id
#   data_studio_tool_url = "public.cr.seqera.io/platform/data-studio-jupyter:4.2.5-0.8"
#   configuration = {
#     cpu = 2
#     memory = 4096  # Memory in megabytes (4096 MB = 4 GB)
#     lifespan_hours = 2
#   }
# }
#
# ==============================================================================

actions:
  # ============================================================================
  # ENTITY CONFIGURATION
  # ============================================================================

  # Entity schema configuration for Studios
  - target: $["components"]["schemas"]["DataStudioConfiguration"]
    update:
      x-speakeasy-entity: Studios
      x-speakeasy-entity-description: |
        Studios is a unified platform where you can host a combination of
        container images and compute environments for interactive analysis using
        your preferred tools, like JupyterLab, an R-IDE, Visual Studio Code IDEs,
        or Xpra remote desktops. Each Studio session is an individual interactive
        environment that encapsulates the live environment for dynamic data analysis.

        Note:
        On Seqera Cloud, the free tier permits only one running Studio session at a time.
        To run simultaneous sessions, contact Seqera for a Seqera Cloud Pro license.

  - target: $["components"]["schemas"]["DataStudioCreateRequest"]
    update:
      x-speakeasy-entity: Studios
      x-speakeasy-entity-description: |
        Studios is a unified platform where you can host a combination of
        container images and compute environments for interactive analysis using
        your preferred tools, like JupyterLab, an R-IDE, Visual Studio Code IDEs,
        or Xpra remote desktops. Each Studio session is an individual interactive
        environment that encapsulates the live environment for dynamic data analysis.

        Note:
        On Seqera Cloud, the free tier permits only one running Studio session at a time.
        To run simultaneous sessions, contact Seqera for a Seqera Cloud Pro license.

  - target: $["components"]["schemas"]["DataStudioDto"]
    update:
      x-speakeasy-entity: Studios

  # ============================================================================
  # ENTITY OPERATIONS (CRUD)
  # ============================================================================

  # CREATE - POST /studios
  - target: $["paths"]["/studios"]["post"]
    update:
      x-speakeasy-entity-operation: Studios#create

  # READ - GET /studios/{sessionId}
  - target: $["paths"]["/studios/{sessionId}"]["get"]
    update:
      x-speakeasy-entity-operation: Studios#read

  # DELETE - DELETE /studios/{sessionId}
  - target: $["paths"]["/studios/{sessionId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Studios#delete

  # ============================================================================
  # RETRY CONFIGURATION
  # ============================================================================

  # Add retry mechanism for studios creation when compute environment is not ready
  - target: $.paths["/studios"].post
    update:
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000 # 5 seconds
          maxInterval: 5000 # 5 seconds (fixed interval)
          maxElapsedTime: 30000 # 30 seconds
          exponent: 1.0 # No exponential backoff, fixed interval
        statusCodes:
          - 400

  # Add retry mechanism for studios deletion when studio needs to be stopped first
  - target: $.paths["/studios/{sessionId}"].delete
    update:
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 3000
          maxInterval: 10000
          maxElapsedTime: 30000
          exponent: 1.5
        statusCodes:
          - 400

  # Add custom error mapping for better user experience
  - target: $.paths["/studios/{sessionId}"].delete.responses["400"]
    update:
      description: "Bad Request - Studio must be stopped, errored, or build failed before deletion"

  # ============================================================================
  # FIELD CONFIGURATION
  # ============================================================================

  # Make configuration required (backend expects it)
  # First remove the existing required array to avoid duplicates
  - target: $.components.schemas.DataStudioCreateRequest.required
    remove: true
  # Then add the complete required array
  - target: $.components.schemas.DataStudioCreateRequest
    update:
      required:
        - computeEnvId
        - dataStudioToolUrl
        - name
        - configuration

  # Make sessionId optional and configure as read-only
  - target: $["components"]["schemas"]["DataStudioDto"]["properties"]["sessionId"]
    update:
      x-speakeasy-param-readonly: true
      x-speakeasy-name-override: sessionId
      x-speakeasy-param-optional: true

  - target: $.components.schemas.DataStudioCreateRequest.properties.sessionId
    update:
      x-speakeasy-param-optional: true

  # Studios parameter configurations for GET and DELETE operations
  - target: $["paths"]["/studios/{sessionId}"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true

  - target: $["paths"]["/studios/{sessionId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-optional: true

  # ============================================================================
  # SCHEMA DESCRIPTIONS
  # ============================================================================

  # DataStudioDto schema description
  - target: $.components.schemas.DataStudioDto
    update:
      description: |
        Represents a Studio session for interactive data analysis.
        Contains configuration and runtime information for Jupyter-based
        computational environments.

  # DataStudioDto field descriptions (only for manageable fields)
  - target: $.components.schemas.DataStudioDto.properties.sessionId
    update:
      description: Unique identifier for the Studio session
  - target: $.components.schemas.DataStudioDto.properties.workspaceId
    update:
      description: Numeric identifier of the workspace containing the Studio
  - target: $.components.schemas.DataStudioDto.properties.name
    update:
      description: Display name for the Studio session
  - target: $.components.schemas.DataStudioDto.properties.description
    update:
      description: Description of the Studio session's purpose
  - target: $.components.schemas.DataStudioDto.properties.labelIds
    update:
      description: List of resource label IDs to associate with this Studio. Labels can be created with resource=true using the seqera_labels resource.

  # DataStudioCreateRequest field descriptions
  - target: $.components.schemas.DataStudioCreateRequest.properties.labelIds
    update:
      description: List of resource label IDs to associate with this Studio. Reference labels using seqera_labels.label_name.id
  - target: $.components.schemas.DataStudioCreateRequest.properties.spot
    update:
      description: Whether to use spot or on-demand instances. Studios using Spot instances are not compatible with batch compute environments.

  # DataStudioConfiguration field descriptions
  - target: $.components.schemas.DataStudioConfiguration.properties.memory
    update:
      description: Memory allocation for the Studio session in megabytes (MB). Set to 0 to use the compute environment configured defaults.
      example: 4096
      default: 8192
  - target: $.components.schemas.DataStudioConfiguration.properties.cpu
    update:
      description: Number of CPU cores to allocate. Set to 0 to use the compute environment configured defaults.
      example: 2
      default: 2
  - target: $.components.schemas.DataStudioConfiguration.properties.gpu
    update:
      description: Set to 0 to disable GPU or 1 to enable GPU.
      example: 0
      default: 0
  - target: $.components.schemas.DataStudioConfiguration.properties.lifespanHours
    update:
      description: Maximum lifespan of the Studio session in hours
      example: 2
  - target: $.components.schemas.DataStudioConfiguration.properties.environment
    update:
      description: Studio-specific environment variables as key-value pairs. Variable names must contain only alphanumeric and underscore characters, and cannot begin with a number.
      x-speakeasy-param-force-new: true
      x-speakeasy-param-optional: true
      x-speakeasy-plan-validators: StudioEnvironmentVariableValidator

  # ============================================================================
  # REQUEST EXAMPLES
  # ============================================================================

  # Provide realistic examples for DataStudioCreateRequest documentation
  - target: $.components.schemas.DataStudioCreateRequest.properties.name
    update:
      example: "my-jupyter-studio"
  - target: $.components.schemas.DataStudioCreateRequest.properties.description
    update:
      example: "Jupyter studio for data analysis and visualization"
  - target: $.components.schemas.DataStudioCreateRequest.properties.dataStudioToolUrl
    update:
      example: "public.cr.seqera.io/platform/data-studio-jupyter:4.2.5-0.8"
  - target: $.components.schemas.DataStudioCreateRequest.properties.computeEnvId
    update:
      example: "compute-env-id"

  # ============================================================================
  # CLEANUP - Remove transient, runtime, and unmanageable fields
  # ============================================================================

  # Remove runtime checkpoint reference
  - target: $.components.schemas.DataStudioDto.properties.parentCheckpoint
    remove: true

  # Remove user information (runtime data)
  - target: $.components.schemas.DataStudioDto.properties.user
    remove: true

  # Remove dynamically generated URL
  - target: $.components.schemas.DataStudioDto.properties.studioUrl
    remove: true

  # Remove expanded compute environment reference
  - target: $.components.schemas.DataStudioDto.properties.computeEnv
    remove: true

  # Remove runtime template information
  - target: $.components.schemas.DataStudioDto.properties.template
    remove: true

  # Remove timestamp fields
  - target: $.components.schemas.DataStudioDto.properties.dateCreated
    remove: true
  - target: $.components.schemas.DataStudioDto.properties.lastUpdated
    remove: true
  - target: $.components.schemas.DataStudioDto.properties.lastStarted
    remove: true

  # Remove computed lifespan field
  - target: $.components.schemas.DataStudioDto.properties.effectiveLifespanHours
    remove: true

  # Remove runtime connection state
  - target: $.components.schemas.DataStudioDto.properties.activeConnections
    remove: true

  # Remove runtime status information
  - target: $.components.schemas.DataStudioDto.properties.statusInfo
    remove: true

  # Remove runtime build URL
  - target: $.components.schemas.DataStudioDto.properties.waveBuildUrl
    remove: true

  # Remove runtime image information
  - target: $.components.schemas.DataStudioDto.properties.baseImage
    remove: true
  - target: $.components.schemas.DataStudioDto.properties.customImage
    remove: true

  # Remove runtime mounted data links
  - target: $.components.schemas.DataStudioDto.properties.mountedDataLinks
    remove: true

  # Remove runtime progress steps
  - target: $.components.schemas.DataStudioDto.properties.progress
    remove: true

  # Remove runtime label associations (managed separately)
  - target: $.components.schemas.DataStudioDto.properties.labels
    remove: true
