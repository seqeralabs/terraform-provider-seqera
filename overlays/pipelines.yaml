overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Pipelines Overlay
  version: 0.0.0

# ==============================================================================
# PIPELINES RESOURCE OVERLAY
# ==============================================================================
#
# Manages Nextflow pipeline definitions and configurations in Seqera Platform.
# Pipelines define reusable workflow templates with parameters, compute
# environment settings, and execution configurations for scalable bioinformatics
# and data processing workflows.
#
# TERRAFORM EXAMPLES:
# -------------------
#
# Example: Basic pipeline definition
# resource "seqera_pipeline" "rnaseq" {
#   workspace_id = seqera_workspace.main.id
#   name = "rna-seq-analysis"
#   description = "RNA sequencing analysis pipeline"
#   launch = {
#     pipeline = "https://github.com/myorg/rna-seq-pipeline"
#     revision = "main"
#     compute_env_id = seqera_compute_env.aws.id  # Optional
#     work_dir = "s3://my-bucket/work"  # Optional
#   }
# }
#
# ==============================================================================

actions:
  # ============================================================================
  # ENTITY CONFIGURATION
  # ============================================================================

  # Entity schema configuration for Pipelines
  - target: $.components.schemas.PipelineDbDto
    update:
      x-speakeasy-entity: Pipeline
      x-speakeasy-entity-description: |
        Manage Nextflow pipeline definitions and configurations.

        Pipelines define reusable workflow templates with parameters,
        compute environment settings, and execution configurations
        for scalable bioinformatics and data processing workflows.
      description: |
        Represents a pipeline configuration in the Seqera Platform.
        Contains pipeline metadata, configuration settings, and execution parameters
        for Nextflow workflows.

  - target: $.components.schemas.CreatePipelineResponse
    update:
      x-speakeasy-entity: Pipelines

  # ============================================================================
  # ENTITY OPERATIONS (CRUD)
  # ============================================================================

  # CREATE - POST /pipelines
  - target: $.paths["/pipelines"].post
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: Pipeline#create

  # READ - GET /pipelines/{pipelineId}
  - target: $.paths["/pipelines/{pipelineId}"].get
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: Pipeline#read

  # UPDATE - PUT /pipelines/{pipelineId}
  - target: $.paths["/pipelines/{pipelineId}"].put
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: Pipeline#update

  # DELETE - DELETE /pipelines/{pipelineId}
  - target: $.paths["/pipelines/{pipelineId}"].delete
    update:
      x-speakeasy-entity-operation:

        terraform-datasource: null

        terraform-resource: Pipeline#delete

  # ============================================================================
  # FIELD VALIDATORS
  # ============================================================================

  # Pipeline name must contain a minimum of 2 and a maximum of 99 alphanumeric
  # characters separated by dashes, dots or underscores
  - target: $.components.schemas.PipelineCreateRequest.properties.name
    update:
      title: "Pipeline Name"
      description: "Pipeline name must contain a minimum of 2 and a maximum of 99 alphanumeric characters separated by dashes, dots or underscores"
      example: "rna-seq-analysis"
      x-speakeasy-plan-validators: PipelineNameValidator
      x-speakeasy-param-optional: false

  - target: $.components.schemas.UpdatePipelineRequest.properties.name
    update:
      title: "Pipeline Name"
      description: "Pipeline name must contain a minimum of 2 and a maximum of 99 alphanumeric characters separated by dashes, dots or underscores"
      example: "rna-seq-analysis"
      x-speakeasy-plan-validators: PipelineNameValidator

  # ============================================================================
  # FIELD CONFIGURATION
  # ============================================================================

  # Make workspaceId required for pipelines GET endpoint to fix import
  - target: $.paths["/pipelines/{pipelineId}"].get.parameters[?(@.name == "workspaceId")]
    update:
      name: workspaceId
      in: query
      description: Workspace numeric identifier
      required: true
      schema:
        type: integer
        format: int64

  # Remove required fields from WorkflowLaunchRequest to make them optional
  # This allows pipelines to be created without specifying compute env and work dir
  - target: $.components.schemas.WorkflowLaunchRequest
    update:
      required: []

  # Make workDir optional in WorkflowLaunchRequest
  - target: $.components.schemas.WorkflowLaunchRequest.properties.workDir
    update:
      x-speakeasy-param-optional: true

  # Make computeEnvId optional in WorkflowLaunchRequest
  - target: $.components.schemas.WorkflowLaunchRequest.properties.computeEnvId
    update:
      x-speakeasy-param-optional: true

  # Rename provider field to avoid conflicts with Terraform provider keyword
  - target: $.components.schemas.PipelineInfo.properties.provider
    update:
      x-speakeasy-name-override: repositoryProvider

  # ============================================================================
  # SCHEMA DESCRIPTIONS
  # ============================================================================

  # PipelineDbDto field descriptions and ordering
  - target: $.components.schemas.PipelineDbDto.properties.pipelineId
    update:
      description: Unique numeric identifier for the pipeline
      x-speakeasy-param-ordering: 1

  - target: $.components.schemas.PipelineDbDto.properties.name
    update:
      description: Display name for the pipeline
      x-speakeasy-param-ordering: 2

  - target: $.components.schemas.PipelineDbDto.properties.description
    update:
      description: Detailed description of the pipeline's purpose and functionality
      x-speakeasy-param-ordering: 3

  - target: $.components.schemas.PipelineDbDto.properties.repository
    update:
      description: Git repository URL containing the pipeline source code
      x-speakeasy-param-ordering: 4

  - target: $.components.schemas.PipelineDbDto.properties.icon
    update:
      description: Icon identifier or URL for visual representation
      x-speakeasy-param-ordering: 5

  # Note: User fields (userId, userName, userFirstName, userLastName) are removed in cleanup section

  # ============================================================================
  # READ-ONLY FIELDS
  # ============================================================================

  # Mark server-managed ID field as read-only in PipelineDbDto
  # Note: User fields (userId, userName, userFirstName) are removed entirely in cleanup section
  - target: $.components.schemas.PipelineDbDto.properties.pipelineId
    update:
      x-speakeasy-param-readonly: true

  # ============================================================================
  # REQUEST EXAMPLES
  # ============================================================================

  # Provide realistic examples for PipelineCreateRequest documentation
  - target: $.components.schemas.PipelineCreateRequest.properties.description
    update:
      example: "RNA sequencing analysis pipeline for differential gene expression"

  - target: $.components.schemas.PipelineCreateRequest.properties.repository
    update:
      example: "https://github.com/myorg/rna-seq-pipeline"

  # ============================================================================
  # CLEANUP - Remove transient and runtime fields
  # ============================================================================

  # Remove user information fields (already readonly, but should not be in schema)
  - target: $.components.schemas.PipelineDbDto.properties.userLastName
    remove: true

  # Remove runtime organizational context fields
  - target: $.components.schemas.PipelineDbDto.properties.orgId
    remove: true
  - target: $.components.schemas.PipelineDbDto.properties.orgName
    remove: true
  - target: $.components.schemas.PipelineDbDto.properties.workspaceName
    remove: true

  # Remove internal deletion flag
  - target: $.components.schemas.PipelineDbDto.properties.deleted
    remove: true

  # Remove timestamp fields
  - target: $.components.schemas.PipelineDbDto.properties.lastUpdated
    remove: true

  # Remove runtime optimization data
  - target: $.components.schemas.PipelineDbDto.properties.optimizationId
    remove: true
  - target: $.components.schemas.PipelineDbDto.properties.optimizationTargets
    remove: true
  - target: $.components.schemas.PipelineDbDto.properties.optimizationStatus
    remove: true

  # Remove runtime label associations (managed separately)
  - target: $.components.schemas.PipelineDbDto.properties.labels
    remove: true

  # Remove expanded compute environment reference (use computeEnvId instead)
  - target: $.components.schemas.PipelineDbDto.properties.computeEnv
    remove: true

  # Remove computed/inherited field
  - target: $.components.schemas.PipelineDbDto.properties.visibility
    remove: true

  # Remove computed repository information from PipelineInfo
  # These fields are discovered from the git repository, not user-provided
  - target: $.components.schemas.PipelineInfo.properties.projectName
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.simpleName
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.repositoryUrl
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.cloneUrl
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.configFiles
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.workDirs
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.revisions
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.profiles
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.manifest
    remove: true
  - target: $.components.schemas.PipelineInfo.properties.warnings
    remove: true
