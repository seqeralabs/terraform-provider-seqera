overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Labels Overlay
  version: 0.0.0
actions:
  # Labels entity operations
  - target: $["paths"]["/labels"]["get"]
    update:
      x-speakeasy-entity-operation: Labels#read
  - target: $["paths"]["/labels"]["post"]
    update:
      x-speakeasy-entity-operation: Labels#create
  - target: $["paths"]["/labels/{labelId}"]["put"]
    update:
      x-speakeasy-entity-operation: Labels#update
  - target: $["paths"]["/labels/{labelId}"]["delete"]
    update:
      x-speakeasy-entity-operation: Labels#delete

  # Remove required parameter
  - target: $["paths"]["/labels/{labelId}"]["post"]["parameters"][0]["required"]
    remove: true

  # Entity schema annotations
  - target: $["components"]["schemas"]["CreateLabelRequest"]
    update:
      x-speakeasy-entity: Labels
      x-speakeasy-entity-description: |
        Manage labels for organizing and categorizing resources.

        Labels provide metadata tagging capabilities for pipelines, workflows,
        and other platform resources, enabling resource organization, filtering,
        and management across the platform.

  # Label name and value validators for CreateLabelRequest
  # Label name must contain a minimum of 1 and a maximum of 39 alphanumeric
  # characters separated by dashes or underscores
  - target: $.components.schemas.CreateLabelRequest.properties.name
    update:
      title: "Label Name"
      description: "Label name must contain a minimum of 1 and a maximum of 39 alphanumeric characters separated by dashes or underscores"
      example: "my-label"
      x-speakeasy-plan-validators: LabelNameValidator

  # Label value must contain a minimum of 1 and a maximum of 39 alphanumeric
  # characters separated by dashes or underscores
  - target: $.components.schemas.CreateLabelRequest.properties.value
    update:
      title: "Label Value"
      description: "Label value must contain a minimum of 1 and a maximum of 39 alphanumeric characters separated by dashes or underscores"
      example: "production"
      x-speakeasy-plan-validators: LabelValueValidator

  # Label name and value validators for UpdateLabelRequest
  - target: $.components.schemas.UpdateLabelRequest.properties.name
    update:
      title: "Label Name"
      description: "Label name must contain a minimum of 1 and a maximum of 39 alphanumeric characters separated by dashes or underscores"
      example: "my-label"
      x-speakeasy-plan-validators: LabelNameValidator

  - target: $.components.schemas.UpdateLabelRequest.properties.value
    update:
      title: "Label Value"
      description: "Label value must contain a minimum of 1 and a maximum of 39 alphanumeric characters separated by dashes or underscores"
      example: "production"
      x-speakeasy-plan-validators: LabelValueValidator
  - target: $["components"]["schemas"]["CreateLabelResponse"]
    update:
      x-speakeasy-entity: Labels
  - target: $["components"]["schemas"]["CreateLabelResponse"]["properties"]["id"]
    update:
      x-speakeasy-name-override: labelId

  # LabelDbDto property annotations
  - target: $["components"]["schemas"]["LabelDbDto"]["properties"]["id"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["paths"]["/labels/{labelId}"]["get"]["parameters"][0]
    update:
      x-speakeasy-param-readonly: true
  - target: $["paths"]["/labels/{labelId}"]["put"]["parameters"][0]
    update:
      x-speakeasy-param-readonly: true
  - target: $["paths"]["/labels/{labelId}"]["delete"]["parameters"][0]
    update:
      x-speakeasy-param-readonly: true

  # Remove deprecated paths and properties
  - target: $["paths"]["/labels/dynamic/allowed"]
    remove: true
  - target: $["components"]["schemas"]["LabelDbDto"]["properties"]["isDynamic"]
    remove: true
  - target: $["components"]["schemas"]["LabelDbDto"]["properties"]["isInterpolated"]
    remove: true
  - target: $["components"]["schemas"]["AllowedDynamicLabelsResponse"]
    remove: true

  # Request examples for Labels
  - target: $.components.schemas.CreateLabelRequest.properties.name
    update:
      example: "environment"
  - target: $.components.schemas.CreateLabelRequest.properties.value
    update:
      example: "production"
  - target: $.components.schemas.CreateLabelRequest.properties.resource
    update:
      example: true
  - target: $.components.schemas.CreateLabelRequest.properties.isDefault
    update:
      example: false

  # Schema description
  - target: $.components.schemas.LabelDbDto
    update:
      description: |
        Represents a label for organizing and categorizing resources.
        Provides metadata tagging capabilities for pipelines, workflows,
        and other platform resources.

  # Field descriptions for LabelDbDto
  - target: $.components.schemas.LabelDbDto.properties.id
    update:
      description: Unique numeric identifier for the label
  - target: $.components.schemas.LabelDbDto.properties.name
    update:
      description: Name or key of the label
  - target: $.components.schemas.LabelDbDto.properties.value
    update:
      description: Value associated with the label
  - target: $.components.schemas.LabelDbDto.properties.resource
    update:
      description: Flag indicating if this is a resource-level label
  - target: $.components.schemas.LabelDbDto.properties.isDefault
    update:
      description: Flag indicating if this is a default system label
  - target: $.components.schemas.LabelDbDto.properties.dateCreated
    update:
      description: Timestamp when the label was created
