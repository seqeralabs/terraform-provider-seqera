overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Actions Overlay
  version: 0.0.0

# ==============================================================================
# ACTIONS RESOURCE OVERLAY
# ==============================================================================
#
# Manages pipeline actions for event-based workflow automation in Seqera Platform.
# Actions enable event-based pipeline execution, such as triggering a pipeline
# launch with a GitHub webhook whenever the pipeline repository is updated.
#
# IMPORTANT: GitHub webhook actions require a linked GitHub account in your
# Seqera workspace. Configure GitHub integration in the Seqera Platform UI
# before creating GitHub webhook actions.
#
# TERRAFORM EXAMPLES:
# -------------------
#
# Example 1: Basic GitHub webhook action (requires linked GitHub account)
# resource "seqera_action" "github_basic" {
#   workspace_id = seqera_workspace.main.id
#   name         = "github-pipeline-trigger"
#   source       = "github"
#
#   config = {
#     github = {
#       discriminator = "github"
#     }
#   }
#
#   launch = {
#     pipeline       = "https://github.com/myorg/my-pipeline"
#     compute_env_id = seqera_compute_env.aws.id
#     work_dir       = "s3://my-bucket/work"
#     revision       = "main"
#   }
# }
#
# Example 2: GitHub action with parameters using heredoc (requires linked GitHub account)
# resource "seqera_action" "github_advanced" {
#   workspace_id = seqera_workspace.main.id
#   name         = "github-production-pipeline"
#   source       = "github"
#
#   config = {
#     github = {
#       discriminator = "github"
#     }
#   }
#
#   launch = {
#     pipeline       = "https://github.com/myorg/production-pipeline"
#     compute_env_id = seqera_compute_env.aws.id
#     work_dir       = "s3://my-bucket/production/work"
#     revision       = "main"
#
#     params_text = jsonencode({
#       input_data  = "s3://my-bucket/input/data.csv"
#       output_dir  = "s3://my-bucket/results"
#       sample_size = 1000
#     })
#
#     config_text = <<-EOT
#       process {
#         executor = 'awsbatch'
#         queue    = 'my-production-queue'
#         memory   = '8 GB'
#         cpus     = 4
#       }
#     EOT
#
#     pre_run_script = <<-EOT
#       #!/bin/bash
#       echo "Starting production pipeline run"
#       aws s3 sync s3://my-bucket/reference ./reference
#     EOT
#   }
# }
#
# Example 3: Tower webhook action (programmatic trigger, no GitHub account required)
# resource "seqera_action" "tower_api" {
#   workspace_id = seqera_workspace.main.id
#   name         = "api-triggered-pipeline"
#   source       = "tower"
#
#   config = {
#     tower = {
#       discriminator = "tower"
#     }
#   }
#
#   launch = {
#     pipeline       = "https://github.com/myorg/api-pipeline"
#     compute_env_id = seqera_compute_env.aws.id
#     work_dir       = "s3://my-bucket/api-work"
#     revision       = "main"
#     resume         = true
#     pull_latest    = true
#   }
# }
#
# ==============================================================================

actions:
  # ============================================================================
  # ENTITY CONFIGURATION
  # ============================================================================

  # Entity schema configuration for Actions
  - target: $.components.schemas.ActionResponseDto
    update:
      x-speakeasy-entity: Action
      x-speakeasy-entity-version: 1
      x-speakeasy-entity-description: |
        Manage pipeline actions for event-based workflow automation.

        This resource allows the management of pipeline actions. Actions enable event-based
        pipeline execution, such as triggering a pipeline launch with a GitHub webhook whenever
        the pipeline repository is updated.

        Seqera Platform currently offers support for native GitHub webhooks and a general
        Tower webhook that can be invoked programmatically.
      description: |
        Represents a pipeline action in the Seqera Platform.
        Contains action configuration, triggers, and execution settings
        for automated pipeline workflows.

  # ============================================================================
  # ENTITY OPERATIONS (CRUD)
  # ============================================================================

  # CREATE - POST /actions
  - target: $.paths["/actions"].post
    update:
      x-speakeasy-entity-operation:
        terraform-datasource: null
        terraform-resource: Action#create

  # READ - GET /actions/{actionId}
  - target: $.paths["/actions/{actionId}"].get
    update:
      x-speakeasy-entity-operation:
        terraform-datasource: null
        terraform-resource: Action#read

  # UPDATE - PUT /actions/{actionId}
  - target: $.paths["/actions/{actionId}"].put
    update:
      x-speakeasy-entity-operation:
        terraform-datasource: null
        terraform-resource: Action#update

  # DELETE - DELETE /actions/{actionId}
  - target: $.paths["/actions/{actionId}"].delete
    update:
      x-speakeasy-entity-operation:
        terraform-datasource: null
        terraform-resource: Action#delete

  # ============================================================================
  # FIELD CONFIGURATION
  # ============================================================================

  # Set default value for source field and make it optional
  - target: $.components.schemas.CreateActionRequest.properties.source
    update:
      default: "tower"
      x-speakeasy-param-optional: true

  # Remove source from required array to allow default value
  - target: $.components.schemas.CreateActionRequest.required
    update:
      - name
      - launch

  # ============================================================================
  # SCHEMA DESCRIPTIONS
  # ============================================================================

  # ActionResponseDto field descriptions and ordering
  - target: $.components.schemas.ActionResponseDto.properties.id
    update:
      description: Unique identifier for the action
      x-speakeasy-param-ordering: 1

  - target: $.components.schemas.ActionResponseDto.properties.name
    update:
      description: Human-readable name for the action
      x-speakeasy-param-ordering: 2

  - target: $.components.schemas.ActionResponseDto.properties.source
    update:
      description: "Event source that triggers this action. Defaults to 'tower' (programmatic webhook). Use 'github' for GitHub webhook events (requires linked GitHub account)."
      x-speakeasy-param-ordering: 3

  - target: $.components.schemas.ActionResponseDto.properties.config
    update:
      description: Configuration type and settings for the action trigger
      x-speakeasy-param-ordering: 4

  - target: $.components.schemas.ActionResponseDto.properties.launch
    update:
      description: Launch configuration and parameters for the pipeline execution
      x-speakeasy-param-ordering: 5

  - target: $.components.schemas.ActionResponseDto.properties.status
    update:
      description: Current execution status of the action
      x-speakeasy-param-ordering: 6

  - target: $.components.schemas.ActionResponseDto.properties.hookId
    update:
      description: Identifier for the webhook associated with this action
      x-speakeasy-param-ordering: 7

  - target: $.components.schemas.ActionResponseDto.properties.hookUrl
    update:
      description: URL endpoint for the webhook that triggers this action
      x-speakeasy-param-ordering: 8

  - target: $.components.schemas.ActionResponseDto.properties.message
    update:
      description: Status or informational message about the action
      x-speakeasy-param-ordering: 9

  # ============================================================================
  # READ-ONLY FIELDS
  # ============================================================================

  # Mark server-managed fields as read-only in ActionResponseDto
  - target: $.components.schemas.ActionResponseDto.properties.id
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.ActionResponseDto.properties.hookId
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.ActionResponseDto.properties.hookUrl
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.ActionResponseDto.properties.message
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.ActionResponseDto.properties.status
    update:
      x-speakeasy-param-readonly: true

  # ============================================================================
  # CLEANUP - Remove runtime and transient fields
  # ============================================================================

  # Remove last event data (runtime execution information)
  - target: $.components.schemas.ActionResponseDto.properties.event
    remove: true

  # Remove events field from GithubActionConfig (runtime/response field)
  - target: $.components.schemas.GithubActionConfig.properties.events
    remove: true

  # Remove timestamp fields
  - target: $.components.schemas.ActionResponseDto.properties.lastSeen
    remove: true
  - target: $.components.schemas.ActionResponseDto.properties.dateCreated
    remove: true
  - target: $.components.schemas.ActionResponseDto.properties.lastUpdated
    remove: true

  # Remove runtime label associations (managed separately)
  - target: $.components.schemas.ActionResponseDto.properties.labels
    remove: true

  # ============================================================================
  # LAUNCH SCHEMA - Remove ephemeral and computed fields
  # ============================================================================

  # Remove timestamp fields from Launch schema
  - target: $.components.schemas.Launch.properties.dateCreated
    remove: true

  - target: $.components.schemas.Launch.properties.lastUpdated
    remove: true

  # Remove computeEnv (full compute environment object - response only)
  - target: $.components.schemas.Launch.properties.computeEnv
    remove: true

  # Mark computed/response-only fields as read-only in Launch schema
  - target: $.components.schemas.Launch.properties.resumeLaunchId
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.Launch.properties.sessionId
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.Launch.properties.optimizationId
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.Launch.properties.optimizationTargets
    update:
      x-speakeasy-param-readonly: true

  - target: $.components.schemas.Launch.properties.launchContainer
    update:
      x-speakeasy-param-readonly: true
