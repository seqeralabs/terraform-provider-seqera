overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: Compute Environment Overlay
  version: 0.0.0
actions:
  # DataStudioComputeEnvDto entity annotation
  - target: $["components"]["schemas"]["DataStudioComputeEnvDto"]
    update:
      x-speakeasy-entity: Studios

  # DescribeComputeEnvResponse entity annotations
  - target: $["components"]["schemas"]["DescribeComputeEnvResponse"]["properties"]["computeEnv"]
    update:
      x-speakeasy-entity: ComputeEnv
  - target: $["components"]["schemas"]["DescribeComputeEnvResponse"]
    update:
      x-speakeasy-entity: ComputeEnv

  # ComputeConfig platform validator
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["platform"]
    update:
      x-speakeasy-plan-validators: ComputeConfigValidator
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["platform"]
    update:
      x-speakeasy-param-optional: false

  # ComputeEnv entity operations
  - target: $.paths["/compute-envs"].post
    update:
      x-speakeasy-entity-operation: ComputeEnv#create
  - target: $.paths["/compute-envs/{computeEnvId}"].get
    update:
      x-speakeasy-entity-operation: ComputeEnv#read
  - target: $.paths["/compute-envs/{computeEnvId}"].put
    update:
      x-speakeasy-entity-operation: ComputeEnv#update
  - target: $.paths["/compute-envs/{computeEnvId}"].delete
    update:
      x-speakeasy-entity-operation: ComputeEnv#delete

  # Add retry mechanism for compute environment creation
  - target: $.paths["/compute-envs"].post
    update:
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000 # 5 seconds
          maxInterval: 5000 # 5 seconds (fixed interval)
          maxElapsedTime: 30000 # 30 seconds
          exponent: 1.0 # No exponential backoff, fixed interval
        statusCodes:
          - 4XX
          - 5XX

  # Mark workspaceId as required for compute-envs GET endpoint to fix import
  - target: $.paths["/compute-envs/{computeEnvId}"].get.parameters[?(@.name == "workspaceId")]
    update:
      name: workspaceId
      in: query
      description: Workspace numeric identifier
      required: true
      schema:
        type: integer
        format: int64

  # ComputeEnvResponseDto annotations
  - target: $.components.schemas.ComputeEnvResponseDto.properties.id
    update:
      x-speakeasy-name-override: computeEnvId
  - target: $.components.schemas.ComputeEnvResponseDto.properties.dateCreated
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnvResponseDto.properties.lastUpdated
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnvResponseDto.properties.lastUsed
    update:
      x-speakeasy-param-readonly: true

  # ComputeEnv_ComputeConfig_ annotations
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.id
    update:
      x-speakeasy-name-override: computeEnvId
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.dateCreated
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.lastUpdated
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.lastUsed
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.deleted
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.status
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.orgId
    update:
      x-speakeasy-param-readonly: true
  - target: $.components.schemas.ComputeEnv_ComputeConfig_.properties.workspaceId
    update:
      x-speakeasy-param-readonly: true

  # Entity annotations
  - target: $.components.schemas.ComputeEnvResponseDto
    update:
      x-speakeasy-entity: ComputeEnv
      x-speakeasy-entity-description: |
        Seqera Platform compute environments define the execution platform where a pipeline will run.
        Compute environments enable users to launch pipelines on a growing number of cloud and
        on-premises platforms. Each compute environment must be configured to enable Seqera to submit tasks.

        Compute environments define the computational resources and configuration needed
        to run Nextflow workflows, including cloud provider settings, resource limits,
        and execution parameters.

  - target: $.components.schemas.ComputeEnv_ComputeConfig_
    update:
      x-speakeasy-entity: ComputeEnv
  - target: $.components.schemas.DescribeComputeEnvResponse
    update:
      x-speakeasy-entity: ComputeEnv
  - target: $.components.schemas.CreateComputeEnvResponse
    update:
      x-speakeasy-entity: ComputeEnv

  # Updated overlay annotations
  - target: $["components"]["schemas"]["ComputeEnvResponseDto"]["properties"]["id"]
    update:
      x-speakeasy-name-override: computeEnvId
  - target: $["components"]["schemas"]["ComputeEnvResponseDto"]["properties"]["dateCreated"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnvResponseDto"]["properties"]["lastUsed"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnvResponseDto"]
    update:
      x-speakeasy-entity: ComputeEnv
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["id"]
    update:
      x-speakeasy-name-override: computeEnvId
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["id"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["platform"]["enum"][*]
    remove: true
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["platform"]["enum"]
    update:
      - aws-batch
      - aws-cloud
      - google-lifesciences
      - google-batch
      - azure-batch
      - k8s-platform
      - eks-platform
      - gke-platform
      - uge-platform
      - slurm-platform
      - lsf-platform
      - altair-platform
      - moab-platform
      - local-platform
      - seqeracompute-platform
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["dateCreated"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["lastUpdated"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["lastUsed"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["ComputeEnv_ComputeConfig_"]["properties"]["status"]
    update:
      x-speakeasy-param-readonly: true
  - target: $["components"]["schemas"]["CreateComputeEnvRequest"]
    update:
      x-speakeasy-entity: ComputeEnv
      x-speakeasy-entity-description: |

        This resource allows the management of Seqera compute environments.

        Seqera Platform compute environments define the execution platform where a pipeline will run.
        Compute environments enable users to launch pipelines on a growing number of cloud and on-premises platforms.

        Compute environments define the computational resources and configuration needed
        to run Nextflow workflows, including cloud provider settings, resource limits,
        and execution parameters.
  - target: $["components"]["schemas"]["CreateComputeEnvResponse"]
    update:
      x-speakeasy-entity: ComputeEnv

  # SeqeraComputeConfig modifications
  - target: $["components"]["schemas"]["SeqeraComputeConfig"]["properties"]["environment"]
    remove: true

  # ComputeConfig discriminator and state change handling
  - target: $.components.schemas.ComputeConfig.properties.discriminator
    update:
      x-speakeasy-param-readonly: true
      x-speakeasy-terraform-ignore: true

  # Ignore discriminator fields in all compute config schemas to prevent state changes
  - target: $.components.schemas.AltairPbsComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.AwsBatchConfig.properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.AzBatchConfig.properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.EksComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.GkeComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.GoogleBatchConfig.properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.GoogleLifeSciencesConfig.properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.K8sComputeConfig.properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.LsfComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.MoabComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.SeqeraComputeConfig.properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.SlurmComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true
  - target: $.components.schemas.UnivaComputeConfig.allOf[1].properties.discriminator
    update:
      x-speakeasy-terraform-ignore: true

  # Add AWS Forge validator to AWS Batch configuration
  - target: $.components.schemas.AwsBatchConfig
    update:
      x-speakeasy-plan-validators: awsForgeValidator

  # Add Azure Batch work directory validator
  # Must be a valid Azure Blob container URL with az:// prefix
  - target: $.components.schemas.AzBatchConfig.properties.workDir
    update:
      title: "Azure Batch Work Directory"
      description: "Must be a valid Azure Blob container URL with format az://container-name/path"
      example: "az://my-container/work"
      x-speakeasy-plan-validators: AzureBatchWorkDirValidator

  # Schema description
  - target: $.components.schemas.ComputeConfig
    update:
      description: |
        Configuration settings for compute environments including work directories,
        pre/post run scripts, and environment-specific parameters.

  # Field descriptions for ComputeConfig
  - target: $.components.schemas.ComputeConfig.properties.workDir
    update:
      description: Working directory path for workflow execution
  - target: $.components.schemas.ComputeConfig.properties.preRunScript
    update:
      description: Shell script to execute before workflow starts
  - target: $.components.schemas.ComputeConfig.properties.postRunScript
    update:
      description: Shell script to execute after workflow completes
  - target: $.components.schemas.ComputeConfig.properties.environment
    update:
      description: Array of environment variables for the compute environment
  - target: $.components.schemas.ComputeConfig.properties.nextflowConfig
    update:
      description: Nextflow configuration settings and parameters
  - target: $.components.schemas.ComputeConfig.properties.discriminator
    update:
      description: Read-only property identifying the compute platform type
