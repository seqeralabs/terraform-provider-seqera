overlay: 1.0.0
x-speakeasy-jsonpath: rfc9535
info:
  title: AWS Compute Environment Overlay
  version: 1.0.1

# ==============================================================================
# AWS COMPUTE ENVIRONMENT RESOURCE OVERLAY
# ==============================================================================
#
# This overlay enhances the AWS-specific compute environment resource with
# improved descriptions, validators, and Terraform-friendly naming.
#
# TERRAFORM EXAMPLES:
# -------------------
#
# Example 1: Basic AWS Batch configuration
# resource "seqera_aws_compute_env" "basic" {
#   name         = "aws-batch-basic"
#   workspace_id = 123
#   platform     = "aws-batch"
#   credentials_id = seqera_aws_credential.main.credentials_id
#
#   config = {
#     region     = "us-east-1"
#     work_dir   = "s3://my-bucket/work"
#   }
# }
#
# Example 2: AWS Batch with Spot instances and Fusion
# resource "seqera_aws_compute_env" "spot" {
#   name         = "aws-batch-spot"
#   workspace_id = 123
#   platform     = "aws-batch"
#   credentials_id = seqera_aws_credential.main.credentials_id
#
#   config = {
#     region         = "us-east-1"
#     work_dir       = "s3://my-bucket/work"
#     enable_fusion  = true
#     enable_wave    = true
#
#     forge = {
#       type            = "SPOT"
#       bid_percentage  = 70
#       min_cpus        = 0
#       max_cpus        = 256
#       instance_types  = ["m5.xlarge", "m5.2xlarge"]
#     }
#   }
# }
#
# ==============================================================================

actions:
  - target: $.paths
    update:
      "/compute-envs#aws":
        post:
          x-speakeasy-entity-operation:

            terraform-datasource: null

            terraform-resource: AWSBatchCE#create
          x-speakeasy-name-override: CreateAWSBatchCE
          summary: Create AWS compute environment
          description: Creates a new AWS compute environment. Append `?workspaceId` to create the environment in a workspace context.
          x-speakeasy-retries:
            strategy: backoff
            backoff:
              initialInterval: 5000
              maxInterval: 5000
              maxElapsedTime: 30000
              exponent: 1.0
            statusCodes:
              - 429
              - 500
              - 502
              - 503
              - 504
          tags:
            - compute-envs
          operationId: CreateAWSBatchCE
          parameters:
            - name: workspaceId
              in: query
              description: Workspace numeric identifier
              schema:
                type: integer
                format: int64
              required: true
          requestBody:
            description: AWS compute environment create request
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CreateAWSBatchCERequest"
            required: true
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/CreateAWSBatchCEResponse"
            "400":
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ErrorResponse"
            "403":
              description: Operation not allowed
            "409":
              description: Conflict - resource already exists
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ErrorResponse"
          security:
            - BearerAuth: []

      "/compute-envs/{computeEnvId}#aws":
        get:
          x-speakeasy-entity-operation:

            terraform-datasource: null

            terraform-resource: AWSBatchCE#read
          x-speakeasy-name-override: DescribeAWSBatchCE
          summary: Describe AWS compute environment
          description: Retrieves the details of the AWS compute environment identified by the given `computeEnvId`.
          tags:
            - compute-envs
          operationId: DescribeAWSBatchCE
          parameters:
            - name: computeEnvId
              in: path
              description: Compute environment string identifier
              required: true
              schema:
                type: string
            - name: workspaceId
              in: query
              description: Workspace numeric identifier
              schema:
                type: integer
                format: int64
              required: true
            - name: attributes
              in: query
              description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ComputeEnvQueryAttribute"
          responses:
            "200":
              description: OK
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/DescribeAWSBatchCEResponse"
            "400":
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ErrorResponse"
            "403":
              description: Operation not allowed
            "404":
              description: Compute environment not found
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ErrorResponse"
          security:
            - BearerAuth: []
        delete:
          x-speakeasy-entity-operation:

            terraform-datasource: null

            terraform-resource: AWSBatchCE#delete
          x-speakeasy-name-override: DeleteAWSBatchCE
          summary: Delete AWS compute environment
          description: Deletes the AWS compute environment identified by the given `computeEnvId`.
          tags:
            - compute-envs
          operationId: DeleteAWSBatchCE
          parameters:
            - name: computeEnvId
              in: path
              description: Compute environment string identifier
              required: true
              schema:
                type: string
            - name: workspaceId
              in: query
              description: Workspace numeric identifier
              schema:
                type: integer
                format: int64
          responses:
            "204":
              description: OK - No content
            "400":
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/ErrorResponse"
            "403":
              description: Operation not allowed
          security:
            - BearerAuth: []

  - target: $.components.schemas
    update:
      # AWS-specific compute environment schema
      AWSBatchCE_ComputeConfig:
        x-speakeasy-entity: AWSBatchCE
        x-speakeasy-entity-version: 1
        x-speakeasy-entity-description: |
          Manage AWS compute environments in Seqera platform using this resource.

          AWS compute environments define the execution platform where a pipeline will run
          on AWS infrastructure (AWS Batch, AWS Cloud, EKS).
        required:
          - config
          - name
          - platform
          - credentialsId
        type: object
        properties:
          credentialsId:
            type: string
            description: AWS credentials identifier
          orgId:
            type: integer
            format: int64
            readOnly: true
            x-speakeasy-param-readonly: true
          workspaceId:
            type: integer
            format: int64
            description: Workspace numeric identifier
          id:
            type: string
            description: Unique identifier for the compute environment
            x-speakeasy-param-readonly: true
          name:
            maxLength: 100
            type: string
            description: Display name for the compute environment
          description:
            type: string
            description: Optional description of the compute environment
            x-speakeasy-param-computed: false
          platform:
            type: string
            enum:
              - aws-batch
            description: AWS platform type
            x-speakeasy-param-optional: false
          status:
            type: string
            description: Compute environment status
            x-speakeasy-param-readonly: true
          dateCreated:
            type: string
            format: date-time
            description: Timestamp when the compute environment was created
            x-speakeasy-param-readonly: true
          lastUpdated:
            type: string
            format: date-time
            description: Timestamp when the compute environment was last updated
            x-speakeasy-param-readonly: true
          lastUsed:
            type: string
            format: date-time
            description: Timestamp when the compute environment was last used
            x-speakeasy-param-readonly: true
          deleted:
            type: boolean
            description: Flag indicating if the compute environment has been deleted
            x-speakeasy-param-readonly: true
          config:
            description: AWS-specific compute environment configuration
            $ref: '#/components/schemas/AwsBatchConfig'

      # AWS-specific request/response schemas
      CreateAWSBatchCERequest:
        type: object
        properties:
          computeEnv:
            $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'
          labelIds:
            type: array
            items:
              type: integer
              format: int64

      CreateAWSBatchCEResponse:
        type: object
        properties:
          computeEnvId:
            type: string

      UpdateAWSBatchCERequest:
        type: object
        properties:
          computeEnv:
            $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'

      DescribeAWSBatchCEResponse:
        type: object
        properties:
          computeEnv:
            $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'

      ListAWSBatchCEsResponse:
        type: object
        properties:
          computeEnvs:
            type: array
            items:
              $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'
          totalSize:
            type: integer
            format: int64

  # ============================================================================
  # FIELD DESCRIPTIONS AND VALIDATORS
  # ============================================================================

  # Make top-level AWS Compute Environment fields force replacement
  # NOTE: name field does NOT have force-new - it can be updated in-place
  - target: $.components.schemas.AWSBatchCE_ComputeConfig.properties.description
    update:
      x-speakeasy-param-force-new: true
  - target: $.components.schemas.AWSBatchCE_ComputeConfig.properties.platform
    update:
      x-speakeasy-param-force-new: true
  - target: $.components.schemas.AWSBatchCE_ComputeConfig.properties.credentialsId
    update:
      x-speakeasy-param-force-new: true
  - target: $.components.schemas.AWSBatchCE_ComputeConfig.properties.workspaceId
    update:
      x-speakeasy-param-force-new: true
  - target: $.components.schemas.AWSBatchCE_ComputeConfig.properties.config
    update:
      x-speakeasy-param-force-new: true

  # Add descriptions to AwsBatchConfig fields
  - target: $.components.schemas.AwsBatchConfig.properties.region
    update:
      description: |
        AWS region where the Batch compute environment will be created.
        Examples: us-east-1, eu-west-1, ap-southeast-2
      example: "us-east-1"
      x-speakeasy-param-force-new: true
      x-speakeasy-param-optional: false

  - target: $.components.schemas.AwsBatchConfig.properties.workDir
    update:
      description: |
        S3 bucket path for Nextflow work directory where intermediate files will be stored.
        Format: s3://bucket-name/path
      example: "s3://my-nextflow-bucket/work"
      pattern: "^s3://.+"
      x-speakeasy-param-force-new: true
      x-speakeasy-param-optional: false

  - target: $.components.schemas.AwsBatchConfig.properties.computeQueue
    update:
      description: Name of the AWS Batch compute queue
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.headQueue
    update:
      description: Name of the head job queue
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.executionRole
    update:
      description: |
        IAM role ARN for Batch execution (pulling container images, writing logs).
        Must have permissions for ECR and CloudWatch Logs.
        Format: arn:aws:iam::account-id:role/role-name
      example: "arn:aws:iam::123456789012:role/BatchExecutionRole"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.computeJobRole
    update:
      description: |
        IAM role ARN for compute jobs. Jobs assume this role during execution.
        Must have permissions for S3, CloudWatch, etc.
        Format: arn:aws:iam::account-id:role/role-name
      example: "arn:aws:iam::123456789012:role/BatchJobRole"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.headJobRole
    update:
      description: |
        IAM role ARN for the head job.
        Format: arn:aws:iam::account-id:role/role-name
      example: "arn:aws:iam::123456789012:role/BatchHeadJobRole"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.cliPath
    update:
      description: |
        Path to AWS CLI on compute instances. AWS CLI must be available at this path.
      example: "/home/ec2-user/miniconda/bin/aws"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.preRunScript
    update:
      description: |
        Bash script to run before workflow execution begins.
        Use for environment setup, loading modules, downloading reference data, etc.
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.postRunScript
    update:
      description: |
        Bash script to run after workflow execution completes.
        Use for cleanup, archiving results, sending notifications, etc.
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.headJobCpus
    update:
      description: "Number of CPUs allocated for the head job (default: 1)"
      example: 4
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.AwsBatchConfig.properties.headJobMemoryMb
    update:
      description: "Memory allocation for the head job in MB (default: 1024)"
      example: 8192
      x-speakeasy-param-force-new: true

  # Forge configuration descriptions - add force-new to all properties
  - target: $.components.schemas.ForgeConfig.properties.type
    update:
      description: |
        Type of compute instances to provision:
        - SPOT: Use EC2 Spot instances (cost-effective, can be interrupted)
        - EC2: Use On-Demand EC2 instances (reliable, higher cost)
        - FARGATE: Use AWS Fargate serverless compute
      example: "SPOT"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.minCpus
    update:
      description: |
        Minimum number of CPUs to maintain in the compute environment.
        Setting to 0 allows environment to scale to zero when idle.
      example: 0
      x-speakeasy-param-force-new: true
      x-speakeasy-param-optional: true

  - target: $.components.schemas.ForgeConfig.properties.maxCpus
    update:
      description: |
        Maximum number of CPUs available in the compute environment.
        Subject to AWS service quotas.
      example: 256
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.gpuEnabled
    update:
      description: |
        Enable GPU support for compute instances.
        When enabled, GPU-capable instance types will be selected.
      example: false
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.instanceTypes
    update:
      description: |
        List of EC2 instance types to use.
        Examples: ["m5.xlarge", "m5.2xlarge"], ["c5.2xlarge"], ["p3.2xlarge"]
        Default: ["optimal"] - AWS Batch selects appropriate instances
      example: ["m5.xlarge", "m5.2xlarge"]
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.allocStrategy
    update:
      description: |
        Strategy for allocating compute resources:
        - BEST_FIT: Selects instance type that best fits job requirements
        - BEST_FIT_PROGRESSIVE: Similar to BEST_FIT but widens search progressively
        - SPOT_CAPACITY_OPTIMIZED: For Spot instances, selects from pools with optimal capacity
        - SPOT_PRICE_CAPACITY_OPTIMIZED: Optimizes for both price and capacity
        Note: SPOT_CAPACITY_OPTIMIZED only valid when type is SPOT
      example: "SPOT_CAPACITY_OPTIMIZED"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.ebsAutoScale
    update:
      description: |
        Enable automatic EBS volume expansion.
        When enabled, EBS volumes automatically expand as needed.
      example: true
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.ebsBlockSize
    update:
      description: |
        Size of EBS root volume in GB (minimum 8 GB, maximum 16 TB).
      example: 100
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.vpcId
    update:
      description: |
        VPC ID where compute environment will be deployed.
        Format: vpc- followed by hexadecimal characters
      example: "vpc-1234567890abcdef0"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.subnets
    update:
      description: |
        List of subnet IDs for compute instances.
        Subnets must be in the specified VPC. Use multiple subnets for high availability.
        Must have sufficient IP addresses.
      example: ["subnet-12345", "subnet-67890"]
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.securityGroups
    update:
      description: |
        List of security group IDs to attach to compute instances.
        Security groups must allow necessary network access.
      example: ["sg-12345678"]
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.ec2KeyPair
    update:
      description: |
        EC2 key pair name for SSH access to compute instances.
        Key pair must exist in the specified region.
      example: "my-keypair"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.disposeOnDeletion
    update:
      description: |
        When set to true for AWS Batch forge environments, automatically deletes AWS resources
        created during compute environment setup when the Terraform resource is destroyed.

        The following AWS resources will be deleted:
        1. AWS Batch Compute Environments - The Batch compute environment itself
        2. AWS Batch Job Queues - Associated job queues (head queue, compute queue, dragen queue)
        3. EC2 Launch Templates - Launch templates for the compute instances
        4. IAM Roles - Execution roles, head job roles, and other service roles
        5. IAM Instance Profiles - Instance profiles attached to compute instances
        6. FSx File Systems - FSx for Lustre file systems (if created during forge)
        7. EFS File Systems - Elastic File Systems (if created during forge)

        Note: The AWS credentials associated with this compute environment must have appropriate
        permissions to delete these resources.

        Important: Deleting a workspace with active compute environments will bypass this cleanup
        and require manual removal of AWS resources. We recommend deleting compute environments
        before deleting workspaces.
      example: true
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.fargateHeadEnabled
    update:
      description: |
        Use Fargate for head job instead of EC2.
        Reduces costs by running head job on serverless compute.
        Only applicable when using EC2 for worker jobs.
      example: false
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.efsCreate
    update:
      description: Automatically create an EFS file system
      example: false
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.efsId
    update:
      description: |
        EFS file system ID to mount.
        Format: fs- followed by hexadecimal characters.
        EFS must be in the same VPC and region.
      example: "fs-1234567890abcdef0"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.efsMount
    update:
      description: |
        Path where EFS will be mounted in the container.
      example: "/mnt/efs"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.fsxName
    update:
      description: |
        FSx for Lustre file system name.
      example: "my-fsx-filesystem"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.fsxMount
    update:
      description: |
        Path where FSx will be mounted in the container.
      example: "/fsx"
      x-speakeasy-param-force-new: true

  - target: $.components.schemas.ForgeConfig.properties.fsxSize
    update:
      description: |
        Size of FSx file system in GB.
      example: 1200
      x-speakeasy-param-force-new: true

  # Fix typo: nvnmeStorageEnabled -> nvme_storage_enabled in Terraform
  - target: $.components.schemas.AwsBatchConfig.properties.nvnmeStorageEnabled
    update:
      x-speakeasy-name-override: nvme_storage_enabled
      description: |
        Enable NVMe instance storage for high-performance I/O.
        When enabled, NVMe storage volumes are automatically mounted and configured.
      example: true
      x-speakeasy-param-force-new: true
