openapi: 3.0.1
info:
  title: Seqera API
  description: |
    The Seqera Platform Terraform Provider enables infrastructure-as-code management of Seqera Platform resources. This provider allows you to programmatically create, configure, and manage organizations, workspaces, compute environments, pipelines, credentials, and other Seqera Platform components using Terraform.
  contact:
    url: https://seqera.io
    email: info@seqera.io
  version: 1.56.0
paths:
  /actions:
    get:
      summary: List actions
      description: "Lists all available actions in a user context, enriched by `attributes`. Append `?workspaceId` to list actions in a workspace context."
      tags:
        - actions
      operationId: ListActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create action
      description: Creates a new pipeline action. Append `?workspaceId` to associate the action with the given workspace.
      tags:
        - actions
      operationId: CreateAction
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Action create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#create
  /actions/labels/add:
    post:
      summary: Add labels to actions
      description: Adds the given list of labels to the given pipeline actions. Existing labels are preserved.
      tags:
        - labels
      operationId: AddLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/apply:
    post:
      summary: Replace action labels
      description: Applies the given list of labels to the given pipeline actions. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      tags:
        - labels
      operationId: ApplyLabelsToActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/labels/remove:
    post:
      summary: Remove labels from actions
      description: Removes the given list of labels from the given pipeline actions.
      tags:
        - labels
      operationId: RemoveLabelsFromActions
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateActionLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/types:
    get:
      summary: List action event types
      description: Lists the supported event types that trigger a pipeline action. Append `?workspaceId` to list event types in a workspace context.
      tags:
        - actions
      operationId: ListActionTypes
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventTypesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/validate:
    get:
      summary: Validate action name
      description: Confirms the validity of the given action name. Append `?name=<your_action_name>`.
      tags:
        - actions
      operationId: ValidateActionName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Action name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /actions/{actionId}:
    get:
      summary: Describe action
      description: Retrieves the details of the action identified by the given `actionId`.
      tags:
        - actions
      operationId: DescribeAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ActionQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#read
    put:
      summary: Update action
      description: Updates the details of the action identified by the given `actionId`. The `source` of an existing action cannot be changed.
      tags:
        - actions
      operationId: UpdateAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateActionRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      summary: Delete action
      description: Deletes the pipeline action identified by the given `actionId`.
      tags:
        - actions
      operationId: DeleteAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Action#delete
  /actions/{actionId}/launch:
    post:
      summary: Trigger Tower Launch action
      description: Triggers the execution of the Tower Launch action identified by the given `actionId`.
      tags:
        - actions
      operationId: LaunchAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Action launch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaunchActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaunchActionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /actions/{actionId}/pause:
    post:
      summary: Pause or resume action
      description: Pauses or resumes the pipeline action identified by the given `actionId`.
      tags:
        - actions
      operationId: PauseAction
      parameters:
        - name: actionId
          in: path
          description: Action string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /avatars:
    post:
      summary: Create the avatar image
      tags:
        - avatars
      operationId: CreateAvatar
      requestBody:
        description: Image file request
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
            encoding:
              image:
                contentType: application/octet-stream
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAvatarResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /avatars/{avatarId}:
    get:
      summary: Download the avatar image
      tags:
        - avatars
      operationId: DownloadAvatar
      parameters:
        - name: avatarId
          in: path
          description: Avatar string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found element
      security:
        - BearerAuth: []
  /compute-envs:
    get:
      summary: List compute environments
      description: "Lists all available compute environments in a user context. Append `?workspaceId` to list compute environments in a workspace context, and `?status` to filter by compute environment status."
      tags:
        - compute-envs
      operationId: ListComputeEnvs
      parameters:
        - name: status
          in: query
          description: Compute environment status
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComputeEnvsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create compute environment
      description: Creates a new compute environment. Append `?workspaceId` to create the environment in a workspace context.
      tags:
        - compute-envs
      operationId: CreateComputeEnv
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Compute environment create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComputeEnvRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#create
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000 # 5 seconds
          maxInterval: 5000 # 5 seconds (fixed interval)
          maxElapsedTime: 30000 # 30 seconds
          exponent: 1.0 # No exponential backoff, fixed interval
        statusCodes:
          - 429 # Rate limiting - should retry
          - 500 # Internal server error
          - 502 # Bad gateway
          - 503 # Service unavailable
          - 504 # Gateway timeout
  /compute-envs/validate:
    get:
      summary: Validate compute environment name
      description: Confirms the validity of the given compute environment name in a user context. Append `?name=<your_ce_name>`.
      tags:
        - compute-envs
      operationId: ValidateComputeEnvName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Compute environment name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /compute-envs/{computeEnvId}:
    get:
      summary: Describe compute environment
      description: Retrieves the details of the compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DescribeComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ComputeEnvQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#read
    put:
      summary: Update compute environment
      description: Updates the details of the compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: UpdateComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Compute environment update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateComputeEnvRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#update
    delete:
      summary: Delete compute environment
      description: Deletes the compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DeleteComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Conflicting deletion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: ComputeEnv#delete
  /compute-envs/{computeEnvId}/primary:
    post:
      summary: Define primary compute environment
      description: |
        Designates a compute environment as the primary (default) compute
        environment for a workspace. The primary compute environment is used
        by default when launching workflows in the workspace.
      tags:
        - compute-envs
      operationId: UpdateComputeEnvPrimary
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier to designate as primary
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier where the compute environment will be set as primary
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PrimaryComputeEnv#create
  /credentials:
    get:
      summary: List credentials
      description: "Lists all available credentials in a user context. Append `?workspaceId` to list credentials in a workspace context, and `?platformId` to filter credentials by computing platform."
      tags:
        - credentials
      operationId: ListCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: platformId
          in: query
          description: Platform string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create credentials
      description: Creates new credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Credentials create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCredentialsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#create
  /credentials/validate:
    get:
      summary: Validate credential name
      description: Validates the given credentials name. Append `?name=<your_credential_name>`.
      tags:
        - credentials
      operationId: ValidateCredentialsName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Credentials name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /credentials/{credentialsId}:
    get:
      summary: Describe credentials
      description: Retrieves the details of the credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCredentialsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#read
    put:
      summary: Update credentials
      description: Updates the details of the credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Credentials update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCredentialsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#update
    delete:
      summary: Delete credentials
      description: Deletes the credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: checked
          in: query
          description: If set credentials deletion will be blocked by running jobs that depend on them
          schema:
            type: boolean
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Running jobs block the deletion of this credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCredentialsConflictResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Credential#delete
  /data-links:
    get:
      summary: List data-links
      description: Retrieves all available data-links in a user context. Append `?workspaceId={your-workspace-id}` to retrieve data-links in a workspace context.
      tags:
        - data-links
      operationId: ListDataLinks
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: search
          in: query
          description: "Free text search criteria â€” data-link name and keywords: `region`, `provider`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: visibility
          in: query
          description: Filter results by visibility
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinksListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, or the API is disabled in the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create data-link
      description: Creates a new data-link in a user context. Append `?workspaceId=` to create the data-link in a workspace context.
      tags:
        - data-links
      operationId: CreateCustomDataLink
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Data-link creation request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkCreateRequest"
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled in the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#create
  /data-links/cache/refresh:
    get:
      summary: Refresh data-link cache
      description: Refreshes the data-link cache for the given `workspaceId` or `credentialsId`.
      tags:
        - data-links
      operationId: RefreshDataLinkCache
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}:
    get:
      summary: Describe data-link
      description: Retrieves the details of the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: DescribeDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#read
    put:
      summary: Update data-link
      description: Update the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: UpdateCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Data-link update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkUpdateRequest"
        required: true
      responses:
        "200":
          description: Success â€” Data-link updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#update
    delete:
      summary: Delete data-link
      description: Deletes the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: DeleteCustomDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success â€” Data-link deleted
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "204":
          description: DeleteCustomDataLink 204 response
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: DataLink#delete
  /data-links/{dataLinkId}/browse:
    get:
      summary: Explore data-link
      description: Retrieves the content of the data-link associated with the given `dataLinkId`.
      tags:
        - data-links
      operationId: ExploreDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials string identifier
          schema:
            type: string
        - name: search
          in: query
          description: Prefix search of data-link content
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Token used to fetch the next page of items
          schema:
            type: string
        - name: pageSize
          in: query
          description: "Number of items to return per page. If ommitted, a default maximum value is returned."
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse-tree:
    get:
      tags:
        - data-links
      summary: Explore a data-link tree
      description: Provides a list of all files in the provided paths (including files in sub-paths).
      operationId: ExploreDataLinkTree
      parameters:
        - name: dataLinkId
          in: path
          description: Datalink identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Optional credentials identifier
          schema:
            type: string
        - name: paths
          in: query
          description: List of paths
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentTreeListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace, credentials or data link are not found or when the api is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/browse/{path}:
    get:
      summary: Explore data-link path
      description: Retrieves the content of the data-link associated with the given `dataLinkId`, at the given `path`.
      tags:
        - data-links
      operationId: ExploreDataLink_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Content path
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: search
          in: query
          description: Prefix search on data-link content
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Token used to fetch the next page of items
          schema:
            type: string
        - name: pageSize
          in: query
          description: "Number of items to return per page. If ommitted, a default maximum value is returned."
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkContentResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/content:
    delete:
      tags:
        - data-links
      summary: Delete data-link content
      description: Deletes the content of the data-link associated with the given `dataLinkId`. The data-link itself is preserved.
      operationId: DeleteDataLinkItem
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkDeleteItemRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDeleteItemResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/download/{filePath}:
    get:
      tags:
        - data-links
      summary: Download data-link file at path
      description: Downloads the content at the given `filePath` in the data-link associated with the given `dataLinkId`.
      operationId: DownloadDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: path
          description: File path to download
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/generate-download-url:
    get:
      tags:
        - data-links
      summary: Generate data-link file download URL
      description: Returns a URL to download files from the data-link associated with the given `dataLinkId`.
      operationId: GenerateDownloadUrlDataLink
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: filePath
          in: query
          description: File path to download
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: preview
          in: query
          description: "Whether to generate the URL for preview purposes or direct download (default: false)"
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadUrlResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/script/download:
    get:
      tags:
        - data-links
      summary: Generate download script
      description: "Creates a script to download files from the data-link associated with the given `dataLinkId`. Append `?dirs` or `?files` to specify a list of files or paths to download within the data-link."
      operationId: GenerateDownloadScript
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: dirs
          in: query
          description: List of paths to directories to download
          schema:
            type: array
            items:
              type: object
        - name: files
          in: query
          description: List of paths to files to download
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkDownloadScriptResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload:
    post:
      tags:
        - data-links
      summary: Generate file upload URL
      description: |-
        Creates a URL to upload files to the data-link associated with the given `dataLinkId`.
        For AWS S3 data-links, an additional follow-up request must be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish:
    post:
      tags:
        - data-links
      summary: Finish data-link file upload
      description: Finish upload of a data-link file. This is necessary for AWS S3 data-links (`DataLinkProvider=aws`) to finalize a successful file upload, or abort an upload if an error was encountered while uploading a file using an upload URL from the `/upload` endpoint.
      operationId: FinishDataLinkUpload
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/finish/{dirPath}:
    post:
      tags:
        - data-links
      summary: Finish data-link file upload to given path
      description: Finish upload of a data-link file, specifying a file path (`dirPath`). This is necessary for AWS S3 data-links (`DataLinkProvider=aws`) to finalize a successful file upload, or abort an upload if an error was encountered while uploading a file using an upload URL from the `/upload` endpoint.
      operationId: FinishDataLinkUpload_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkFinishMultiPartUploadRequest"
        required: true
      responses:
        "202":
          description: No content
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound â€” workspace or credentials not found, API disabled for the workspace, or data-link or path not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: FinishDataLinkUpload_1 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /data-links/{dataLinkId}/upload/{dirPath}:
    post:
      tags:
        - data-links
      summary: Generate data-link file upload URL (to given path)
      description: |-
        Creates a URL to upload files to the data-link associated with the given `dataLinkId`, specifying a file path (`dirPath`).
        For AWS S3 data-links, an additional follow-up request must be sent after your file upload has completed (or encountered an error) to finalize the upload - see the `/upload/finish` endpoint.
      operationId: GenerateDataLinkUploadUrl_1
      parameters:
        - name: dataLinkId
          in: path
          description: Data-link string identifier
          required: true
          schema:
            type: string
        - name: dirPath
          in: path
          description: Path to the destination directory
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          description: Credentials identifier
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: Origin
          in: header
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataLinkMultiPartUploadRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataLinkMultiPartUploadResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the API is disabled or the file does not exist or data link not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets:
    get:
      summary: List datasets
      description: Lists all available datasets in a user context. Append `?workspaceId` to list datasets in a workspace context.
      tags:
        - datasets
      operationId: ListDatasetsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create dataset
      description: Creates a new dataset in the user context. Include the dataset file and details in your request body. Append `?workspaceId` to create the dataset in a workspace context.
      tags:
        - datasets
      operationId: CreateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Dataset create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Datasets#create
  /datasets/versions:
    get:
      summary: List latest dataset versions
      description: Lists the latest version of each dataset in the user context. Append `?workspaceId` to list latest versions in a workspace context.
      tags:
        - datasets
      operationId: ListLatestDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          description: Dataset MIME type
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}:
    put:
      summary: Update dataset
      description: Updates the details of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UpdateDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Dataset#update
    delete:
      summary: Delete dataset
      description: Deletes the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DeleteDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Dataset#delete
  /datasets/{datasetId}/metadata:
    get:
      summary: Describe dataset
      description: Retrieves the metadata of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DescribeDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Dataset#read
  /datasets/{datasetId}/upload:
    post:
      summary: Upload new dataset version
      description: Uploads the CSV or TSV content to create a new version of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UploadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: header
          in: query
          description: Uploaded file has header
          schema:
            type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      summary: Download dataset content
      description: Downloads the content of the dataset identified by the given `datasetId` and `version`.
      tags:
        - datasets
      operationId: DownloadDatasetV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Version number to download
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: File name for the downloaded dataset content
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /datasets/{datasetId}/versions:
    get:
      summary: List all dataset versions
      description: Lists all versions of the given `datasetId`.
      tags:
        - datasets
      operationId: ListDatasetVersionsV2
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          description: Optional MIME type filter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /ga4gh/wes/v1/runs:
    get:
      summary: "GA4GH: List runs"
      description: Uses the GA4GH workflow execution service API to list all run records.
      tags:
        - ga4gh
      operationId: Ga4ghRunList
      parameters:
        - name: page_size
          in: query
          description: Page size
          schema:
            type: integer
            format: int32
        - name: page_token
          in: query
          description: Page token
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunListResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
    post:
      summary: "GA4GH: Launch run"
      description: "Uses the GA4GH workflow execution service API to launch a new run. Runs are launched in the user workspace context by default. To launch in an organization workspace context, include the `workspaceId` in `workflow_engine_parameters`. Runs are launched with the workspace primary compute environment by default. To launch with a different compute environment, include the `computeEnvId` in `workflow_engine_parameters`."
      tags:
        - ga4gh
      operationId: Ga4ghRunCreate
      requestBody:
        description: Run request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RunRequest"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/RunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}:
    get:
      summary: "GA4GH: Describe run"
      description: Uses the GA4GH workflow execution service API to retrieve the details of the run assoiated with the given `run_id`.
      tags:
        - ga4gh
      operationId: Ga4ghRunDescribe
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunLog"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/cancel:
    post:
      summary: "GA4GH: Cancel run"
      description: Uses the GA4GH workflow execution service API to cancel the run associated with the given `run_id`.
      tags:
        - ga4gh
      operationId: Ga4ghRunCancel
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunId"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/runs/{run_id}/status:
    get:
      summary: "GA4GH: Retrieve run status"
      description: Uses the GA4GH workflow execution service API to retrieve the status of the run associated with the given `run_id`.
      tags:
        - ga4gh
      operationId: Ga4ghRunStatus
      parameters:
        - name: run_id
          in: path
          description: Run string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunStatus"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /ga4gh/wes/v1/service-info:
    get:
      summary: GA4GH workflow execution service API info
      tags:
        - ga4gh
      operationId: Ga4ghServiceInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfo"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WesErrorResponse"
        "403":
          description: Operation not allowed
  /labels:
    get:
      summary: List labels
      description: Lists all available labels in a user context. Append `?workspaceId` to list labels in a workspace context.
      tags:
        - labels
      operationId: ListLabels
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
        - name: type
          in: query
          description: Label type
          schema:
            $ref: "#/components/schemas/LabelType"
        - name: isDefault
          in: query
          description: Label default flag
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLabelsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#read
    post:
      summary: Create label
      description: "Creates a new label or returns an existing label based on name/value. By default the operation works in a user context, append `?workspaceId` to create/retrieve a label in a workspace context. Resource labels include `resource: true` and a `value`."
      tags:
        - labels
      operationId: CreateLabel
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Provide a label `name`. Set `resource: true` for resource labels. Only resource labels have a `value` â€” if `resource: true`, include a `value`. Else, omit `value` from your request body."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLabelRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLabelResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#create
  /labels/{labelId}:
    put:
      summary: Update label
      description: Updates the label identified by the given `labelId`.
      tags:
        - labels
      operationId: UpdateLabel
      parameters:
        - name: labelId
          in: path
          description: Label numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-readonly: true
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Label update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLabelRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLabelResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#update
    delete:
      summary: Delete label
      description: Deletes the label identified by the given `labelId`.
      tags:
        - labels
      operationId: DeleteLabel
      parameters:
        - name: labelId
          in: path
          description: Label numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-readonly: true
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Labels#delete
  /launch/{launchId}:
    get:
      summary: Describe Launch record
      description: Retrieves the details of the launch identified by the given `launchId`.
      tags:
        - launch
      operationId: DescribeLaunch
      parameters:
        - name: launchId
          in: path
          description: Launch string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /launch/{launchId}/datasets:
    get:
      summary: Describe launch datasets
      description: Retrieves the details of the datasets used in the launch identified by the given `launchId`.
      tags:
        - datasets
      operationId: ListLaunchDatasetVersions
      parameters:
        - name: launchId
          in: path
          description: Launch string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs:
    get:
      summary: List organizations
      description: Lists all available organizations in a user context.
      tags:
        - orgs
      operationId: ListOrganizations
      parameters:
        - name: role
          in: query
          description: Organization user role identifier
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create organization
      description: Creates a new organization.
      tags:
        - orgs
      operationId: CreateOrganization
      requestBody:
        description: Organization create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#create
  /orgs/validate:
    get:
      summary: Validate organization name
      description: Confirms the validity of the given organization name. Append `?name=<your_org_name>`.
      tags:
        - orgs
      operationId: ValidateOrganizationName
      parameters:
        - name: name
          in: query
          description: Organization name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}:
    get:
      summary: Describe organization
      description: Retrieves the details of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: DescribeOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#read
    put:
      summary: Update organization
      description: Updates the details of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: UpdateOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      requestBody:
        description: Organization update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#update
    delete:
      summary: Delete organization
      description: Deletes the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: DeleteOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Orgs#delete
  /orgs/{orgId}/collaborators:
    get:
      summary: List organization collaborators
      description: Lists the collaborators of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: ListOrganizationCollaborators
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members:
    get:
      summary: List organization members
      description: Lists the members of the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: ListOrganizationMembers
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/add:
    put:
      summary: Add organization member
      description: Adds a new member to the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: CreateOrganizationMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member addition request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMemberRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddMemberResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/leave:
    delete:
      summary: Leave organization
      description: Removes the requesting user from the organization identified by the given `orgId`.
      tags:
        - orgs
      operationId: LeaveOrganization
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}:
    delete:
      summary: Delete member
      description: Deletes the member identified by the given `memberId`.
      tags:
        - orgs
      operationId: DeleteOrganizationMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Organization member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/members/{memberId}/role:
    put:
      summary: Update member role
      description: Updates the role of the member identified by the given `memberId`.
      tags:
        - orgs
      operationId: UpdateOrganizationMemberRole
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: memberId
          in: path
          description: Organization member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member role update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMemberRoleRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/quotas:
    get:
      summary: Describe organization quotas
      description: Retrieves the details of the organization quotas identified by the given `orgId`.
      tags:
        - orgs
      operationId: DescribeOrganizationQuotas
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: include
          in: query
          description: Optional list of quota names to include
          schema:
            type: array
            items:
              type: object
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationQuotasResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams:
    get:
      summary: List organization teams
      description: Lists all teams in the organization identified by the given `orgId`.
      tags:
        - teams
      operationId: ListOrganizationTeams
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create team
      description: Creates a new team in the organization identified by the given `orgId`.
      tags:
        - teams
      operationId: CreateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: false
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#create
  /orgs/{orgId}/teams/validate:
    get:
      summary: Validate team name
      description: Confirms the validity of the given team name. Append `?name=<your_team_name>`.
      tags:
        - teams
      operationId: ValidateTeamName
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Team name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}:
    get:
      summary: Describe team
      description: Retrieves the details of the team identified by the given `teamId`.
      tags:
        - teams
      operationId: DescribeOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTeamResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#read
    put:
      summary: Update team
      description: Updates the details of the team identified by the given `teamId`.
      tags:
        - teams
      operationId: UpdateOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      requestBody:
        description: Team update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "204":
          description: UpdateOrganizationTeam 204 response
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#update
    delete:
      summary: Delete team
      description: Deletes the team identified by the given `teamId`.
      tags:
        - teams
      operationId: DeleteOrganizationTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Teams#delete
  /orgs/{orgId}/teams/{teamId}/members:
    get:
      summary: List team members
      description: Lists the team members associated with the given `teamId`.
      tags:
        - teams
      operationId: ListOrganizationTeamMembers
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create team member
      description: Adds a new member to the team identified by the given `teamId`.
      tags:
        - teams
      operationId: CreateOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      requestBody:
        description: Team create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamMemberRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTeamMemberResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/members/{memberId}/delete:
    delete:
      summary: Delete team member
      description: Deletes the team member identified by the given `memberId`.
      tags:
        - teams
      operationId: DeleteOrganizationTeamMember
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: memberId
          in: path
          description: Member numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/teams/{teamId}/workspaces:
    get:
      summary: List team workspaces
      description: Lists all the workspaces of which the given `teamId` is a participant.
      tags:
        - teams
      operationId: ListWorkspacesByTeam
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: teamId
          in: path
          description: Team numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Search criteria
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces:
    get:
      summary: List organization workspaces
      description: Lists the organization workspaces in `orgId` to which the requesting user belongs.
      tags:
        - workspaces
      operationId: ListWorkspaces
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspaces#read
    post:
      summary: Create workspace
      description: Creates a new organization workspace.
      tags:
        - workspaces
      operationId: CreateWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: false
      requestBody:
        description: Workspace create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#create
  /orgs/{orgId}/workspaces/validate:
    get:
      summary: Validate workspace name
      description: Confirms the validity of the given workspace name. Append `?name=<your_workspace_name>`.
      tags:
        - workspaces
      operationId: WorkspaceValidate
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: name
          in: query
          description: Workspace name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}:
    get:
      summary: Describe workspace
      description: Retrieves the details of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: DescribeWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-name-override: id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#read
    put:
      summary: Update workspace
      description: Updates the details of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: UpdateWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-name-override: id
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicate name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#update
    delete:
      summary: Delete workspace
      description: Deletes the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: DeleteWorkspace
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-name-override: id
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workspace#delete
  /orgs/{orgId}/workspaces/{workspaceId}/participants:
    get:
      summary: List workspace participants
      description: Lists the participants of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: ListWorkspaceParticipants
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListParticipantsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      summary: Leave workspace
      description: Removes the requesting user from the given workspace.
      tags:
        - workspaces
      operationId: LeaveWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/add:
    put:
      summary: Create workspace participant
      description: Adds a new participant to the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: CreateWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Participant addition request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddParticipantRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddParticipantResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}:
    delete:
      summary: Delete workspace participant
      description: Deletes the given participant from the given workspace.
      tags:
        - workspaces
      operationId: DeleteWorkspaceParticipant
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          description: Participant numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/participants/{participantId}/role:
    put:
      summary: Update participant role
      description: Updates the role of the given participant in the given workspace.
      tags:
        - workspaces
      operationId: UpdateWorkspaceParticipantRole
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: participantId
          in: path
          description: Participant numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Participant role update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateParticipantRoleRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /orgs/{orgId}/workspaces/{workspaceId}/settings/studios:
    get:
      summary: List workspace Studios settings
      description: Retrieves the Studios settings of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: FindDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioWorkspaceSettingsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    put:
      summary: Update workspace Studios settings
      description: Updates the Studios settings of the workspace identified by the given `workspaceId`.
      tags:
        - workspaces
      operationId: UpdateDataStudiosWorkspaceSettings
      parameters:
        - name: orgId
          in: path
          description: Organization numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: path
          description: Optional workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Workspace update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWorkspaceRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "200":
          description: UpdateDataStudiosWorkspaceSettings 200 response
          content:
            application/json:
              schema:
                type: object
      security:
        - BearerAuth: []
  /pipeline-secrets:
    get:
      summary: List pipeline secrets
      description: Lists all available pipeline secrets in a user context. Append `?workspaceId` to list secrets in a workspace context.
      tags:
        - pipeline-secrets
      operationId: ListPipelineSecrets
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineSecretsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create pipeline secret
      description: Creates a new pipeline secret in the user context. Append `?workspaceId` to create the secret in a workspace context.
      tags:
        - pipeline-secrets
      operationId: CreatePipelineSecret
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier where the secret will be stored
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: Pipeline secret create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineSecretRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineSecretResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#create
  /pipeline-secrets/validate:
    get:
      summary: Validate secret name
      description: Confirms the validity of the given pipeline secret name in a user context. Append `?name=<your_secret_name>`. Append `?workspaceId` to validate the name in a workspace context.
      tags:
        - pipeline-secrets
      operationId: ValidatePipelineSecretName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Secret name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipeline-secrets/{secretId}:
    get:
      summary: Describe pipeline secret
      description: Retrieves the details of the pipeline secret identified by the given `secretId`.
      tags:
        - pipeline-secrets
      operationId: DescribePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineSecretResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#read
    put:
      summary: Update secret
      description: Updates the pipeline secret identified by the given `secretId`.
      tags:
        - pipeline-secrets
      operationId: UpdatePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Secret update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineSecretRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#update
    delete:
      summary: Delete secret
      description: Deletes the pipeline secret identified by the given `secretId`.
      tags:
        - pipeline-secrets
      operationId: DeletePipelineSecret
      parameters:
        - name: secretId
          in: path
          description: Secret numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: PipelineSecret#delete
  /pipelines:
    get:
      summary: List pipelines
      description: "Lists all available pipelines in a user context, enriched by `attributes`. Append `workspaceId` to list pipelines in a workspace context."
      tags:
        - pipelines
      operationId: ListPipelines
      parameters:
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status, `computeEnv`). Returns an empty value (`labels: null`, etc.) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
        - name: visibility
          in: query
          description: Filter visibility parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelinesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create pipeline
      description: Creates a new pipeline in a user context. Append `?workspaceId` to create the pipeline in a workspace context.
      tags:
        - pipelines
      operationId: CreatePipeline
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline creation request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePipelineRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#create
  /pipelines/info:
    get:
      summary: Describe remote pipeline repository
      description: Retrieves the details of a remote Nextflow pipeline Git repository. Append the repository name or full URL with `?name`.
      tags:
        - pipelines
      operationId: DescribePipelineRepository
      parameters:
        - name: name
          in: query
          description: Pipeline repository name or URL
          schema:
            type: string
        - name: revision
          in: query
          description: Pipeline revision
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: mainScript
          in: query
          description: Pipeline alternative main.nf
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/add:
    post:
      summary: Add labels to pipelines
      description: Adds the given list of labels to the given pipelines. Existing labels are preserved.
      tags:
        - labels
      operationId: AddLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/apply:
    post:
      summary: Replace pipeline labels
      description: Applies the given list of labels to the given pipelines. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      tags:
        - labels
      operationId: ApplyLabelsToPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/labels/remove:
    post:
      summary: Remove labels from pipelines
      description: Removes the given list of labels from the given pipelines.
      tags:
        - labels
      operationId: RemoveLabelsFromPipelines
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePipelineLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/repositories:
    get:
      summary: List user pipeline repositories
      description: "Lists known Nextflow pipeline Git repositories, extracted from existing runs. Append `?workspaceId` to list repositories in a workspace context."
      tags:
        - pipelines
      operationId: ListPipelineRepositories
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPipelineInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/validate:
    get:
      summary: Validate pipeline name
      description: Confirms the validity of the given pipeline `name` in a user context. Append `?name=<your_pipeline_name>`. Append `?workspaceId` to validate the name in a workspace context.
      tags:
        - pipelines
      operationId: ValidatePipelineName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Pipeline name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}:
    get:
      summary: Describe pipeline
      description: "Retrieves the details of the pipeline identified by the given `pipelineId`, enriched by `attributes`."
      tags:
        - pipelines
      operationId: DescribePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status, `computeEnv`). Returns an empty value (`labels: null`, etc.) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#read
    put:
      summary: Update pipeline
      description: "Updates the details of the pipeline identified by the given `pipelineId`. \n            **Note**: If `labelIds` is `null`, empty, or ommitted, existing pipeline labels are removed.\n            Include `labelIds: [<label-id-1>,<label-id-2>]` to override existing labels. Labels to be preserved must be included.\n            To append a list of labels to multiple pipelines, use `/pipelines/labels/add`."
      tags:
        - pipelines
      operationId: UpdatePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Pipeline update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePipelineRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePipelineResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#update
    delete:
      summary: Delete pipeline
      description: Deletes the pipeline identified by the given `pipelineId`.
      tags:
        - pipelines
      operationId: DeletePipeline
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Pipeline#delete
  /pipelines/{pipelineId}/launch:
    get:
      summary: Describe pipeline launch
      description: Retrieves the launch details of the pipeline identified by the given `pipelineId`.
      tags:
        - pipelines
      operationId: DescribePipelineLaunch
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /pipelines/{pipelineId}/schema:
    get:
      summary: Describe pipeline schema
      description: "Retrieves the pipeline schema of the pipeline identified by the given `pipelineId`, enriched by `attributes`.\n            `200 - OK` responses include the pipeline schema.\n            `204 - OK` responses indicate a successful request, with no saved schema found for the given pipeline ID.\n            "
      tags:
        - pipelines
      operationId: DescribePipelineSchema
      parameters:
        - name: pipelineId
          in: path
          description: Pipeline numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response: `schema` returns the pipeline schema, `params` returns the pipeline config. Returns all if `attributes` is omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/PipelineSchemaAttributes"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PipelineSchemaResponse"
        "204":
          description: Request OK - No schema found for given pipeline ID
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms:
    get:
      summary: List platforms
      description: Lists all available computing platforms in a user context. Append `?workspaceId` to list platforms in a workspace context.
      tags:
        - platforms
      operationId: ListPlatforms
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlatformsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms/{platformId}:
    get:
      summary: Describe platform
      description: Retrieves the details of the computing platform identified by the given `platformId`.
      tags:
        - platforms
      operationId: DescribePlatform
      parameters:
        - name: platformId
          in: path
          description: Platform string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: regionId
          in: query
          required: true
          schema:
            type: string
        - name: credentialsId
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePlatformResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /platforms/{platformId}/regions:
    get:
      summary: List platform regions
      description: Lists the available regions for the computing platform identified by the given `platformId`.
      tags:
        - platforms
      operationId: ListPlatformRegions
      parameters:
        - name: platformId
          in: path
          description: Platform string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /service-info:
    get:
      summary: General Seqera service features and version.
      tags:
        - service-info
      operationId: Info
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInfoResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /studios:
    get:
      summary: List Studios
      description: Lists all available Studios in a user context. Append `?workspaceId` to list Studios in a workspace context.
      tags:
        - studios
      operationId: ListDataStudios
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Optional search criteria, allowing free text search on name and templateUrl and keywords: `userId`, `computeEnvId` and `status`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: attributes
          in: query
          description: "Optional attribute values to be included in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DataStudioQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the workspace is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    post:
      summary: Create Studio
      description: "Creates a new Studio environment, starting it by default. Default behavior can be changed using the query parameter `autoStart=false`."
      tags:
        - studios
      operationId: CreateDataStudio
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: autoStart
          in: query
          description: Optionally disable the Studio's automatic launch when it is created.
          schema:
            type: boolean
      requestBody:
        description: Create Studio request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCreateRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
        "404":
          description: "NotFound, when the workspace or compute environment is not found or when the API is disabled."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - duplicated name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "200":
          description: Create Studio 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCreateResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Studios#create
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000 # 5 seconds
          maxInterval: 5000 # 5 seconds (fixed interval)
          maxElapsedTime: 30000 # 30 seconds
          exponent: 1.0 # No exponential backoff, fixed interval
        statusCodes:
          - 400
  /studios/data-links:
    get:
      summary: List mounted data-links
      description: Lists the IDs of all available data-links mounted in existing Studios. Append `orgId` or `?workspaceId` to list mounted data-links in an organization or workspace context, respectively.
      tags:
        - studios
      operationId: ListMountedDataLinkIds
      parameters:
        - name: orgId
          in: query
          description: Organization numeric identifier
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          description: Optional Studio status
          schema:
            type: string
        - name: exclude
          in: query
          description: Optional Studio session ID to exclude in the request.
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioMountedLinksResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/templates:
    get:
      summary: List available Studio templates
      description: Returns the list of available, configured Studio templates.
      tags:
        - studios
      operationId: ListDataStudioTemplates
      parameters:
        - name: workspaceId
          in: query
          description: Workspace identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Ok - paginated list of available Studio templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioTemplatesListResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: NotFound, when the API is disabled for the workspace.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/validate:
    get:
      summary: Validate Studio name
      description: Confirms the availability of the given name for a Studio in the user context. Append `?workspaceId=` to validate the name in a workspace context.
      tags:
        - studios
      operationId: ValidateDataStudioName
      parameters:
        - name: workspaceId
          in: query
          description: Workspace identifier
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Studio name to validate
          schema:
            type: string
      responses:
        "204":
          description: "Ok - No content, if the name is valid and available."
        "400":
          description: "Bad request, if the name is not valid."
        "409":
          description: "Conflict, name duplicated in the given context."
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}:
    get:
      summary: Describe Studio
      description: Retrieves the details of the Studio session identified by the given `sessionId`.
      tags:
        - studios
      operationId: DescribeDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "202":
          description: "Accepted, when the Studio is fetching mounted data links in the background."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Studios#read
    delete:
      summary: Delete Studio
      description: "Deletes the Studio associated with the given Studio session ID."
      tags:
        - studios
      operationId: DeleteDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
          x-speakeasy-param-optional: true
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "404":
          description: "NotFound, when the Studio is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Studios#delete
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 3000
          maxInterval: 10000
          maxElapsedTime: 30000
          exponent: 1.5
        statusCodes:
          - 400
  /studios/{sessionId}/checkpoints:
    get:
      summary: List Studio checkpoints
      description: "Retrieves the list of checkpoints for the given Studio session ID."
      tags:
        - studios
      operationId: ListDataStudioCheckpoints
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: search
          in: query
          description: "Optional search criteria, allowing free text search on name and keywords: `before` and `after`."
          schema:
            type: string
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioListCheckpointsResponse"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}/checkpoints/{checkpointId}:
    get:
      summary: Get Studio checkpoint
      description: "Retrieves the details of the given Studio checkpoint ID."
      tags:
        - studios
      operationId: GetDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          description: "Numeric identifier of the checkpoint."
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the Studio or the checkpoint is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
    put:
      summary: Update Studio checkpoint name
      description: "Updates the name of the given Studio checkpoint ID."
      tags:
        - studios
      operationId: UpdateDataStudioCheckpoint
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: checkpointId
          in: path
          description: "Numeric identifier of the checkpoint."
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioCheckpointUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioCheckpointDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the Studio or the checkpoint is not found or when the API is disabled for the workspace."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: "Conflict, when the checkpoint name conflicts with an existing checkpoint for the same Studio."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Operation not allowed."
      security:
        - BearerAuth: []
  /studios/{sessionId}/lifespan:
    post:
      description: "Extends the lifespan of the given Studio session ID."
      tags:
        - studios
      operationId: ExtendDataStudioLifespan
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioDto"
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}/start:
    put:
      summary: Start Studio
      description: "Starts the given Studio session ID."
      tags:
        - studios
      operationId: StartDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "An optional overriding configuration for the studio to be started."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataStudioStartRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStartResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /studios/{sessionId}/stop:
    put:
      summary: Stop Studio
      description: "Stops the given Studio session ID."
      tags:
        - studios
      operationId: StopDataStudio
      parameters:
        - name: sessionId
          in: path
          description: Studio session numeric identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataStudioStopResponse"
        "404":
          description: "NotFound, when the studio is not found or when the API is disabled for the workspace"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /tokens:
    get:
      summary: List tokens
      description: "Retrieves the list of all available API access tokens."
      tags:
        - tokens
      operationId: TokenList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccessTokensResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Tokens#read
    post:
      summary: Create token
      description: "Creates an API access token with the details in the given request body."
      tags:
        - tokens
      operationId: CreateToken
      requestBody:
        description: Access token create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessTokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccessTokenResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Tokens#create
  /tokens/delete-all:
    delete:
      summary: Delete all user tokens
      description: "Deletes all API access tokens in the user context."
      tags:
        - tokens
      operationId: DeleteAllTokens
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /tokens/{tokenId}:
    delete:
      summary: Delete token
      description: "Deletes the given API access token ID."
      tags:
        - tokens
      operationId: DeleteToken
      parameters:
        - name: tokenId
          in: path
          description: Token numeric identifier
          required: true
          schema:
            type: integer
            format: int64
          x-speakeasy-param-optional: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Tokens#delete
  /trace/create:
    post:
      summary: Create workflow execution trace
      description: "Creates a new workflow execution trace."
      tags:
        - trace
      operationId: CreateTrace
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Trace create request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCreateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCreateResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/begin:
    put:
      summary: Signal workflow execution start
      description: "Updates the workflow execution trace for the given `workflowId`."
      tags:
        - trace
      operationId: UpdateTraceBegin
      parameters:
        - name: workflowId
          in: path
          description: "Workflow string identifier."
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace begin request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceBeginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceBeginResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/complete:
    put:
      summary: Signal workflow execution completion
      description: "Updates the workflow execution trace for the given `workflowId`."
      tags:
        - trace
      operationId: UpdateTraceComplete
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Trace complete request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceCompleteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceCompleteResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/heartbeat:
    put:
      summary: Signal workflow execution heartbeat
      description: "Update the workflow execution trace heartbeat for the given `workflowId` to signal that execution is ongoing."
      tags:
        - trace
      operationId: UpdateTraceHeartbeat
      parameters:
        - name: workflowId
          in: path
          description: "Workflow string identifier."
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Trace heartbeat request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceHeartbeatRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceHeartbeatResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /trace/{workflowId}/progress:
    put:
      summary: Store workflow task execution metadata
      description: "Store the execution metadata for one or more tasks in the given `workflowId`."
      tags:
        - trace
      operationId: UpdateTraceProgress
      parameters:
        - name: workflowId
          in: path
          description: "Workflow string identifier."
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: "Trace progress request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TraceProgressRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TraceProgressResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /user-info:
    get:
      summary: Describe current user
      tags:
        - users
      operationId: UserInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /user/{userId}/workspaces:
    get:
      summary: List user workspaces and organizations
      description: Lists the workspaces and organizations to which the user identified by the given `userId` belongs.
      tags:
        - workspaces
      operationId: ListWorkspacesUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkspacesAndOrgResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: UserWorkspaces#read
  /users/validate:
    get:
      summary: Check that the user name is valid
      tags:
        - users
      operationId: ValidateUserName
      parameters:
        - name: name
          in: query
          description: User name to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /users/{userId}:
    get:
      summary: Describe a user entity
      tags:
        - users
      operationId: DescribeUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: User#read
    post:
      summary: Update an user entity
      tags:
        - users
      operationId: UpdateUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: User update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDbDto"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      summary: Delete a user entity
      tags:
        - users
      operationId: DeleteUser
      parameters:
        - name: userId
          in: path
          description: User numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow:
    get:
      summary: List workflows
      description: "Lists all workflow records, enriched with `attributes`. Append `?workspaceId` to list workflow records in a workspace context."
      tags:
        - workflows
      operationId: ListWorkflows
      parameters:
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`, `optimized` status). Returns an empty value (`labels: null`) if omitted."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: search
          in: query
          description: Filter search parameter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkflowsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/delete:
    post:
      summary: Delete workflows
      description: Deletes the workflow records identified by the given list of `workflowIds`.
      tags:
        - workflows
      operationId: DeleteWorkflowMany
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Force the deletion even if any workflows are active
          schema:
            type: boolean
      requestBody:
        description: Delete workflows request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkflowsRequest"
        required: true
      responses:
        "200":
          description: "OK - Return the IDs of workflows that could not be deleted, if any"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkflowsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/add:
    post:
      summary: Add labels to workflows
      description: Adds the given list of labels to the given workflows. Existing labels are preserved.
      tags:
        - labels
      operationId: AddLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels add request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/apply:
    post:
      summary: Replace workflow labels
      description: Applies the given list of labels to the given workflows. Existing labels are replaced â€” include labels to be preserved in `labelIds`.
      tags:
        - labels
      operationId: ApplyLabelsToWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels apply request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/labels/remove:
    post:
      summary: Remove labels from workflows
      description: Removes the given list of labels from the given workflows.
      tags:
        - labels
      operationId: RemoveLabelsFromWorkflows
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Labels remove request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateWorkflowLabelsRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/launch:
    post:
      summary: Launch workflow
      description: Submits a workflow execution.
      tags:
        - workflows
      operationId: CreateWorkflowLaunch
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
        - name: sourceWorkspaceId
          in: query
          description: Source Optional workspace numeric identifier
          schema:
            type: integer
            format: int64
            nullable: true
      requestBody:
        description: Workflow launch request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitWorkflowLaunchRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmitWorkflowLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workflows#create
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000 # 5 seconds
          maxInterval: 5000 # 5 seconds (fixed interval)
          maxElapsedTime: 30000 # 30 seconds
          exponent: 1.0 # No exponential backoff, fixed interval
        statusCodes:
          - 400
  /workflow/random-name:
    get:
      summary: Generates a random name
      tags:
        - workflows
      operationId: GenerateRandomWorkflowName
      responses:
        "200":
          description: Generated name
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RandomWorkflowNameResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/validate:
    get:
      summary: Validate run name
      description: "Check that the given run name of a workflow has a valid format. When the session ID is given: check that no other workflow in the system exists with the combination of both elements."
      tags:
        - workflows
      operationId: ValidateWorkflowConstraints
      parameters:
        - name: runName
          in: query
          description: Workflow run name to validate
          schema:
            type: string
        - name: sessionId
          in: query
          description: Workflow session ID to validate
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request. Invalid run name format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicated element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}:
    get:
      summary: Describe workflow
      description: Retrieves the details of the workflow record associated with the given `workflowId`.
      tags:
        - workflows
      operationId: DescribeWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: attributes
          in: query
          description: "Comma-separated list of attributes to retrieve. Returns an empty value for each attribute not specified."
          explode: false
          schema:
            type: array
            items:
              $ref: "#/components/schemas/WorkflowQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workflows#read
    delete:
      summary: Delete the Workflow entity with the given ID
      tags:
        - workflows
      operationId: DeleteWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: force
          in: query
          description: Force the deletion even if the workflow is active
          schema:
            type: boolean
      responses:
        "204":
          description: OK - Not content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
      x-speakeasy-entity-operation: Workflows#delete
  /workflow/{workflowId}/cancel:
    post:
      summary: Cancel workflow
      description: Cancels the workflow execution identified by the given `workflowId`.
      tags:
        - workflows
      operationId: CancelWorkflow
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmptyBodyRequest"
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download:
    get:
      summary: Download workflow files
      description: Downloads the workflow files for the Nextflow main job associated with the given `workflowId`.
      tags:
        - workflows
      operationId: DownloadWorkflowLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: fileName
          in: query
          description: Filename to download
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/download/{taskId}:
    get:
      summary: Download workflow task files
      description: Downloads the workflow files of the task identified by the given `taskId`.
      tags:
        - workflows
      operationId: DownloadWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: fileName
          in: query
          description: Filename to download
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/launch:
    get:
      summary: Describe workflow launch
      description: Retrieves the details of the workflow launch associated with the given `workflowId`.
      tags:
        - workflows
      operationId: DescribeWorkflowLaunch
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkflowLaunchResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element. Existing run name and session ID combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log:
    get:
      summary: Get workflow logs
      description: Retrieves the output logs for the Nextflow main job of the workflow identified by the given `workflowId`.
      tags:
        - workflows
      operationId: WorkflowLogs
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          description: Workflow log cursor
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/log/{taskId}:
    get:
      summary: Get workflow task logs
      description: Retrieves the output logs for the workflow task identified by the given `taskId`.
      tags:
        - workflows
      operationId: GetWorkflowTaskLog
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: next
          in: query
          description: Workflow log cursor
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowLogResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/metrics:
    get:
      summary: Get the execution metrics for the given Workflow ID
      tags:
        - workflows
      operationId: DescribeWorkflowMetrics
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkflowMetricsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/progress:
    get:
      summary: Retrieve the execution progress for the given Workflow ID
      tags:
        - workflows
      operationId: DescribeWorkflowProgress
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProgressResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/star:
    get:
      summary: Check workflow star status
      description: Confirms whether the given `workflowId` is starred.
      tags:
        - workflows
      operationId: DescribeWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-speakeasy-group: WorkflowStar
    post:
      summary: Star workflow
      description: Adds the workflow identified by the given `workflowId` to your list of starred workflows.
      tags:
        - workflows
      operationId: CreateWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Duplicated element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-speakeasy-group: WorkflowStar
    delete:
      summary: Unstar workflow
      description: Removes the workflow identified by the given `workflowId` from your list of starred workflows.
      tags:
        - workflows
      operationId: DeleteWorkflowStar
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkflowStarResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      x-speakeasy-group: WorkflowStar
  /workflow/{workflowId}/task/{taskId}:
    get:
      summary: Describe a task entity with the given ID
      tags:
        - workflows
      operationId: DescribeWorkflowTask
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: taskId
          in: path
          description: Task numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTaskResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workflow/{workflowId}/tasks:
    get:
      summary: List the tasks for the given Workflow ID and filter parameters
      tags:
        - workflows
      operationId: ListWorkflowTasks
      parameters:
        - name: workflowId
          in: path
          description: Workflow string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
        - name: max
          in: query
          description: Pagination max results
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            format: int32
        - name: sortBy
          in: query
          description: Field to sort by
          schema:
            type: string
        - name: sortDir
          in: query
          description: Sorting direction (asc|desc)
          schema:
            type: string
        - name: search
          in: query
          description: Search tasks by name
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTasksResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets:
    get:
      summary: List available datasets
      description: Lists all available datasets in the workspace context identified by the given `workspaceId`.
      tags:
        - datasets
      operationId: ListDatasets
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
    post:
      summary: Create dataset
      description: Creates a new dataset in the given workspace context. Include the dataset file and details in your request body.
      tags:
        - datasets
      operationId: CreateDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Dataset create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/versions:
    get:
      summary: List latest dataset versions
      description: Lists the latest version of each dataset associated with the given `workspaceId`.
      tags:
        - datasets
      operationId: ListWorkspaceDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: mimeType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}:
    put:
      summary: Update dataset
      description: Updates the details of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UpdateDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Dataset update request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDatasetRequest"
        required: true
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Duplicate element
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      deprecated: true
      security:
        - BearerAuth: []
    delete:
      summary: Delete dataset
      description: Deletes the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DeleteDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/metadata:
    get:
      summary: Describe dataset
      description: Retrieves the metadata of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: DescribeDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDatasetResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/upload:
    post:
      summary: Upload new dataset version
      description: Uploads the CSV or TSV content to create a new version of the dataset identified by the given `datasetId`.
      tags:
        - datasets
      operationId: UploadDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: header
          in: query
          description: Uploaded file has header
          schema:
            type: boolean
      requestBody:
        description: Dataset file request
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MultiRequestFileSchema"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UploadDatasetVersionResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/v/{version}/n/{fileName}:
    get:
      summary: Download dataset content
      description: Downloads the content of the dataset identified by the given `datasetId` and `version`.
      tags:
        - datasets
      operationId: DownloadDataset
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: version
          in: path
          description: Version number to download
          required: true
          schema:
            type: string
        - name: fileName
          in: path
          description: File name for the downloaded dataset content
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  /workspaces/{workspaceId}/datasets/{datasetId}/versions:
    get:
      summary: List all dataset versions
      description: Lists all versions of the given `datasetId`.
      tags:
        - datasets
      operationId: ListDatasetVersions
      parameters:
        - name: workspaceId
          in: path
          description: Workspace numeric identifier
          required: true
          schema:
            type: integer
            format: int64
        - name: datasetId
          in: path
          description: Dataset string identifier
          required: true
          schema:
            type: string
        - name: mimeType
          in: query
          description: MIME type filter
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDatasetVersionsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      deprecated: true
      security:
        - BearerAuth: []
  /credentials#aws:
    post:
      x-speakeasy-entity-operation: AWSCredential#create
      x-speakeasy-name-override: CreateAWSCredentials
      summary: Create AWS credentials
      description: Creates new AWS credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateAWSCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: AWS credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAWSCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAWSCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#aws:
    get:
      x-speakeasy-entity-operation: AWSCredential#read
      x-speakeasy-name-override: DescribeAWSCredentials
      summary: Describe AWS credentials
      description: Retrieves the details of the AWS credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeAWSCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAWSCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: AWSCredential#update
      x-speakeasy-name-override: UpdateAWSCredentials
      summary: Update AWS credentials
      description: Updates the details of the AWS credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateAWSCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: AWS credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAWSCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: AWSCredential#delete
      x-speakeasy-name-override: DeleteAWSCredentials
      summary: Delete AWS credentials
      description: Deletes the AWS credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteAWSCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Running jobs block the deletion of this credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCredentialsConflictResponse'
      security:
        - BearerAuth: []
  /credentials#azure:
    post:
      x-speakeasy-entity-operation: AzureCredential#create
      x-speakeasy-name-override: CreateAzureCredentials
      summary: Create Azure credentials
      description: Creates new Azure credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateAzureCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Azure credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAzureCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#azure:
    get:
      x-speakeasy-entity-operation: AzureCredential#read
      x-speakeasy-name-override: DescribeAzureCredentials
      summary: Describe Azure credentials
      description: Retrieves the details of the Azure credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeAzureCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeAzureCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: AzureCredential#update
      x-speakeasy-name-override: UpdateAzureCredentials
      summary: Update Azure credentials
      description: Updates the details of the Azure credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateAzureCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Azure credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAzureCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: AzureCredential#delete
      x-speakeasy-name-override: DeleteAzureCredentials
      summary: Delete Azure credentials
      description: Deletes the Azure credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteAzureCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Running jobs block the deletion of this credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCredentialsConflictResponse'
      security:
        - BearerAuth: []
  /credentials#google:
    post:
      x-speakeasy-entity-operation: GoogleCredential#create
      x-speakeasy-name-override: CreateGoogleCredentials
      summary: Create Google credentials
      description: Creates new Google credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateGoogleCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier where the credentials will be stored
          schema:
            type: integer
            format: int64
      requestBody:
        description: Google credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGoogleCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGoogleCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#google:
    get:
      x-speakeasy-entity-operation: GoogleCredential#read
      x-speakeasy-name-override: DescribeGoogleCredentials
      summary: Describe Google credentials
      description: Retrieves the details of the Google credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeGoogleCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGoogleCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: GoogleCredential#update
      x-speakeasy-name-override: UpdateGoogleCredentials
      summary: Update Google credentials
      description: Updates the details of the Google credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateGoogleCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Google credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGoogleCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: GoogleCredential#delete
      x-speakeasy-name-override: DeleteGoogleCredentials
      summary: Delete Google credentials
      description: Deletes the Google credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteGoogleCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Running jobs block the deletion of this credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCredentialsConflictResponse'
      security:
        - BearerAuth: []
  /credentials#bitbucket:
    post:
      x-speakeasy-entity-operation: BitbucketCredential#create
      x-speakeasy-name-override: CreateBitbucketCredentials
      summary: Create Bitbucket credentials
      description: Creates new Bitbucket credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateBitbucketCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Bitbucket credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBitbucketCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBitbucketCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#bitbucket:
    get:
      x-speakeasy-entity-operation: BitbucketCredential#read
      x-speakeasy-name-override: DescribeBitbucketCredentials
      summary: Describe Bitbucket credentials
      description: Retrieves the details of the Bitbucket credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeBitbucketCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBitbucketCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: BitbucketCredential#update
      x-speakeasy-name-override: UpdateBitbucketCredentials
      summary: Update Bitbucket credentials
      description: Updates the details of the Bitbucket credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateBitbucketCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Bitbucket credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBitbucketCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: BitbucketCredential#delete
      x-speakeasy-name-override: DeleteBitbucketCredentials
      summary: Delete Bitbucket credentials
      description: Deletes the Bitbucket credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteBitbucketCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#codecommit:
    post:
      x-speakeasy-entity-operation: CodecommitCredential#create
      x-speakeasy-name-override: CreateCodecommitCredentials
      summary: Create Codecommit credentials
      description: Creates new Codecommit credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateCodecommitCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Codecommit credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCodecommitCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCodecommitCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#codecommit:
    get:
      x-speakeasy-entity-operation: CodecommitCredential#read
      x-speakeasy-name-override: DescribeCodecommitCredentials
      summary: Describe Codecommit credentials
      description: Retrieves the details of the Codecommit credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeCodecommitCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCodecommitCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: CodecommitCredential#update
      x-speakeasy-name-override: UpdateCodecommitCredentials
      summary: Update Codecommit credentials
      description: Updates the details of the Codecommit credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateCodecommitCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Codecommit credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCodecommitCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: CodecommitCredential#delete
      x-speakeasy-name-override: DeleteCodecommitCredentials
      summary: Delete Codecommit credentials
      description: Deletes the Codecommit credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteCodecommitCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#container-registry:
    post:
      x-speakeasy-entity-operation: ContainerRegistryCredential#create
      x-speakeasy-name-override: CreateContainerRegistryCredentials
      summary: Create container registry credentials
      description: Creates new container registry credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateContainerRegistryCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Container registry credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContainerRegistryCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContainerRegistryCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#container-registry:
    get:
      x-speakeasy-entity-operation: ContainerRegistryCredential#read
      x-speakeasy-name-override: DescribeContainerRegistryCredentials
      summary: Describe container registry credentials
      description: Retrieves the details of the container registry credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeContainerRegistryCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeContainerRegistryCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: ContainerRegistryCredential#update
      x-speakeasy-name-override: UpdateContainerRegistryCredentials
      summary: Update container registry credentials
      description: Updates the details of the container registry credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateContainerRegistryCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Container registry credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContainerRegistryCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: ContainerRegistryCredential#delete
      x-speakeasy-name-override: DeleteContainerRegistryCredentials
      summary: Delete container registry credentials
      description: Deletes the container registry credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteContainerRegistryCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#gitea:
    post:
      x-speakeasy-entity-operation: GiteaCredential#create
      x-speakeasy-name-override: CreateGiteaCredentials
      summary: Create Gitea credentials
      description: Creates new Gitea credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateGiteaCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Gitea credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGiteaCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGiteaCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#gitea:
    get:
      x-speakeasy-entity-operation: GiteaCredential#read
      x-speakeasy-name-override: DescribeGiteaCredentials
      summary: Describe Gitea credentials
      description: Retrieves the details of the Gitea credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeGiteaCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGiteaCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: GiteaCredential#update
      x-speakeasy-name-override: UpdateGiteaCredentials
      summary: Update Gitea credentials
      description: Updates the details of the Gitea credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateGiteaCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Gitea credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGiteaCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: GiteaCredential#delete
      x-speakeasy-name-override: DeleteGiteaCredentials
      summary: Delete Gitea credentials
      description: Deletes the Gitea credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteGiteaCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#github:
    post:
      x-speakeasy-entity-operation: GithubCredential#create
      x-speakeasy-name-override: CreateGithubCredentials
      summary: Create GitHub credentials
      description: Creates new GitHub credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateGithubCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: GitHub credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGithubCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGithubCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#github:
    get:
      x-speakeasy-entity-operation: GithubCredential#read
      x-speakeasy-name-override: DescribeGithubCredentials
      summary: Describe GitHub credentials
      description: Retrieves the details of the GitHub credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeGithubCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGithubCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: GithubCredential#update
      x-speakeasy-name-override: UpdateGithubCredentials
      summary: Update GitHub credentials
      description: Updates the details of the GitHub credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateGithubCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: GitHub credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGithubCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: GithubCredential#delete
      x-speakeasy-name-override: DeleteGithubCredentials
      summary: Delete GitHub credentials
      description: Deletes the GitHub credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteGithubCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#gitlab:
    post:
      x-speakeasy-entity-operation: GitlabCredential#create
      x-speakeasy-name-override: CreateGitlabCredentials
      summary: Create GitLab credentials
      description: Creates new GitLab credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateGitlabCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: GitLab credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGitlabCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGitlabCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#gitlab:
    get:
      x-speakeasy-entity-operation: GitlabCredential#read
      x-speakeasy-name-override: DescribeGitlabCredentials
      summary: Describe GitLab credentials
      description: Retrieves the details of the GitLab credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeGitlabCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGitlabCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: GitlabCredential#update
      x-speakeasy-name-override: UpdateGitlabCredentials
      summary: Update GitLab credentials
      description: Updates the details of the GitLab credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateGitlabCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: GitLab credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGitlabCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: GitlabCredential#delete
      x-speakeasy-name-override: DeleteGitlabCredentials
      summary: Delete GitLab credentials
      description: Deletes the GitLab credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteGitlabCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#ssh:
    post:
      x-speakeasy-entity-operation: SSHCredential#create
      x-speakeasy-name-override: CreateSSHCredentials
      summary: Create SSH credentials
      description: Creates new SSH credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateSSHCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: SSH credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSSHCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSSHCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#ssh:
    get:
      x-speakeasy-entity-operation: SSHCredential#read
      x-speakeasy-name-override: DescribeSSHCredentials
      summary: Describe SSH credentials
      description: Retrieves the details of the SSH credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeSSHCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeSSHCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: SSHCredential#update
      x-speakeasy-name-override: UpdateSSHCredentials
      summary: Update SSH credentials
      description: Updates the details of the SSH credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateSSHCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: SSH credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSSHCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: SSHCredential#delete
      x-speakeasy-name-override: DeleteSSHCredentials
      summary: Delete SSH credentials
      description: Deletes the SSH credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteSSHCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#agent:
    post:
      x-speakeasy-entity-operation: TowerAgentCredential#create
      x-speakeasy-name-override: CreateTowerAgentCredentials
      summary: Create Tower Agent credentials
      description: Creates new Tower Agent credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateTowerAgentCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Tower Agent credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTowerAgentCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTowerAgentCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#agent:
    get:
      x-speakeasy-entity-operation: TowerAgentCredential#read
      x-speakeasy-name-override: DescribeTowerAgentCredentials
      summary: Describe Tower Agent credentials
      description: Retrieves the details of the Tower Agent credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeTowerAgentCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeTowerAgentCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: TowerAgentCredential#update
      x-speakeasy-name-override: UpdateTowerAgentCredentials
      summary: Update Tower Agent credentials
      description: Updates the details of the Tower Agent credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateTowerAgentCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Tower Agent credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTowerAgentCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: TowerAgentCredential#delete
      x-speakeasy-name-override: DeleteTowerAgentCredentials
      summary: Delete Tower Agent credentials
      description: Deletes the Tower Agent credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteTowerAgentCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  /credentials#k8s:
    post:
      x-speakeasy-entity-operation: KubernetesCredential#create
      x-speakeasy-name-override: CreateKubernetesCredentials
      summary: Create Kubernetes credentials
      description: Creates new Kubernetes credentials in a user context. Append `?workspaceId` to create the credentials in a workspace context.
      tags:
        - credentials
      operationId: CreateKubernetesCredentials
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Kubernetes credentials create request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKubernetesCredentialsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKubernetesCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '409':
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
  /credentials/{credentialsId}#k8s:
    get:
      x-speakeasy-entity-operation: KubernetesCredential#read
      x-speakeasy-name-override: DescribeKubernetesCredentials
      summary: Describe Kubernetes credentials
      description: Retrieves the details of the Kubernetes credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DescribeKubernetesCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeKubernetesCredentialsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
        '404':
          description: Not Found - Credential does not exist or has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
        - BearerAuth: []
    put:
      x-speakeasy-entity-operation: KubernetesCredential#update
      x-speakeasy-name-override: UpdateKubernetesCredentials
      summary: Update Kubernetes credentials
      description: Updates the details of the Kubernetes credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: UpdateKubernetesCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      requestBody:
        description: Kubernetes credentials update request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKubernetesCredentialsRequest'
        required: true
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: KubernetesCredential#delete
      x-speakeasy-name-override: DeleteKubernetesCredentials
      summary: Delete Kubernetes credentials
      description: Deletes the Kubernetes credentials identified by the given `credentialsId`.
      tags:
        - credentials
      operationId: DeleteKubernetesCredentials
      parameters:
        - name: credentialsId
          in: path
          description: Credentials string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK - No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Operation not allowed
      security:
        - BearerAuth: []
  "/compute-envs#aws":
    post:
      x-speakeasy-entity-operation: AWSBatchCE#create
      x-speakeasy-name-override: CreateAWSBatchCE
      summary: Create AWS compute environment
      description: Creates a new AWS compute environment. Append `?workspaceId` to create the environment in a workspace context.
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000
          maxInterval: 5000
          maxElapsedTime: 30000
          exponent: 1.0
        statusCodes:
          - 429
          - 500
          - 502
          - 503
          - 504
      tags:
        - compute-envs
      operationId: CreateAWSBatchCE
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: AWS compute environment create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAWSBatchCERequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAWSBatchCEResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  "/compute-envs/{computeEnvId}#aws":
    get:
      x-speakeasy-entity-operation: AWSBatchCE#read
      x-speakeasy-name-override: DescribeAWSBatchCE
      summary: Describe AWS compute environment
      description: Retrieves the details of the AWS compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DescribeAWSBatchCE
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ComputeEnvQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAWSBatchCEResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Compute environment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: AWSBatchCE#delete
      x-speakeasy-name-override: DeleteAWSBatchCE
      summary: Delete AWS compute environment
      description: Deletes the AWS compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DeleteAWSBatchCE
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
  "/compute-envs#aws-compute-env":
    post:
      x-speakeasy-entity-operation: AWSComputeEnv#create
      x-speakeasy-name-override: CreateAWSComputeEnv
      summary: Create AWS compute environment
      description: Creates a new AWS compute environment. Append `?workspaceId` to create the environment in a workspace context.
      x-speakeasy-retries:
        strategy: backoff
        backoff:
          initialInterval: 5000
          maxInterval: 5000
          maxElapsedTime: 30000
          exponent: 1.0
        statusCodes:
          - 429
          - 500
          - 502
          - 503
          - 504
      tags:
        - compute-envs
      operationId: CreateAWSComputeEnv
      parameters:
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        description: AWS compute environment create request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAWSComputeEnvRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAWSComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "409":
          description: Conflict - resource already exists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
  "/compute-envs/{computeEnvId}#aws-compute-env":
    get:
      x-speakeasy-entity-operation: AWSComputeEnv#read
      x-speakeasy-name-override: DescribeAWSComputeEnv
      summary: Describe AWS compute environment
      description: Retrieves the details of the AWS compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DescribeAWSComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
          required: true
        - name: attributes
          in: query
          description: "Additional attribute values to include in the response (`labels`). Returns an empty value (`labels: null`) if omitted."
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ComputeEnvQueryAttribute"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAWSComputeEnvResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
        "404":
          description: Compute environment not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      security:
        - BearerAuth: []
    delete:
      x-speakeasy-entity-operation: AWSComputeEnv#delete
      x-speakeasy-name-override: DeleteAWSComputeEnv
      summary: Delete AWS compute environment
      description: Deletes the AWS compute environment identified by the given `computeEnvId`.
      tags:
        - compute-envs
      operationId: DeleteAWSComputeEnv
      parameters:
        - name: computeEnvId
          in: path
          description: Compute environment string identifier
          required: true
          schema:
            type: string
        - name: workspaceId
          in: query
          description: Workspace numeric identifier
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: OK - No content
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Operation not allowed
      security:
        - BearerAuth: []
components:
  schemas:
    AbstractGridConfig:
      type: object
      properties:
        workDir:
          type: string
          description: "Compute environment working directory"
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        nextflowConfig:
          type: string
        launchDir:
          type: string
        userName:
          type: string
        hostName:
          type: string
        port:
          type: integer
          format: int32
        headQueue:
          type: string
        computeQueue:
          type: string
        maxQueueSize:
          type: integer
          format: int32
        headJobOptions:
          type: string
        propagateHeadJobOptions:
          type: boolean
    AccessToken:
      required:
        - name
      type: object
      properties:
        basicAuth:
          type: string
          deprecated: true
          description: Deprecated basic authentication string
          x-speakeasy-param-ordering: 5
          x-speakeasy-param-readonly: true
        id:
          type: integer
          format: int64
          nullable: true
          description: Unique numeric identifier for the access token (nullable)
          x-speakeasy-param-ordering: 1
          x-speakeasy-param-optional: true
          x-speakeasy-param-readonly: true
        name:
          maxLength: 50
          minLength: 1
          type: string
          description: Display name for the token (1-50 characters)
          x-speakeasy-param-ordering: 2
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the token was last used for authentication
          x-speakeasy-param-ordering: 4
          x-speakeasy-param-readonly: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the token was created
          x-speakeasy-param-ordering: 3
          x-speakeasy-param-readonly: true
      x-speakeasy-entity: Tokens
      x-speakeasy-entity-description: |
        Manage API access tokens for authentication.

        Tokens provide secure API access, enabling programmatic
        access to platform resources and services. They can be used
        for CI/CD integration, automation scripts, and external tools.
      description: |
        Represents an API access token for authentication.
        Contains token metadata, permissions, and expiration information
        for secure API access to platform resources.
    Action.ConfigType:
      type: object
      properties:
        discriminator:
          type: string
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionConfig"
          tower: "#/components/schemas/Action.TowerActionConfig"
      oneOf:
        - $ref: "#/components/schemas/Action.TowerActionConfig"
        - $ref: "#/components/schemas/GithubActionConfig"
    Action.EventType:
      type: object
      properties:
        discriminator:
          type: string
        timestamp:
          type: string
          format: date-time
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GithubActionEvent"
          tower: "#/components/schemas/Action.TowerActionEvent"
      oneOf:
        - $ref: "#/components/schemas/GithubActionEvent"
        - $ref: "#/components/schemas/Action.TowerActionEvent"
    Action.Source:
      type: string
      enum:
        - github
        - tower
    Action.Status:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - ERROR
        - PAUSED
    Action.TowerActionConfig:
      type: object
      properties:
        discriminator:
          type: string
    Action.TowerActionEvent:
      type: object
      properties:
        discriminator:
          type: string
        timestamp:
          type: string
          format: date-time
        workflowId:
          type: string
    ActionQueryAttribute:
      type: string
      enum:
        - labels
    ActionResponseDto:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the action
          x-speakeasy-param-ordering: 1
          x-speakeasy-param-readonly: true
        launch:
          $ref: "#/components/schemas/Launch"
          description: Launch configuration and parameters for the pipeline execution
          x-speakeasy-param-ordering: 5
        name:
          type: string
          description: Human-readable name for the action
          x-speakeasy-param-ordering: 2
        hookId:
          type: string
          description: Identifier for the webhook associated with this action
          x-speakeasy-param-ordering: 7
          x-speakeasy-param-readonly: true
        hookUrl:
          type: string
          description: URL endpoint for the webhook that triggers this action
          x-speakeasy-param-ordering: 8
          x-speakeasy-param-readonly: true
        message:
          type: string
          description: Status or informational message about the action
          x-speakeasy-param-ordering: 9
          x-speakeasy-param-readonly: true
        source:
          $ref: "#/components/schemas/Action.Source"
          description: Event source that triggers this action (e.g., github, tower)
          x-speakeasy-param-ordering: 3
        status:
          $ref: "#/components/schemas/Action.Status"
          description: Current execution status of the action
          x-speakeasy-param-ordering: 6
          x-speakeasy-param-readonly: true
        config:
          $ref: "#/components/schemas/Action.ConfigType"
          description: Configuration type and settings for the action trigger
          x-speakeasy-param-ordering: 4
      x-speakeasy-entity: Action
      x-speakeasy-entity-version: 1
      x-speakeasy-entity-description: |
        Manage pipeline actions for event-based workflow automation.

        This resource allows the management of pipeline actions. Actions enable event-based
        pipeline execution, such as triggering a pipeline launch with a GitHub webhook whenever
        the pipeline repository is updated.

        Seqera Platform currently offers support for native GitHub webhooks and a general
        Tower webhook that can be invoked programmatically.
      description: |
        Represents a pipeline action in the Seqera Platform.
        Contains action configuration, triggers, and execution settings
        for automated pipeline workflows.
    ActiveConnection:
      type: object
      allOf:
        - $ref: "#/components/schemas/StudioUser"
        - required:
            - lastActive
          properties:
            lastActive:
              type: string
              format: date-time
    AddMemberRequest:
      type: object
      properties:
        user:
          type: string
    AddMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AddParticipantRequest:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        userNameOrEmail:
          type: string
    AddParticipantResponse:
      type: object
      properties:
        participant:
          $ref: "#/components/schemas/ParticipantDbDto"
    AddTeamMemberResponse:
      type: object
      properties:
        member:
          $ref: "#/components/schemas/MemberDbDto"
    AgentSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        connectionId:
          type: string
        workDir:
          type: string
        shared:
          type: boolean
    AltairPbsComputeConfig:
      title: Altair PBS configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    Analytics:
      type: object
      properties:
        hubspotId:
          type: string
        posthogApiKey:
          type: string
        posthogApiHost:
          type: string
    AssociateActionLabelsRequest:
      type: object
      properties:
        actionIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociatePipelineLabelsRequest:
      type: object
      properties:
        pipelineIds:
          type: array
          items:
            type: integer
            format: int64
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    AssociateWorkflowLabelsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    Avatar:
      type: object
      properties:
        id:
          maxLength: 22
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    AwsBatchConfig:
      title: AWS Batch configuration
      type: object
      properties:
        storageType:
          type: string
          deprecated: true
        lustreId:
          type: string
          deprecated: true
        volumes:
          type: array
          items:
            type: string
        discriminator:
          type: string
          description: property to select the compute config platform
          x-speakeasy-terraform-ignore: true
        region:
          type: string
          description: |
            AWS region where the Batch compute environment will be created.
            Examples: us-east-1, eu-west-1, ap-southeast-2
          example: "us-east-1"
          x-speakeasy-param-force-new: true
          x-speakeasy-param-optional: false
        computeQueue:
          type: string
          description: Name of the AWS Batch compute queue
          x-speakeasy-param-force-new: true
        dragenQueue:
          type: string
        dragenInstanceType:
          type: string
        computeJobRole:
          type: string
          description: |
            IAM role ARN for compute jobs. Jobs assume this role during execution.
            Must have permissions for S3, CloudWatch, etc.
            Format: arn:aws:iam::account-id:role/role-name
          example: "arn:aws:iam::123456789012:role/BatchJobRole"
          x-speakeasy-param-force-new: true
        executionRole:
          type: string
          description: |
            IAM role ARN for Batch execution (pulling container images, writing logs).
            Must have permissions for ECR and CloudWatch Logs.
            Format: arn:aws:iam::account-id:role/role-name
          example: "arn:aws:iam::123456789012:role/BatchExecutionRole"
          x-speakeasy-param-force-new: true
        headQueue:
          type: string
          description: Name of the head job queue
          x-speakeasy-param-force-new: true
        headJobRole:
          type: string
          description: |
            IAM role ARN for the head job.
            Format: arn:aws:iam::account-id:role/role-name
          example: "arn:aws:iam::123456789012:role/BatchHeadJobRole"
          x-speakeasy-param-force-new: true
        cliPath:
          type: string
          description: |
            Path to AWS CLI on compute instances. AWS CLI must be available at this path.
          example: "/home/ec2-user/miniconda/bin/aws"
          x-speakeasy-param-force-new: true
        workDir:
          type: string
          description: |
            S3 bucket path for Nextflow work directory where intermediate files will be stored.
            Format: s3://bucket-name/path
          example: "s3://my-nextflow-bucket/work"
          pattern: "^s3://.+"
          x-speakeasy-param-force-new: true
          x-speakeasy-param-optional: false
        preRunScript:
          type: string
          description: "Bash script to run before workflow execution begins.\nUse for environment setup, loading modules, downloading reference data, etc.\n"
          x-speakeasy-param-force-new: true
        postRunScript:
          type: string
          description: "Bash script to run after workflow execution completes.\nUse for cleanup, archiving results, sending notifications, etc.\n"
          x-speakeasy-param-force-new: true
        headJobCpus:
          type: integer
          format: int32
          description: "Number of CPUs allocated for the head job (default: 1)"
          example: 4
          x-speakeasy-param-force-new: true
        headJobMemoryMb:
          type: integer
          format: int32
          description: "Memory allocation for the head job in MB (default: 1024)"
          example: 8192
          x-speakeasy-param-force-new: true
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          title: "Wave Enabled"
          description: |
            Enable Wave containers for this compute environment. Wave provides container provisioning
            and augmentation capabilities for Nextflow workflows.

            When enable_wave is true, enable_fusion must be explicitly set to either true or false.
            Note: If Fusion2 is enabled, Wave must also be enabled.
          x-speakeasy-plan-validators: WaveEnabledValidator
          x-speakeasy-name-override: enable_wave
        fusion2Enabled:
          type: boolean
          x-speakeasy-name-override: enable_fusion
        nvnmeStorageEnabled:
          type: boolean
          x-speakeasy-name-override: nvme_storage_enabled
          description: |
            Enable NVMe instance storage for high-performance I/O.
            When enabled, NVMe storage volumes are automatically mounted and configured.
          example: true
          x-speakeasy-param-force-new: true
        logGroup:
          type: string
        nextflowConfig:
          type: string
        fusionSnapshots:
          type: boolean
        forge:
          $ref: "#/components/schemas/ForgeConfig"
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          x-speakeasy-terraform-ignore: true
      required:
        - region
      x-speakeasy-plan-validators: awsForgeValidator
    AwsBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        jobQueues:
          type: array
          items:
            $ref: "#/components/schemas/JobQueue"
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        fileSystems:
          type: array
          items:
            $ref: "#/components/schemas/FsxFileSystem"
        efsFileSystems:
          type: array
          items:
            $ref: "#/components/schemas/EfsFileSystem"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceFamilies:
          type: array
          items:
            type: string
        allocStrategy:
          type: array
          items:
            type: string
    AwsCloudConfig:
      title: AWS Cloud configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          readOnly: true
        allowBuckets:
          type: array
          items:
            type: string
        region:
          type: string
        instanceType:
          type: string
        imageId:
          type: string
        workDir:
          type: string
        preRunScript:
          type: string
        postRunScript:
          type: string
        nextflowConfig:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          x-speakeasy-name-override: enable_wave
        fusion2Enabled:
          type: boolean
          x-speakeasy-name-override: enable_fusion
        logGroup:
          type: string
        arm64Enabled:
          type: boolean
        gpuEnabled:
          type: boolean
        ec2KeyPair:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        instanceProfileArn:
          type: string
        subnetId:
          type: string
        securityGroups:
          type: array
          items:
            type: string
        forgedResources:
          type: array
          items:
            type: object
            additionalProperties: true
          x-speakeasy-terraform-ignore: true
      required:
        - region
    AwsCloudPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/Bucket"
        keyPairs:
          type: array
          items:
            type: string
        vpcs:
          type: array
          items:
            $ref: "#/components/schemas/Vpc"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        securityGroups:
          type: array
          items:
            $ref: "#/components/schemas/SecurityGroup"
        subnets:
          type: array
          items:
            $ref: "#/components/schemas/Subnet"
        instanceTypes:
          type: array
          items:
            $ref: "#/components/schemas/InstanceType"
    AwsSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        accessKey:
          type: string
        secretKey:
          type: string
          writeOnly: true
        assumeRoleArn:
          type: string
    AzBatchConfig:
      title: Azure batch configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          x-speakeasy-terraform-ignore: true
        workDir:
          type: string
          title: "Azure Batch Work Directory"
          description: "Must be a valid Azure Blob container URL with format az://container-name/path"
          example: "az://my-container/work"
          pattern: "^az://.+"
          x-speakeasy-param-optional: false
          x-speakeasy-param-force-new: true
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        region:
          type: string
        headPool:
          type: string
        autoPoolMode:
          type: boolean
          deprecated: true
        forge:
          $ref: "#/components/schemas/AzBatchForgeConfig"
        tokenDuration:
          type: string
        deleteJobsOnCompletion:
          $ref: "#/components/schemas/JobCleanupPolicy"
        deletePoolsOnCompletion:
          type: boolean
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          x-speakeasy-name-override: enable_wave
        fusion2Enabled:
          type: boolean
          x-speakeasy-name-override: enable_fusion
        nextflowConfig:
          type: string
        managedIdentityClientId:
          type: string
          nullable: true
      required:
        - region
    AzBatchForgeConfig:
      type: object
      properties:
        vmType:
          type: string
        vmCount:
          type: integer
          format: int32
        autoScale:
          type: boolean
        disposeOnDeletion:
          type: boolean
        containerRegIds:
          type: array
          items:
            type: string
      required:
        - vmCount
    AzBatchPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        pools:
          type: array
          items:
            type: string
        containers:
          type: array
          items:
            type: string
        vmTypes:
          type: array
          items:
            type: string
    AzureEntraKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - properties:
            discriminator:
              type: string
            tenantId:
              type: string
            clientId:
              type: string
            clientSecret:
              type: string
              writeOnly: true
    AzureReposSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
        username:
          type: string
        password:
          type: string
          writeOnly: true
    AzureSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        batchName:
          type: string
        storageName:
          type: string
        batchKey:
          type: string
          writeOnly: true
        storageKey:
          type: string
          writeOnly: true
    BitBucketSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    Bucket:
      type: object
      properties:
        path:
          type: string
    CloudPriceModel:
      type: string
      enum:
        - standard
        - spot
    CodeCommitSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    ComputeConfig:
      type: object
      properties:
        workDir:
          type: string
          description: Working directory path for workflow execution
          x-speakeasy-param-optional: false
          x-speakeasy-param-force-new: true
        preRunScript:
          type: string
          description: "Shell script to execute before workflow starts"
        postRunScript:
          type: string
          description: "Shell script to execute after workflow completes"
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
          description: Array of environment variables for the compute environment
        nextflowConfig:
          type: string
          description: Nextflow configuration settings and parameters
        discriminator:
          type: string
          description: Read-only property identifying the compute platform type
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
      discriminator:
        propertyName: discriminator
        mapping:
          moab-platform: "#/components/schemas/MoabComputeConfig"
          aws-batch: "#/components/schemas/AwsBatchConfig"
          gke-platform: "#/components/schemas/GkeComputeConfig"
          google-batch: "#/components/schemas/GoogleBatchConfig"
          aws-cloud: "#/components/schemas/AwsCloudConfig"
          slurm-platform: "#/components/schemas/SlurmComputeConfig"
          k8s-platform: "#/components/schemas/K8sComputeConfig"
          altair-platform: "#/components/schemas/AltairPbsComputeConfig"
          lsf-platform: "#/components/schemas/LsfComputeConfig"
          azure-batch: "#/components/schemas/AzBatchConfig"
          seqeracompute-platform: "#/components/schemas/SeqeraComputeConfig"
          eks-platform: "#/components/schemas/EksComputeConfig"
          google-lifesciences: "#/components/schemas/GoogleLifeSciencesConfig"
          uge-platform: "#/components/schemas/UnivaComputeConfig"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchConfig"
        - $ref: "#/components/schemas/AwsCloudConfig"
        - $ref: "#/components/schemas/SeqeraComputeConfig"
        - $ref: "#/components/schemas/GoogleLifeSciencesConfig"
        - $ref: "#/components/schemas/GoogleBatchConfig"
        - $ref: "#/components/schemas/AzBatchConfig"
        - $ref: "#/components/schemas/LsfComputeConfig"
        - $ref: "#/components/schemas/SlurmComputeConfig"
        - $ref: "#/components/schemas/K8sComputeConfig"
        - $ref: "#/components/schemas/EksComputeConfig"
        - $ref: "#/components/schemas/GkeComputeConfig"
        - $ref: "#/components/schemas/UnivaComputeConfig"
        - $ref: "#/components/schemas/AltairPbsComputeConfig"
        - $ref: "#/components/schemas/MoabComputeConfig"
      description: |
        Configuration settings for compute environments including work directories,
        pre/post run scripts, and environment-specific parameters.
    ComputeEnv.Status:
      type: string
      readOnly: true
      enum:
        - CREATING
        - AVAILABLE
        - ERRORED
        - INVALID
    ComputeEnvDbDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        region:
          type: string
    ComputeEnvQueryAttribute:
      type: string
      enum:
        - labels
    ComputeEnvResponseDto:
      type: object
      properties:
        id:
          type: string
          x-speakeasy-name-override: computeEnvId
        name:
          type: string
        description:
          type: string
        platform:
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - seqeracompute-platform
            - google-lifesciences
            - google-batch
            - azure-batch
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
        config:
          $ref: "#/components/schemas/ComputeConfig"
        dateCreated:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        lastUsed:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        primary:
          type: boolean
        credentialsId:
          type: string
        managedIdentityId:
          type: string
        orgId:
          type: integer
          format: int64
        workspaceId:
          type: integer
          format: int64
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
      x-speakeasy-entity: ComputeEnv
      x-speakeasy-entity-version: 1
      x-speakeasy-entity-description: |
        Seqera Platform compute environments define the execution platform where a pipeline will run.
        Compute environments enable users to launch pipelines on a growing number of cloud and
        on-premises platforms. Each compute environment must be configured to enable Seqera to submit tasks.

        Compute environments define the computational resources and configuration needed
        to run Nextflow workflows, including cloud provider settings, resource limits,
        and execution parameters.
    ComputeEnv_ComputeConfig_:
      required:
        - config
        - name
        - platform
        - credentialsId
      type: object
      properties:
        credentialsId:
          type: string
          x-speakeasy-param-force-new: true
        orgId:
          type: integer
          format: int64
          readOnly: true
          x-speakeasy-param-readonly: true
        workspaceId:
          type: integer
          format: int64
          readOnly: true
          x-speakeasy-param-readonly: true
          x-speakeasy-param-force-new: true
        id:
          maxLength: 22
          type: string
          readOnly: true
          x-speakeasy-param-readonly: true
          x-speakeasy-name-override: computeEnvId
        name:
          maxLength: 100
          type: string
        description:
          maxLength: 2000
          type: string
          x-speakeasy-param-force-new: true
        platform:
          maxLength: 25
          type: string
          enum:
            - aws-batch
            - aws-cloud
            - google-lifesciences
            - google-batch
            - azure-batch
            - k8s-platform
            - eks-platform
            - gke-platform
            - uge-platform
            - slurm-platform
            - lsf-platform
            - altair-platform
            - moab-platform
            - local-platform
            - seqeracompute-platform
          x-speakeasy-plan-validators: ComputeConfigValidator
          x-speakeasy-param-optional: false
          x-speakeasy-param-force-new: true
        config:
          $ref: "#/components/schemas/ComputeConfig"
          x-speakeasy-param-force-new: true
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
        lastUsed:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          readOnly: true
          x-speakeasy-param-readonly: true
        status:
          allOf:
            - $ref: "#/components/schemas/ComputeEnv.Status"
            - type: string
              readOnly: true
          x-speakeasy-param-readonly: true
        message:
          maxLength: 4096
          type: string
        primary:
          type: boolean
          readOnly: true
      x-speakeasy-entity: ComputeEnv
    ComputePlatform:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        credentialsProviders:
          type: array
          items:
            type: string
    ComputePlatformDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ComputeRegion:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    ConfigEnvVariable:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        head:
          type: boolean
        compute:
          type: boolean
    ContainerData:
      required:
        - targetImage
      type: object
      properties:
        requestId:
          type: string
        sourceImage:
          type: string
        targetImage:
          type: string
        buildId:
          type: string
        scanId:
          type: string
        mirrorId:
          type: string
        cached:
          type: boolean
        freeze:
          type: boolean
        requestTime:
          type: string
          format: date-time
    ContainerRegistryKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        userName:
          type: string
        password:
          type: string
          writeOnly: true
        registry:
          type: string
    CreateAccessTokenRequest:
      type: object
      properties:
        name:
          type: string
          example: "ci-cd-pipeline-token"
    CreateAccessTokenResponse:
      type: object
      properties:
        accessKey:
          type: string
        token:
          $ref: "#/components/schemas/AccessToken"
      x-speakeasy-entity: Tokens
    CreateActionRequest:
      type: object
      properties:
        name:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
      required:
        - name
        - source
        - launch
    CreateActionResponse:
      type: object
      properties:
        actionId:
          type: string
    CreateAvatarResponse:
      type: object
      properties:
        avatar:
          $ref: "#/components/schemas/Avatar"
        url:
          type: string
    CreateComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - computeEnv
        - credentialsId
        - config
        - name
        - platform
      x-speakeasy-entity: ComputeEnv
      x-speakeasy-entity-description: |
        This resource allows the management of Seqera compute environments.

        Seqera Platform compute environments define the execution platform where a pipeline will run.
        Compute environments enable users to launch pipelines on a growing number of cloud and on-premises platforms.

        Compute environments define the computational resources and configuration needed
        to run Nextflow workflows, including cloud provider settings, resource limits,
        and execution parameters.
    CreateComputeEnvResponse:
      type: object
      properties:
        computeEnvId:
          type: string
      x-speakeasy-entity: ComputeEnv
    CreateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    CreateCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    CreateDatasetRequest:
      type: object
      properties:
        name:
          type: string
          example: "my-dataset"
        description:
          type: string
          example: "Dataset containing sample genomic data"
      x-speakeasy-entity: Datasets
      required:
        - name
    CreateDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
    CreateLabelRequest:
      type: object
      properties:
        name:
          type: string
          title: "Label Name"
          description: "Label name (key). Must be 1-39 alphanumeric characters, dashes, or underscores. Example: 'environment', 'team', 'cost-center'"
          example: "environment"
          x-speakeasy-plan-validators: LabelNameValidator
        value:
          type: string
          title: "Label Value"
          description: "Label value. Must be 1-39 alphanumeric characters, dashes, or underscores. Required when resource=true. Example: 'production', 'data-science'"
          example: "production"
          x-speakeasy-plan-validators: LabelValueResourceValidator
        resource:
          type: boolean
          description: "Whether this is a resource label. Resource labels (true) can have values and be applied to resources. Non-resource labels (false) are simple tags. Requires replacement if changed."
          example: true
        isDefault:
          type: boolean
          description: "Whether this label is automatically applied to new resources. Can only be true when resource=true."
          x-speakeasy-plan-validators: LabelIsDefaultValidator
          example: false
      x-speakeasy-entity: Labels
      x-speakeasy-entity-description: |
        Manage labels for organizing and categorizing resources.

        Labels provide metadata tagging capabilities for pipelines, workflows,
        and other platform resources, enabling resource organization, filtering,
        and management across the platform.
    CreateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-speakeasy-name-override: labelId
        name:
          type: string
        value:
          type: string
        resource:
          type: boolean
        isDefault:
          type: boolean
      x-speakeasy-entity: Labels
    CreateOrganizationRequest:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/Organization"
    CreateOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    CreatePipelineRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
      required:
        - name
        - launch
        - workspace_id
    CreatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
      x-speakeasy-entity: Pipelines
    CreatePipelineSecretRequest:
      type: object
      properties:
        name:
          type: string
          description: Secret name used to reference the secret in workflows (max 100 characters)
          example: "api_key"
        value:
          type: string
          x-speakeasy-param-sensitive: true
          description: The sensitive secret value to store (will be encrypted)
          example: "secret_value_here"
      required:
        - name
        - value
        - workspace_id
    CreatePipelineSecretResponse:
      type: object
      properties:
        secretId:
          type: integer
          format: int64
    CreateTeamMemberRequest:
      type: object
      properties:
        userNameOrEmail:
          type: string
    CreateTeamRequest:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/Team"
        avatarId:
          type: string
          example: "avatar-123456"
    CreateTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    CreateWorkflowStarResponse:
      type: object
      properties:
        workflowId:
          type: string
    CreateWorkspaceRequest:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    CreateWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    Credentials:
      required:
        - name
        - provider
        - keys
      type: object
      properties:
        id:
          maxLength: 22
          type: string
          x-speakeasy-param-suppress-computed-diff: true
          description: Unique identifier for the credential (max 22 characters)
        name:
          maxLength: 100
          type: string
          example: "my-gcp-credentials"
          description: Display name for the credential (max 100 characters)
        description:
          type: string
          x-speakeasy-param-computed: false
          example: "Google Cloud credentials for production workloads"
          description: Optional description explaining the purpose of the credential
        provider:
          maxLength: 16
          type: string
          enum:
            - aws
            - azure
            - azure_entra
            - google
            - github
            - gitlab
            - bitbucket
            - ssh
            - k8s
            - container-reg
            - tw-agent
            - codecommit
            - gitea
            - azurerepos
            - seqeracompute
          x-speakeasy-name-override: providerType
          x-speakeasy-plan-validators: CredentialsConfigValidator
          example: "google"
          description: Cloud or service provider type (e.g., aws, azure, gcp)
        baseUrl:
          maxLength: 200
          pattern: ""
          type: string
          x-speakeasy-param-computed: false
          example: "https://www.googleapis.com"
        category:
          maxLength: 20
          type: string
          x-speakeasy-param-computed: false
          example: "cloud"
        deleted:
          type: boolean
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
          description: Flag indicating if the credential has been soft-deleted
        lastUsed:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
          description: Timestamp when the credential was last used
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
          description: Timestamp when the credential was created
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-suppress-computed-diff: true
        keys:
          $ref: "#/components/schemas/SecurityKeys"
      x-speakeasy-entity: Credential
      x-speakeasy-entity-description: |
        Manage workspace credentials in Seqera platform using this resource.

        Credentials store authentication information for accessing cloud providers,
        Git repositories, container registries, and other external services
        within the Seqera Platform workflows.
      description: |
        Represents credentials used for authentication with various platforms and services.
        Contains authentication information for accessing cloud providers, Git repositories,
        and other external services within the Seqera Platform.
    DataLink.Status:
      type: string
      readOnly: true
      enum:
        - VALID
        - INVALID
    DataLinkContentResponse:
      type: object
      properties:
        originalPath:
          type: string
        objects:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItem"
        nextPageToken:
          type: string
    DataLinkContentTreeListResponse:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkSimpleItem"
    DataLinkCreateRequest:
      type: object
      properties:
        name:
          type: string
          example: "my-s3-datalink"
        description:
          type: string
          example: "S3 bucket for production data storage"
        type:
          $ref: "#/components/schemas/DataLinkType"
          example: "bucket"
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
          example: "aws"
        resourceRef:
          type: string
          example: "s3://my-bucket"
        publicAccessible:
          type: boolean
          example: false
        credentialsId:
          type: string
          example: "aws-credentials-id"
      required:
        - description
        - name
        - provider
        - publicAccessible
        - resourceRef
        - type
    DataLinkCredentials:
      required:
        - id
        - name
        - provider
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
    DataLinkDeleteItemRequest:
      type: object
      properties:
        files:
          type: array
          items:
            type: string
        dirs:
          type: array
          items:
            type: string
    DataLinkDeleteItemResponse:
      type: object
      properties:
        deletionFailures:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkItemDeletionFailure"
    DataLinkDownloadScriptResponse:
      type: object
      properties:
        script:
          type: string
    DataLinkDownloadUrlResponse:
      type: object
      properties:
        url:
          type: string
    DataLinkDto:
      type: object
      properties:
        id:
          type: string
          x-speakeasy-name-override: dataLinkId
          description: Unique identifier for the data link
        name:
          type: string
          description: Display name for the data link connection
        description:
          type: string
          description: Description of the data link's purpose and contents
        resourceRef:
          type: string
          description: Reference identifier for the external resource
        type:
          $ref: "#/components/schemas/DataLinkType"
          description: Type of data link (e.g., S3, Azure Blob, etc.)
        provider:
          $ref: "#/components/schemas/DataLinkProvider"
          description: Cloud provider hosting the data link
        region:
          type: string
          description: Geographic region where the data link is hosted
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkCredentials"
          description: Array of credentials required to access the data link
        publicAccessible:
          type: boolean
        hidden:
          type: boolean
        status:
          allOf:
            - $ref: "#/components/schemas/DataLink.Status"
            - type: string
              readOnly: true
        message:
          type: string
      x-speakeasy-entity: DataLink
      x-speakeasy-entity-description: |
        Manage connections to external storage systems and data repositories.

        Data links provide access to cloud storage for pipeline input/output operations,
        enabling seamless data integration.
      description: |
        Represents a data link connection to external storage systems.
        Provides access to cloud storage, file systems, and data repositories
        for pipeline input/output operations.
    DataLinkFinishMultiPartUploadRequest:
      type: object
      properties:
        uploadId:
          type: string
        fileName:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/UploadEtag"
        withError:
          type: boolean
    DataLinkItem:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/DataLinkItemType"
        name:
          type: string
        size:
          type: integer
          format: int64
        mimeType:
          type: string
    DataLinkItemDeletionFailure:
      required:
        - dataLinkItem
        - errorMessage
      type: object
      properties:
        dataLinkItem:
          $ref: "#/components/schemas/DataLinkItem"
        errorMessage:
          type: string
    DataLinkItemType:
      type: string
      enum:
        - FOLDER
        - FILE
    DataLinkMultiPartUploadRequest:
      type: object
      properties:
        fileName:
          type: string
        contentLength:
          type: integer
          format: int64
        contentType:
          type: string
    DataLinkMultiPartUploadResponse:
      type: object
      properties:
        uploadId:
          type: string
        uploadUrls:
          type: array
          items:
            type: string
    DataLinkProvider:
      type: string
      enum:
        - aws
        - google
        - azure
        - azure_entra
        - seqeracompute
      x-speakeasy-name-override: providerType
    DataLinkResponse:
      type: object
      properties:
        dataLink:
          $ref: "#/components/schemas/DataLinkDto"
    DataLinkSimpleItem:
      required:
        - path
        - size
      type: object
      properties:
        path:
          type: string
        size:
          type: integer
          format: int64
    DataLinkType:
      type: string
      enum:
        - bucket
    DataLinkUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        credentialsId:
          type: string
    DataLinksListResponse:
      type: object
      properties:
        dataLinks:
          type: array
          items:
            $ref: "#/components/schemas/DataLinkDto"
        totalSize:
          type: integer
          format: int64
    DataStudioCheckpointDto:
      required:
        - author
        - dateCreated
        - dateSaved
        - id
        - name
        - path
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateSaved:
          type: string
          format: date-time
        author:
          $ref: "#/components/schemas/StudioUser"
        path:
          type: string
    DataStudioCheckpointUpdateRequest:
      type: object
      properties:
        name:
          type: string
    DataStudioComputeEnvDto:
      type: object
      allOf:
        - $ref: "#/components/schemas/ComputeEnvDbDto"
        - properties:
            credentialsId:
              type: string
            workDir:
              type: string
      x-speakeasy-entity: Studios
    DataStudioConfiguration:
      type: object
      properties:
        gpu:
          minimum: 0
          type: integer
          format: int32
          description: Set to 0 to disable GPU or 1 to enable GPU.
          example: 0
          default: 0
        cpu:
          minimum: 0
          type: integer
          format: int32
          description: Number of CPU cores to allocate. Set to 0 to use the compute environment configured defaults.
          example: 2
          default: 2
        memory:
          minimum: 0
          type: integer
          format: int32
          description: Memory allocation for the Studio session in megabytes (MB). Set to 0 to use the compute environment configured defaults.
          example: 4096
          default: 8192
        mountData:
          type: array
          items:
            type: string
        environment:
          type: object
          additionalProperties:
            type: string
          nullable: true
          description: Studio-specific environment variables as key-value pairs. Variable names must contain only alphanumeric and underscore characters, and cannot begin with a number.
          x-speakeasy-param-force-new: true
          x-speakeasy-param-optional: true
          x-speakeasy-plan-validators: StudioEnvironmentVariableValidator
        condaEnvironment:
          maxLength: 2048
          type: string
        lifespanHours:
          minimum: 0
          type: integer
          format: int32
          description: Maximum lifespan of the Studio session in hours
          example: 2
      x-speakeasy-entity: Studios
      x-speakeasy-entity-description: |
        Studios is a unified platform where you can host a combination of
        container images and compute environments for interactive analysis using
        your preferred tools, like JupyterLab, an R-IDE, Visual Studio Code IDEs,
        or Xpra remote desktops. Each Studio session is an individual interactive
        environment that encapsulates the live environment for dynamic data analysis.

        Note:
        On Seqera Cloud, the free tier permits only one running Studio session at a time.
        To run simultaneous sessions, contact Seqera for a Seqera Cloud Pro license.
    DataStudioCreateRequest:
      type: object
      properties:
        name:
          maxLength: 80
          minLength: 1
          type: string
          example: "my-jupyter-studio"
        description:
          maxLength: 2048
          type: string
          example: "Jupyter studio for data analysis and visualization"
        dataStudioToolUrl:
          minLength: 1
          type: string
          example: "public.cr.seqera.io/platform/data-studio-jupyter:4.2.5-0.8"
        computeEnvId:
          minLength: 1
          type: string
          example: "compute-env-id"
        initialCheckpointId:
          type: integer
          format: int64
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        isPrivate:
          type: boolean
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
          description: List of resource label IDs to associate with this Studio. Reference labels using seqera_labels.label_name.id
        spot:
          type: boolean
          nullable: true
          description: Whether to use spot or on-demand instances. Studios using Spot instances are not compatible with batch compute environments.
      x-speakeasy-entity: Studios
      x-speakeasy-entity-description: |
        Studios is a unified platform where you can host a combination of
        container images and compute environments for interactive analysis using
        your preferred tools, like JupyterLab, an R-IDE, Visual Studio Code IDEs,
        or Xpra remote desktops. Each Studio session is an individual interactive
        environment that encapsulates the live environment for dynamic data analysis.

        Note:
        On Seqera Cloud, the free tier permits only one running Studio session at a time.
        To run simultaneous sessions, contact Seqera for a Seqera Cloud Pro license.
      required:
        - computeEnvId
        - dataStudioToolUrl
        - name
        - configuration
    DataStudioCreateResponse:
      type: object
      properties:
        studio:
          $ref: "#/components/schemas/DataStudioDto"
    DataStudioDto:
      type: object
      properties:
        sessionId:
          type: string
          x-speakeasy-param-readonly: true
          x-speakeasy-name-override: sessionId
          x-speakeasy-param-optional: true
          description: Unique identifier for the Studio session
        workspaceId:
          type: integer
          format: int64
          description: Numeric identifier of the workspace containing the Studio
        name:
          type: string
          description: Display name for the Studio session
        description:
          type: string
          description: Description of the Studio session's purpose
        configuration:
          $ref: "#/components/schemas/DataStudioConfiguration"
        isPrivate:
          type: boolean
      x-speakeasy-entity: Studios
      description: |
        Represents a Studio session for interactive data analysis.
        Contains configuration and runtime information for Jupyter-based
        computational environments.
    DataStudioDto.ParentCheckpoint:
      type: object
      properties:
        checkpointId:
          type: integer
          format: int64
        checkpointName:
          type: string
        sessionId:
          type: string
        studioName:
          type: string
    DataStudioListCheckpointsResponse:
      required:
        - checkpoints
        - totalSize
      type: object
      properties:
        checkpoints:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioCheckpointDto"
        totalSize:
          type: integer
          format: int64
    DataStudioListResponse:
      required:
        - studios
        - totalSize
      type: object
      properties:
        studios:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioDto"
        totalSize:
          type: integer
          format: int64
    DataStudioMountedLinksResponse:
      type: object
      properties:
        dataLinkIds:
          type: array
          items:
            type: string
    DataStudioProgressStep:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioProgressStep.Status"
        message:
          type: string
        warnings:
          type: array
          items:
            type: string
    DataStudioProgressStep.Status:
      type: string
      enum:
        - pending
        - in-progress
        - succeeded
        - errored
    DataStudioQueryAttribute:
      type: string
      enum:
        - labels
    DataStudioStartRequest:
      type: object
      properties:
        configuration:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/DataStudioConfiguration"
        description:
          type: string
          nullable: true
        labelIds:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        spot:
          type: boolean
          nullable: true
    DataStudioStartResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioStatus:
      type: string
      enum:
        - starting
        - running
        - stopping
        - stopped
        - errored
        - building
        - buildFailed
    DataStudioStatusInfo:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/DataStudioStatus"
        message:
          type: string
        lastUpdate:
          type: string
          format: date-time
    DataStudioStopResponse:
      required:
        - jobSubmitted
        - sessionId
        - statusInfo
      type: object
      properties:
        jobSubmitted:
          type: boolean
        sessionId:
          type: string
        statusInfo:
          $ref: "#/components/schemas/DataStudioStatusInfo"
    DataStudioTemplate:
      type: object
      properties:
        repository:
          type: string
        icon:
          type: string
        status:
          $ref: "#/components/schemas/DataStudioVersionStatus"
        tool:
          type: string
    DataStudioTemplatesListResponse:
      required:
        - templates
        - totalSize
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: "#/components/schemas/DataStudioTemplate"
        totalSize:
          type: integer
          format: int64
    DataStudioVersionStatus:
      type: string
      enum:
        - recommended
        - deprecated
        - experimental
        - unsupported
    DataStudioWorkspaceSettingsResponse:
      required:
        - lifespanHours
        - orgId
        - wspId
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        wspId:
          type: integer
          format: int64
        lifespanHours:
          type: integer
          format: int32
    Dataset:
      required:
        - name
      type: object
      properties:
        id:
          maxLength: 22
          type: string
          description: Unique identifier for the dataset (max 22 characters)
        name:
          maxLength: 100
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,98}$"
          type: string
          description: Dataset name following naming conventions (1-100 characters)
        description:
          maxLength: 1000
          type: string
          description: Detailed description of the dataset contents and purpose (max 1000 characters)
        mediaType:
          maxLength: 80
          type: string
          description: MIME type or media type of the dataset content (max 80 characters)
        deleted:
          type: boolean
          readOnly: true
          description: Read-only flag indicating if the dataset has been deleted
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: Datasets
      x-speakeasy-entity-description: |
        Manage datasets for storing and versioning research data.

        Datasets in Seqera are CSV (comma-separated values) and TSV
        (tab-separated values) files stored in a workspace.

        They are used as inputs to pipelines to simplify data management,
        minimize user data-input errors, and facilitate reproducible workflows.
      description: |
        Represents a dataset in the Seqera Platform.
        Contains dataset metadata, versioning information, and access
        controls for data management and sharing.
    DatasetVersionDbDto:
      type: object
      properties:
        datasetId:
          type: string
        datasetName:
          type: string
        datasetDescription:
          type: string
        hasHeader:
          type: boolean
        version:
          type: integer
          format: int64
        lastUpdated:
          type: string
          format: date-time
        fileName:
          type: string
        mediaType:
          type: string
        url:
          type: string
    DeleteCredentialsConflictResponse:
      type: object
      properties:
        credentialsId:
          type: string
        conflicts:
          type: array
          items:
            $ref: "#/components/schemas/DeleteCredentialsConflictResponse.Conflict"
    DeleteCredentialsConflictResponse.Conflict:
      type: object
      properties:
        type:
          type: string
        id:
          type: string
        name:
          type: string
        url:
          type: string
    DeleteWorkflowsRequest:
      type: object
      properties:
        workflowIds:
          type: array
          items:
            type: string
    DeleteWorkflowsResponse:
      type: object
      properties:
        failedWorkflowIds:
          type: array
          items:
            type: string
    DescribeActionResponse:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/ActionResponseDto"
    DescribeComputeEnvResponse:
      type: object
      properties:
        computeEnv:
          $ref: "#/components/schemas/ComputeEnvResponseDto"
          x-speakeasy-entity: ComputeEnv
      x-speakeasy-entity: ComputeEnv
    DescribeCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    DescribeDatasetResponse:
      type: object
      properties:
        dataset:
          $ref: "#/components/schemas/Dataset"
    DescribeLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/Launch"
    DescribeOrganizationQuotasResponse:
      type: object
      properties:
        quotas:
          $ref: "#/components/schemas/OrganizationQuotas"
    DescribeOrganizationResponse:
      type: object
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationDbDto"
    DescribePipelineInfoResponse:
      type: object
      properties:
        pipelineInfo:
          $ref: "#/components/schemas/PipelineInfo"
    DescribePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    DescribePipelineSecretResponse:
      type: object
      properties:
        pipelineSecret:
          $ref: "#/components/schemas/PipelineSecret"
    DescribePlatformResponse:
      type: object
      properties:
        metainfo:
          $ref: "#/components/schemas/PlatformMetainfo"
    DescribeTaskResponse:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/Task"
    DescribeTeamResponse:
      type: object
      properties:
        team:
          $ref: "#/components/schemas/TeamDbDto"
    DescribeUserResponse:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/UserDbDto"
        needConsent:
          type: boolean
        defaultWorkspaceId:
          type: integer
          format: int64
    DescribeWorkflowLaunchResponse:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchResponse"
    DescribeWorkflowResponse:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        workspaceId:
          type: integer
          format: int64
      x-speakeasy-entity: Workflows
      x-speakeasy-entity-description: |
        Manage workflow executions and pipeline runs.

        Workflows represent individual executions of Nextflow pipelines,
        containing execution status, parameters, results, and monitoring
        information for computational workflows.
    DescribeWorkspaceResponse:
      type: object
      properties:
        workspace:
          $ref: "#/components/schemas/Workspace"
    EfsFileSystem:
      type: object
      properties:
        id:
          type: string
    EksComputeConfig:
      title: Amazon EKS cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
              description: AWS region
            clusterName:
              type: string
              description: The AWS EKS cluster name
            waveEnabled:
              type: boolean
              x-speakeasy-name-override: enable_wave
            fusion2Enabled:
              type: boolean
              x-speakeasy-name-override: enable_fusion
      required:
        - region
        - clusterName
    EksPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    EmptyBodyRequest:
      type: object
      x-speakeasy-terraform-ignore: true
    ErrorResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    EventType:
      type: object
      properties:
        source:
          type: string
        display:
          type: string
        description:
          type: string
        enabled:
          type: boolean
    ForgeConfig:
      type: object
      properties:
        type:
          type: string
          enum:
            - SPOT
            - EC2
          description: |
            Type of compute instances to provision:
            - SPOT: Use EC2 Spot instances (cost-effective, can be interrupted)
            - EC2: Use On-Demand EC2 instances (reliable, higher cost)
            - FARGATE: Use AWS Fargate serverless compute
          example: "SPOT"
          x-speakeasy-param-force-new: true
        minCpus:
          type: integer
          format: int32
          description: |
            Minimum number of CPUs to maintain in the compute environment.
            Setting to 0 allows environment to scale to zero when idle.
          example: 0
          x-speakeasy-param-force-new: true
          x-speakeasy-param-optional: true
        maxCpus:
          type: integer
          format: int32
          description: |
            Maximum number of CPUs available in the compute environment.
            Subject to AWS service quotas.
          example: 256
          x-speakeasy-param-force-new: true
        gpuEnabled:
          type: boolean
          description: |
            Enable GPU support for compute instances.
            When enabled, GPU-capable instance types will be selected.
          example: false
          x-speakeasy-param-force-new: true
        ebsAutoScale:
          type: boolean
          description: |
            Enable automatic EBS volume expansion.
            When enabled, EBS volumes automatically expand as needed.
          example: true
          x-speakeasy-param-force-new: true
        instanceTypes:
          type: array
          items:
            type: string
          description: |
            List of EC2 instance types to use.
            Examples: ["m5.xlarge", "m5.2xlarge"], ["c5.2xlarge"], ["p3.2xlarge"]
            Default: ["optimal"] - AWS Batch selects appropriate instances
          example: ["m5.xlarge", "m5.2xlarge", "m5.xlarge", "m5.2xlarge"]
          x-speakeasy-param-force-new: true
        allocStrategy:
          type: string
          enum:
            - BEST_FIT
            - BEST_FIT_PROGRESSIVE
            - SPOT_CAPACITY_OPTIMIZED
            - SPOT_PRICE_CAPACITY_OPTIMIZED
          description: |
            Strategy for allocating compute resources:
            - BEST_FIT: Selects instance type that best fits job requirements
            - BEST_FIT_PROGRESSIVE: Similar to BEST_FIT but widens search progressively
            - SPOT_CAPACITY_OPTIMIZED: For Spot instances, selects from pools with optimal capacity
            - SPOT_PRICE_CAPACITY_OPTIMIZED: Optimizes for both price and capacity
            Note: SPOT_CAPACITY_OPTIMIZED only valid when type is SPOT
          example: "SPOT_CAPACITY_OPTIMIZED"
          x-speakeasy-param-force-new: true
        imageId:
          type: string
        vpcId:
          type: string
          description: |
            VPC ID where compute environment will be deployed.
            Format: vpc- followed by hexadecimal characters
          example: "vpc-1234567890abcdef0"
          x-speakeasy-param-force-new: true
        subnets:
          type: array
          items:
            type: string
          description: |
            List of subnet IDs for compute instances.
            Subnets must be in the specified VPC. Use multiple subnets for high availability.
            Must have sufficient IP addresses.
          example: ["subnet-12345", "subnet-67890", "subnet-12345", "subnet-67890"]
          x-speakeasy-param-force-new: true
        securityGroups:
          type: array
          items:
            type: string
          description: |
            List of security group IDs to attach to compute instances.
            Security groups must allow necessary network access.
          example: ["sg-12345678", "sg-12345678"]
          x-speakeasy-param-force-new: true
        fsxMount:
          type: string
          description: |
            Path where FSx will be mounted in the container.
          example: "/fsx"
          x-speakeasy-param-force-new: true
        fsxName:
          type: string
          description: |
            FSx for Lustre file system name.
          example: "my-fsx-filesystem"
          x-speakeasy-param-force-new: true
        fsxSize:
          type: integer
          format: int32
          description: |
            Size of FSx file system in GB.
          example: 1200
          x-speakeasy-param-force-new: true
        disposeOnDeletion:
          type: boolean
          description: |
            When set to true for AWS Batch forge environments, automatically deletes AWS resources
            created during compute environment setup when the Terraform resource is destroyed.

            The following AWS resources will be deleted:
            1. AWS Batch Compute Environments - The Batch compute environment itself
            2. AWS Batch Job Queues - Associated job queues (head queue, compute queue, dragen queue)
            3. EC2 Launch Templates - Launch templates for the compute instances
            4. IAM Roles - Execution roles, head job roles, and other service roles
            5. IAM Instance Profiles - Instance profiles attached to compute instances
            6. FSx File Systems - FSx for Lustre file systems (if created during forge)
            7. EFS File Systems - Elastic File Systems (if created during forge)

            Note: The AWS credentials associated with this compute environment must have appropriate
            permissions to delete these resources.

            Important: Deleting a workspace with active compute environments will bypass this cleanup
            and require manual removal of AWS resources. We recommend deleting compute environments
            before deleting workspaces.
          example: true
          x-speakeasy-param-force-new: true
        ec2KeyPair:
          type: string
          description: |
            EC2 key pair name for SSH access to compute instances.
            Key pair must exist in the specified region.
          example: "my-keypair"
          x-speakeasy-param-force-new: true
        allowBuckets:
          type: array
          items:
            type: string
        ebsBlockSize:
          type: integer
          format: int32
          description: |
            Size of EBS root volume in GB (minimum 8 GB, maximum 16 TB).
          example: 100
          x-speakeasy-param-force-new: true
        bidPercentage:
          type: integer
          format: int32
          title: "Bid Percentage"
          description: |
            The maximum percentage that a Spot Instance price can be when compared with the On-Demand price
            for that instance type before instances are launched. For example, if your maximum percentage is 20%,
            then the Spot price must be less than 20% of the current On-Demand price for that Amazon EC2 instance.
            You always pay the lowest (market) price and never more than your maximum percentage. If you leave this
            field empty, the default value is 100% of the On-Demand price. For most use cases, we recommend leaving
            this field empty.

            Must be a whole number between 0 and 100 (inclusive).
          example: 20
          minimum: 0
          maximum: 100
        efsCreate:
          type: boolean
          description: Automatically create an EFS file system
          example: false
          x-speakeasy-param-force-new: true
        efsId:
          type: string
          description: |
            EFS file system ID to mount.
            Format: fs- followed by hexadecimal characters.
            EFS must be in the same VPC and region.
          example: "fs-1234567890abcdef0"
          x-speakeasy-param-force-new: true
        efsMount:
          type: string
          description: |
            Path where EFS will be mounted in the container.
          example: "/mnt/efs"
          x-speakeasy-param-force-new: true
        dragenEnabled:
          type: boolean
        dragenAmiId:
          type: string
        ebsBootSize:
          type: integer
          format: int32
        ecsConfig:
          type: string
        fargateHeadEnabled:
          type: boolean
          description: |
            Use Fargate for head job instead of EC2.
            Reduces costs by running head job on serverless compute.
            Only applicable when using EC2 for worker jobs.
          example: false
          x-speakeasy-param-force-new: true
        arm64Enabled:
          type: boolean
        dragenInstanceType:
          type: string
      required:
        - type
        - minCpus
        - maxCpus
    FsxFileSystem:
      type: object
      properties:
        id:
          type: string
        dns:
          type: string
        mount:
          type: string
    GetProgressResponse:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/ProgressData"
    GetWorkflowMetricsResponse:
      type: object
      properties:
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
    GitHubSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
          x-speakeasy-param-sensitive: true
          x-speakeasy-param-suppress-computed-diff: true
    GitLabSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    GiteaSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
    GithubActionConfig:
      type: object
      properties:
        discriminator:
          type: string
        events:
          type: array
          items:
            type: string
    GithubActionEvent:
      type: object
      properties:
        discriminator:
          type: string
        ref:
          type: string
        commitId:
          type: string
        commitMessage:
          type: string
        pusherName:
          type: string
        pusherEmail:
          type: string
        timestamp:
          type: string
          format: date-time
    GkeComputeConfig:
      title: Google GKE cluster configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/K8sComputeConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            workDir:
              type: string
            preRunScript:
              type: string
            postRunScript:
              type: string
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
            nextflowConfig:
              type: string
            region:
              type: string
              description: The GKE cluster region - or - zone
            clusterName:
              type: string
              description: The GKE cluster name
            fusion2Enabled:
              type: boolean
              x-speakeasy-name-override: enable_fusion
            waveEnabled:
              type: boolean
              x-speakeasy-name-override: enable_wave
      required:
        - region
        - clusterName
    GkePlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        clusters:
          type: array
          items:
            type: string
    GoogleBatchConfig:
      title: Google Batch service configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          x-speakeasy-terraform-ignore: true
        location:
          type: string
        workDir:
          type: string
        spot:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        cpuPlatform:
          type: string
        machineType:
          type: string
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        waveEnabled:
          type: boolean
          x-speakeasy-name-override: enable_wave
        fusion2Enabled:
          type: boolean
          x-speakeasy-name-override: enable_fusion
        serviceAccount:
          type: string
        network:
          type: string
        subnetwork:
          type: string
        headJobInstanceTemplate:
          type: string
        computeJobsInstanceTemplate:
          type: string
    GoogleLifeSciencesConfig:
      title: Google life sciences configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          x-speakeasy-terraform-ignore: true
        region:
          type: string
        zones:
          type: array
          items:
            type: string
        location:
          type: string
        workDir:
          type: string
        preemptible:
          type: boolean
        bootDiskSizeGb:
          type: integer
          format: int32
        projectId:
          type: string
        sshDaemon:
          type: boolean
        sshImage:
          type: string
        debugMode:
          type: integer
          format: int32
        copyImage:
          type: string
        usePrivateAddress:
          type: boolean
        labels:
          type: object
          additionalProperties:
            type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
        nfsTarget:
          type: string
        nfsMount:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
    GooglePlatformMetainfo:
      type: object
      properties:
        locations:
          type: array
          items:
            type: string
        discriminator:
          type: string
        warnings:
          type: array
          items:
            type: string
        zones:
          type: array
          items:
            type: string
        buckets:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Bucket"
        filestores:
          type: array
          items:
            $ref: "#/components/schemas/GooglePlatformMetainfo.Filestore"
    GooglePlatformMetainfo.Bucket:
      type: object
      properties:
        path:
          type: string
    GooglePlatformMetainfo.Filestore:
      type: object
      properties:
        target:
          type: string
        name:
          type: string
        location:
          type: string
    GoogleSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        data:
          type: string
          writeOnly: true
          x-speakeasy-param-sensitive: true
          x-speakeasy-param-suppress-computed-diff: true
      x-speakeasy-plan-validators: GoogleKeysCrdentialValidator
    GridPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Image:
      required:
        - arch
        - description
        - id
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        arch:
          type: string
    InstanceType:
      required:
        - arch
      type: object
      properties:
        id:
          type: string
        arch:
          type: string
    Iterator_String_:
      type: object
    JobCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
    JobInfoDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        operationId:
          type: string
        message:
          type: string
        status:
          type: string
        exitCode:
          type: integer
          format: int32
    JobQueue:
      required:
        - name
        - state
      type: object
      properties:
        name:
          type: string
        state:
          type: string
    K8sComputeConfig:
      title: Kubernetes compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          x-speakeasy-terraform-ignore: true
        workDir:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        server:
          type: string
        sslCert:
          type: string
        namespace:
          type: string
        computeServiceAccount:
          type: string
        headServiceAccount:
          type: string
        storageClaimName:
          type: string
        storageMountPath:
          type: string
        podCleanup:
          $ref: "#/components/schemas/PodCleanupPolicy"
        headPodSpec:
          type: string
        servicePodSpec:
          type: string
        environment:
          type: array
          items:
            $ref: "#/components/schemas/ConfigEnvVariable"
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        nextflowConfig:
          type: string
      required:
        - server
        - namespace
        - sslCert
        - headServiceAccount
        - storageClaimName
    K8sPlatformMetaInfo:
      type: object
      properties:
        discriminator:
          type: string
    K8sSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        certificate:
          type: string
        privateKey:
          type: string
          writeOnly: true
        token:
          type: string
          writeOnly: true
    LabelDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          x-speakeasy-param-readonly: true
          description: Unique numeric identifier for the label
        name:
          type: string
          description: Name or key of the label
        value:
          type: string
          description: Value associated with the label
        resource:
          type: boolean
          description: Flag indicating if this is a resource-level label
        isDefault:
          type: boolean
          description: Flag indicating if this is a default system label
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the label was created
      description: |
        Represents a label for organizing and categorizing resources.
        Provides metadata tagging capabilities for pipelines, workflows,
        and other platform resources.
    LabelType:
      type: string
      enum:
        - simple
        - resource
        - all
    Launch:
      required:
        - dateCreated
        - pipeline
      type: object
      properties:
        id:
          maxLength: 22
          type: string
          x-speakeasy-param-readonly: true
        computeEnv:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          maxLength: 200
          type: string
        workDir:
          type: string
        revision:
          maxLength: 100
          type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        mainScript:
          maxLength: 200
          type: string
        entryName:
          maxLength: 80
          type: string
        schemaName:
          maxLength: 100
          pattern: "[\\p{Graph}&&[^/]]\\p{Graph}+"
          type: string
        resume:
          type: boolean
        resumeLaunchId:
          maxLength: 22
          type: string
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        sessionId:
          maxLength: 36
          type: string
        runName:
          maxLength: 80
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        optimizationId:
          maxLength: 32
          type: string
        optimizationTargets:
          type: string
        headJobCpus:
          type: integer
          format: int32
        headJobMemoryMb:
          type: integer
          format: int32
        launchContainer:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    LaunchActionRequest:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
    LaunchActionResponse:
      type: object
      properties:
        workflowId:
          type: string
    ListAccessTokensResponse:
      type: object
      properties:
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/AccessToken"
    ListActionsResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            $ref: "#/components/schemas/ListActionsResponse.ActionInfo"
    ListActionsResponse.ActionInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pipeline:
          type: string
        source:
          $ref: "#/components/schemas/Action.Source"
        status:
          $ref: "#/components/schemas/Action.Status"
        lastSeen:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        event:
          $ref: "#/components/schemas/Action.EventType"
        endpoint:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        usageCmd:
          type: string
    ListComputeEnvsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: "#/components/schemas/ListComputeEnvsResponse.Entry"
    ListComputeEnvsResponse.Entry:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        platform:
          type: string
        status:
          $ref: "#/components/schemas/ComputeEnv.Status"
        message:
          type: string
        lastUsed:
          type: string
          format: date-time
        primary:
          type: boolean
        workspaceName:
          type: string
        visibility:
          type: string
        workDir:
          type: string
        credentialsId:
          type: string
        region:
          type: string
    ListCredentialsResponse:
      type: object
      properties:
        credentials:
          type: array
          items:
            $ref: "#/components/schemas/Credentials"
    ListDatasetVersionsResponse:
      type: object
      properties:
        versions:
          type: array
          items:
            $ref: "#/components/schemas/DatasetVersionDbDto"
    ListDatasetsResponse:
      type: object
      properties:
        datasets:
          type: array
          items:
            $ref: "#/components/schemas/Dataset"
    ListEventTypesResponse:
      type: object
      properties:
        eventTypes:
          type: array
          items:
            $ref: "#/components/schemas/EventType"
    ListLabelsResponse:
      type: object
      properties: {}
    ListMembersResponse:
      type: object
      properties:
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberDbDto"
        totalSize:
          type: integer
          format: int64
    ListOrganizationsResponse:
      type: object
      properties:
        organizations:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationDbDto"
        totalSize:
          type: integer
          format: int32
    ListParticipantsResponse:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: "#/components/schemas/ParticipantDbDto"
        totalSize:
          type: integer
          format: int64
    ListPipelineInfoResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            type: string
    ListPipelineSecretsResponse:
      type: object
      properties:
        pipelineSecrets:
          type: array
          items:
            $ref: "#/components/schemas/PipelineSecret"
        totalSize:
          type: integer
          format: int64
    ListPipelinesResponse:
      type: object
      properties:
        pipelines:
          type: array
          items:
            $ref: "#/components/schemas/PipelineDbDto"
        totalSize:
          type: integer
          format: int64
    ListPlatformsResponse:
      type: object
      properties:
        platforms:
          type: array
          items:
            $ref: "#/components/schemas/ComputePlatform"
    ListRegionsResponse:
      type: object
      properties:
        regions:
          type: array
          items:
            $ref: "#/components/schemas/ComputeRegion"
    ListTasksResponse:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/DescribeTaskResponse"
        total:
          type: integer
          format: int64
    ListTeamResponse:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: "#/components/schemas/TeamDbDto"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse:
      type: object
      properties:
        workflows:
          type: array
          items:
            $ref: "#/components/schemas/ListWorkflowsResponse.ListWorkflowsElement"
        totalSize:
          type: integer
          format: int64
    ListWorkflowsResponse.ListWorkflowsElement:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/WorkflowDbDto"
        progress:
          $ref: "#/components/schemas/ProgressData"
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        labels:
          type: array
          items:
            $ref: "#/components/schemas/LabelDbDto"
        starred:
          type: boolean
        optimized:
          type: boolean
    ListWorkspacesAndOrgResponse:
      type: object
      properties:
        orgsAndWorkspaces:
          type: array
          items:
            $ref: "#/components/schemas/OrgAndWorkspaceDto"
    ListWorkspacesResponse:
      type: object
      properties:
        workspaces:
          type: array
          items:
            $ref: "#/components/schemas/WorkspaceDbDto"
    LocalPlatformMetainfo:
      type: object
      properties:
        discriminator:
          type: string
    Log:
      type: object
      properties:
        name:
          type: string
        cmd:
          type: array
          items:
            type: string
        start_time:
          type: string
        end_time:
          type: string
        stdout:
          type: string
        stderr:
          type: string
        exit_code:
          type: integer
          format: int32
    LogPage:
      type: object
      properties:
        truncated:
          type: boolean
        entries:
          $ref: "#/components/schemas/Iterator_String_"
        rewindToken:
          type: string
        forwardToken:
          type: string
        pending:
          type: boolean
        message:
          type: string
        downloads:
          type: array
          items:
            $ref: "#/components/schemas/LogPage.Download"
    LogPage.Download:
      type: object
      properties:
        saveName:
          type: string
        fileName:
          type: string
        displayText:
          type: string
    LsfComputeConfig:
      title: IBM LSF configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            unitForLimits:
              type: string
            perJobMemLimit:
              type: boolean
            perTaskReserve:
              type: boolean
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    MemberDbDto:
      type: object
      properties:
        memberId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        role:
          $ref: "#/components/schemas/OrgRole"
    MoabComputeConfig:
      title: Moab configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    MultiRequestFileSchema:
      type: object
      properties:
        file:
          type: string
          format: binary
    NavbarConfig:
      type: object
      properties:
        menus:
          type: array
          items:
            $ref: "#/components/schemas/NavbarConfig.NavbarMenu"
    NavbarConfig.NavbarMenu:
      type: object
      properties:
        label:
          type: string
        url:
          type: string
    OrgAndWorkspaceDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
        orgName:
          type: string
        orgLogoUrl:
          type: string
        orgType:
          $ref: "#/components/schemas/OrgType"
        workspaceId:
          type: integer
          format: int64
        workspaceName:
          type: string
        workspaceFullName:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
        roles:
          type: array
          items:
            type: string
    OrgRole:
      type: string
      enum:
        - owner
        - member
        - collaborator
    OrgType:
      type: string
      enum:
        - academic
        - evaluating
        - pro
        - basic
        - internal
    Organization:
      required:
        - fullName
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
          x-speakeasy-param-optional: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
          description: Short name or handle for the organization (used in URLs and resource paths). Required.
          example: "my-org"
        fullName:
          maxLength: 100
          type: string
          description: Complete formal display name of the organization. Required.
          example: "My Organization"
        description:
          maxLength: 1000
          type: string
          description: Detailed description of the organization's purpose and activities.
          example: "Put your organization description here"
        location:
          maxLength: 100
          type: string
          description: Geographic location or address of the organization.
          example: "Toronto, CA"
        website:
          pattern: ""
          type: string
          description: Official website URL for the organization.
          example: "https://www.mybiotech.com"
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: Orgs
      x-speakeasy-entity-description: |
        Manage your organization in Seqera platform using this resource.

        Organizations are the top-level structure and contain workspaces, members, and teams.
        You can create multiple organizations, each of which can contain multiple workspaces
        with shared users and resources. This means you can customize and organize the use of
        resources while maintaining an access control layer for users associated with a workspace.
    OrganizationDbDto:
      type: object
      properties:
        orgId:
          type: integer
          format: int64
          description: Unique numeric identifier for the organization
        name:
          type: string
          description: Short name or handle for the organization (used in URLs and paths)
        fullName:
          type: string
          description: Complete formal display name of the organization
        description:
          type: string
          description: Detailed description of the organization's purpose and activities
        location:
          type: string
          description: Geographic location or address of the organization
        website:
          type: string
          description: Official website URL for the organization
        memberId:
          type: integer
          format: int64
        memberRole:
          $ref: "#/components/schemas/OrgRole"
      x-speakeasy-entity: Orgs
      description: |
        Represents an organization in the Seqera Platform.
        Contains organizational metadata, settings, and member management
        information for multi-tenant environments.
    OrganizationQuotas:
      type: object
      properties:
        maxWorkspaces:
          type: integer
          format: int64
        maxMembers:
          type: integer
          format: int64
        maxTeams:
          type: integer
          format: int64
        maxPipelinesPerWorkspace:
          type: integer
          format: int64
        maxParticipantsPerWorkspace:
          type: integer
          format: int64
        maxDatasetsPerWorkspace:
          type: integer
          format: int64
        maxVersionsPerDataset:
          type: integer
          format: int64
        maxRuns:
          type: integer
          format: int64
        maxRunHistory:
          type: integer
          format: int64
        maxLabelsPerWorkspace:
          type: integer
          format: int64
        maxDataStudiosRunning:
          type: integer
          format: int64
        maxSeqeraComputeComputeEnvs:
          type: integer
          format: int64
        maxFusionThroughputBytes:
          type: integer
          description: Max Fusion throughput (read and write) in bytes
          format: int64
    ParticipantDbDto:
      type: object
      properties:
        participantId:
          type: integer
          format: int64
        memberId:
          type: integer
          format: int64
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        orgRole:
          $ref: "#/components/schemas/OrgRole"
        teamId:
          type: integer
          format: int64
        teamName:
          type: string
        wspRole:
          $ref: "#/components/schemas/WspRole"
        type:
          $ref: "#/components/schemas/ParticipantType"
        teamAvatarUrl:
          type: string
        userAvatarUrl:
          type: string
    ParticipantType:
      type: string
      enum:
        - MEMBER
        - TEAM
        - COLLABORATOR
    PipelineDbDto:
      type: object
      properties:
        pipelineId:
          type: integer
          format: int64
          description: Unique numeric identifier for the pipeline
          x-speakeasy-param-ordering: 1
          x-speakeasy-param-readonly: true
        name:
          type: string
          description: Display name for the pipeline
          x-speakeasy-param-ordering: 2
        description:
          type: string
          description: Detailed description of the pipeline's purpose and functionality
          x-speakeasy-param-ordering: 3
        icon:
          type: string
          description: Icon identifier or URL for visual representation
          x-speakeasy-param-ordering: 5
        repository:
          type: string
          description: Git repository URL containing the pipeline source code
          x-speakeasy-param-ordering: 4
        userId:
          type: integer
          format: int64
        userName:
          type: string
        userFirstName:
          type: string
        workspaceId:
          type: integer
          format: int64
      x-speakeasy-entity: Pipeline
      x-speakeasy-entity-description: |
        Manage Nextflow pipeline definitions and configurations.

        Pipelines define reusable workflow templates with parameters,
        compute environment settings, and execution configurations
        for scalable bioinformatics and data processing workflows.
      description: |
        Represents a pipeline configuration in the Seqera Platform.
        Contains pipeline metadata, configuration settings, and execution parameters
        for Nextflow workflows.
    PipelineInfo:
      type: object
      properties:
        provider:
          type: string
          x-speakeasy-name-override: repositoryProvider
    PipelineOptimizationStatus:
      type: string
      enum:
        - OPTIMIZED
        - OPTIMIZABLE
        - UNAVAILABLE
    PipelineQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - computeEnv
    PipelineSchemaAttributes:
      type: string
      enum:
        - schema
        - params
    PipelineSchemaResponse:
      required:
        - schema
      type: object
      properties:
        schema:
          type: string
        params:
          type: string
    PipelineSecret:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          x-speakeasy-param-readonly: true
          description: Unique numeric identifier for the secret
        name:
          maxLength: 100
          pattern: "^[a-zA-Z_](?:[0-9A-Za-z]+|(_)(?!\\1)){1,49}$"
          type: string
          description: Secret name used to reference the secret in workflows (max 100 characters). Required.
        lastUsed:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
          description: Timestamp when the secret was last accessed by a workflow
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          x-speakeasy-param-readonly: true
          description: Timestamp when the secret was created
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: PipelineSecret
      x-speakeasy-entity-description: |
        Manage secure secrets for pipeline execution.

        Pipeline secrets store encrypted sensitive data such as API keys,
        passwords, and configuration values used in workflows, providing
        secure access to external services and resources.
      description: |
        Represents a secure secret for pipeline execution.
        Contains encrypted sensitive data such as API keys, passwords,
        and configuration values used in workflows.
    PlatformMetainfo:
      type: object
      discriminator:
        propertyName: discriminator
        mapping:
          gke-platform: "#/components/schemas/GkePlatformMetaInfo"
          aws-cloud: "#/components/schemas/AwsCloudPlatformMetainfo"
          k8s-platform: "#/components/schemas/K8sPlatformMetaInfo"
          grid: "#/components/schemas/GridPlatformMetainfo"
          aws-batch: "#/components/schemas/AwsBatchPlatformMetainfo"
          local-platform: "#/components/schemas/LocalPlatformMetainfo"
          azure-batch: "#/components/schemas/AzBatchPlatformMetainfo"
          eks-platform: "#/components/schemas/EksPlatformMetaInfo"
      oneOf:
        - $ref: "#/components/schemas/AwsBatchPlatformMetainfo"
        - $ref: "#/components/schemas/AwsCloudPlatformMetainfo"
        - $ref: "#/components/schemas/GooglePlatformMetainfo"
        - $ref: "#/components/schemas/AzBatchPlatformMetainfo"
        - $ref: "#/components/schemas/EksPlatformMetaInfo"
        - $ref: "#/components/schemas/GkePlatformMetaInfo"
        - $ref: "#/components/schemas/K8sPlatformMetaInfo"
        - $ref: "#/components/schemas/GridPlatformMetainfo"
        - $ref: "#/components/schemas/LocalPlatformMetainfo"
    PodCleanupPolicy:
      type: string
      enum:
        - on_success
        - always
        - never
    ProcessLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - process
        - readBytes
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        process:
          type: string
        cpus:
          type: integer
          format: int64
          deprecated: true
        cpuTime:
          type: integer
          format: int64
          deprecated: true
        cpuLoad:
          type: integer
          format: int64
          deprecated: true
        memoryRss:
          type: integer
          format: int64
          deprecated: true
        memoryReq:
          type: integer
          format: int64
          deprecated: true
        readBytes:
          type: integer
          format: int64
          deprecated: true
        writeBytes:
          type: integer
          format: int64
          deprecated: true
        volCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        invCtxSwitch:
          type: integer
          format: int64
          deprecated: true
        loadTasks:
          type: integer
          format: int64
          deprecated: true
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    ProgressData:
      type: object
      properties:
        workflowProgress:
          $ref: "#/components/schemas/WorkflowLoad"
        processesProgress:
          type: array
          items:
            $ref: "#/components/schemas/ProcessLoad"
        totalProcesses:
          type: integer
          format: int32
    RandomWorkflowNameResponse:
      type: object
      properties:
        name:
          type: string
    ResourceData:
      type: object
      properties:
        warnings:
          type: array
          items:
            type: string
        mean:
          type: number
          format: float
        min:
          type: number
          format: float
        q1:
          type: number
          format: float
        q2:
          type: number
          format: float
        q3:
          type: number
          format: float
        max:
          type: number
          format: float
        minLabel:
          type: string
        maxLabel:
          type: string
        q1Label:
          type: string
        q2Label:
          type: string
        q3Label:
          type: string
    RunId:
      type: object
      properties:
        run_id:
          type: string
    RunListResponse:
      type: object
      properties:
        runs:
          type: array
          items:
            $ref: "#/components/schemas/RunStatus"
        next_page_token:
          type: string
    RunLog:
      type: object
      properties:
        run_id:
          type: string
        request:
          $ref: "#/components/schemas/RunRequest"
        state:
          $ref: "#/components/schemas/State"
        run_log:
          $ref: "#/components/schemas/Log"
        task_logs:
          type: array
          items:
            $ref: "#/components/schemas/Log"
        outputs:
          type: object
    RunRequest:
      type: object
      properties:
        workflow_params:
          type: string
        workflow_type:
          type: string
        workflow_type_version:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        workflow_engine_parameters:
          type: object
          additionalProperties:
            type: string
        workflow_url:
          type: string
    RunStatus:
      type: object
      properties:
        run_id:
          type: string
        state:
          $ref: "#/components/schemas/State"
    SSHSecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
        privateKey:
          type: string
          writeOnly: true
        passphrase:
          type: string
          writeOnly: true
    SecurityGroup:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        vpcId:
          type: string
    SecurityKeys:
      type: object
      properties:
        discriminator:
          type: string
          x-speakeasy-terraform-ignore: true
      discriminator:
        propertyName: discriminator
        mapping:
          github: "#/components/schemas/GitHubSecurityKeys"
          azurerepos: "#/components/schemas/AzureReposSecurityKeys"
          azure_entra: "#/components/schemas/AzureEntraKeys"
          container-reg: "#/components/schemas/ContainerRegistryKeys"
          tw-agent: "#/components/schemas/AgentSecurityKeys"
          k8s: "#/components/schemas/K8sSecurityKeys"
          ssh: "#/components/schemas/SSHSecurityKeys"
          google: "#/components/schemas/GoogleSecurityKeys"
          bitbucket: "#/components/schemas/BitBucketSecurityKeys"
          gitea: "#/components/schemas/GiteaSecurityKeys"
          seqeracompute: "#/components/schemas/SeqeraComputeSecurityKeys"
          codecommit: "#/components/schemas/CodeCommitSecurityKeys"
          gitlab: "#/components/schemas/GitLabSecurityKeys"
          aws: "#/components/schemas/AwsSecurityKeys"
          azure: "#/components/schemas/AzureSecurityKeys"
      oneOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - $ref: "#/components/schemas/GoogleSecurityKeys"
        - $ref: "#/components/schemas/GitHubSecurityKeys"
        - $ref: "#/components/schemas/GitLabSecurityKeys"
        - $ref: "#/components/schemas/BitBucketSecurityKeys"
        - $ref: "#/components/schemas/GiteaSecurityKeys"
        - $ref: "#/components/schemas/SSHSecurityKeys"
        - $ref: "#/components/schemas/K8sSecurityKeys"
        - $ref: "#/components/schemas/AzureSecurityKeys"
        - $ref: "#/components/schemas/AzureReposSecurityKeys"
        - $ref: "#/components/schemas/ContainerRegistryKeys"
        - $ref: "#/components/schemas/AgentSecurityKeys"
        - $ref: "#/components/schemas/CodeCommitSecurityKeys"
        - $ref: "#/components/schemas/AzureEntraKeys"
        - $ref: "#/components/schemas/SeqeraComputeSecurityKeys"
      x-speakeasy-param-computed: false
    SeqeraComputeConfig:
      title: Seqera Compute configuration
      type: object
      properties:
        discriminator:
          type: string
          description: property to select the compute config platform
          x-speakeasy-terraform-ignore: true
      required:
        - region
        # Pipeline requests
      allOf:
        - $ref: "#/components/schemas/AwsBatchConfig"
    SeqeraComputeSecurityKeys:
      type: object
      allOf:
        - $ref: "#/components/schemas/AwsSecurityKeys"
        - properties:
            discriminator:
              type: string
              x-speakeasy-terraform-ignore: true
    ServiceInfo:
      type: object
      properties:
        version:
          type: string
        apiVersion:
          type: string
        commitId:
          type: string
        authTypes:
          type: array
          items:
            type: string
        loginPath:
          type: string
        navbar:
          $ref: "#/components/schemas/NavbarConfig"
        heartbeatInterval:
          type: integer
          format: int32
        userWorkspaceEnabled:
          type: boolean
        allowInstanceCredentials:
          type: boolean
        landingUrl:
          type: string
        termsOfUseUrl:
          type: string
        contentUrl:
          type: string
        analytics:
          $ref: "#/components/schemas/Analytics"
        allowLocalRepos:
          type: boolean
          deprecated: true
        contentMaxFileSize:
          type: integer
          format: int64
        waveEnabled:
          type: boolean
        groundswellEnabled:
          type: boolean
        groundswellAllowedWorkspaces:
          type: array
          items:
            type: integer
            format: int64
        scmsServerUrl:
          type: string
        forgePrefix:
          type: string
        seqeraCloud:
          type: boolean
        evalWorkspaceIds:
          type: array
          items:
            type: integer
            format: int64
        contactEmail:
          type: string
        allowNextflowCliLogs:
          type: boolean
        logoutUrl:
          type: string
          nullable: true
    ServiceInfoResponse:
      type: object
      properties:
        serviceInfo:
          $ref: "#/components/schemas/ServiceInfo"
    SlurmComputeConfig:
      title: Slurm configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    State:
      type: string
      enum:
        - UNKNOWN
        - QUEUED
        - INITIALIZING
        - RUNNING
        - PAUSED
        - COMPLETE
        - EXECUTOR_ERROR
        - SYSTEM_ERROR
        - CANCELED
        - CANCELING
    StudioUser:
      required:
        - avatar
        - email
        - id
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          type: string
        email:
          type: string
        avatar:
          type: string
    SubmitWorkflowLaunchRequest:
      type: object
      properties:
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
      required:
        - launch
    SubmitWorkflowLaunchResponse:
      type: object
      properties:
        workflowId:
          type: string
    Subnet:
      type: object
      properties:
        id:
          type: string
        zone:
          type: string
        vpcId:
          type: string
    Task:
      required:
        - status
        - taskId
      type: object
      properties:
        hash:
          type: string
        name:
          type: string
        process:
          type: string
        tag:
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        module:
          type: array
          items:
            type: string
        container:
          type: string
        attempt:
          type: integer
          format: int32
        script:
          type: string
        scratch:
          type: string
        workdir:
          type: string
        queue:
          type: string
        cpus:
          type: integer
          format: int32
        memory:
          type: integer
          format: int64
        disk:
          type: integer
          format: int64
        time:
          type: integer
          format: int64
        env:
          type: string
        executor:
          type: string
        machineType:
          type: string
        cloudZone:
          type: string
        priceModel:
          $ref: "#/components/schemas/CloudPriceModel"
        cost:
          type: number
        errorAction:
          type: string
        exitStatus:
          type: integer
          format: int32
        duration:
          type: integer
          format: int64
        realtime:
          type: integer
          format: int64
        nativeId:
          type: string
        pcpu:
          type: number
          format: double
        pmem:
          type: number
          format: double
        rss:
          type: integer
          format: int64
        vmem:
          type: integer
          format: int64
        peakRss:
          type: integer
          format: int64
        peakVmem:
          type: integer
          format: int64
        rchar:
          type: integer
          format: int64
        wchar:
          type: integer
          format: int64
        syscr:
          type: integer
          format: int64
        syscw:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxt:
          type: integer
          format: int64
        invCtxt:
          type: integer
          format: int64
        exit:
          type: integer
          format: int32
        id:
          type: integer
          format: int64
          nullable: true
        taskId:
          type: integer
          format: int64
        status:
          $ref: "#/components/schemas/TaskStatus"
        dateCreated:
          type: string
          format: date-time
          nullable: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
    TaskStatus:
      type: string
      enum:
        - NEW
        - SUBMITTED
        - RUNNING
        - CACHED
        - COMPLETED
        - FAILED
        - ABORTED
    Team:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          readOnly: true
          x-speakeasy-param-optional: true
          x-speakeasy-name-override: teamId
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
          example: "bioinformatics-team"
        description:
          maxLength: 250
          type: string
          example: "Team responsible for bioinformatics analysis and pipeline development"
        dateCreated:
          type: string
          format: date-time
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          readOnly: true
      x-speakeasy-entity: Teams
      x-speakeasy-entity-description: |
        Manage teams within organizations.

        Teams are organizational units that allow
        organization owners to group users together,
        managing team members and access permissions as a whole.
    TeamDbDto:
      type: object
      properties:
        teamId:
          type: integer
          format: int64
          x-speakeasy-param-optional: true
          x-speakeasy-name-override: teamId
          description: Unique numeric identifier for the team
        name:
          type: string
          description: Display name for the team
        description:
          type: string
          description: Description of the team's purpose and responsibilities
        avatarUrl:
          type: string
          description: URL to the team's avatar or profile image
        membersCount:
          type: integer
          format: int64
          description: Total number of members in the team
      x-speakeasy-entity: Teams
      description: |
        Represents a team within an organization.
        Contains team membership, permissions, and access controls
        for collaborative workspace management.
    TraceBeginRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        workflow:
          $ref: "#/components/schemas/Workflow"
        processNames:
          type: array
          items:
            type: string
        towerLaunch:
          type: boolean
    TraceBeginResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
        watchUrl:
          type: string
    TraceCompleteRequest:
      type: object
      properties:
        workflow:
          $ref: "#/components/schemas/Workflow"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/WorkflowMetrics"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceCompleteResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    TraceCreateRequest:
      type: object
      properties:
        launchId:
          type: string
          deprecated: true
        sessionId:
          type: string
        runName:
          type: string
        projectName:
          type: string
        repository:
          type: string
        workflowId:
          type: string
    TraceCreateResponse:
      type: object
      properties:
        message:
          type: string
        workflowId:
          type: string
    TraceHeartbeatRequest:
      type: object
      properties:
        progress:
          $ref: "#/components/schemas/TraceProgressData"
    TraceHeartbeatResponse:
      type: object
      properties:
        message:
          type: string
    TraceProcessingStatus:
      type: string
      enum:
        - OK
        - KO
    TraceProgressData:
      type: object
      properties:
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        processes:
          type: array
          items:
            $ref: "#/components/schemas/TraceProgressDetail"
    TraceProgressDetail:
      type: object
      properties:
        index:
          type: integer
          format: int32
        name:
          type: string
        pending:
          type: integer
          format: int32
        submitted:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        succeeded:
          type: integer
          format: int32
        cached:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
        aborted:
          type: integer
          format: int32
        stored:
          type: integer
          format: int32
        ignored:
          type: integer
          format: int32
        retries:
          type: integer
          format: int32
        terminated:
          type: boolean
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakRunning:
          type: integer
          format: int32
        peakCpus:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
    TraceProgressRequest:
      type: object
      properties:
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/Task"
        progress:
          $ref: "#/components/schemas/TraceProgressData"
        containers:
          type: array
          items:
            $ref: "#/components/schemas/ContainerData"
    TraceProgressResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/TraceProcessingStatus"
        workflowId:
          type: string
    UnivaComputeConfig:
      title: Univa Grid Engine configuration
      type: object
      allOf:
        - $ref: "#/components/schemas/AbstractGridConfig"
        - properties:
            discriminator:
              type: string
              description: property to select the compute config platform
              x-speakeasy-terraform-ignore: true
            environment:
              type: array
              items:
                $ref: "#/components/schemas/ConfigEnvVariable"
      required:
        - workDir
    UpdateActionRequest:
      type: object
      properties:
        name:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
    UpdateComputeEnvRequest:
      type: object
      properties:
        name:
          type: string
        credentialsId:
          type: string
    UpdateCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: "#/components/schemas/Credentials"
    UpdateDatasetRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UpdateLabelRequest:
      type: object
      properties:
        name:
          type: string
          title: "Label Name"
          description: "Label name (key). Must be 1-39 alphanumeric characters, dashes, or underscores. Example: 'environment', 'team', 'cost-center'"
          example: "environment"
          x-speakeasy-plan-validators: LabelNameValidator
        value:
          type: string
          title: "Label Value"
          description: "Label value. Must be 1-39 alphanumeric characters, dashes, or underscores. Required when resource=true. Example: 'production', 'data-science'"
          example: "production"
          x-speakeasy-plan-validators: LabelValueResourceValidator
        isDefault:
          type: boolean
          description: "Whether this label is automatically applied to new resources. Can only be true when resource=true."
          x-speakeasy-plan-validators: LabelIsDefaultValidator
    UpdateLabelResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        isDefault:
          type: boolean
    UpdateMemberRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/OrgRole"
    UpdateOrganizationRequest:
      type: object
      properties:
        fullName:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          type: string
        website:
          type: string
        logoId:
          type: string
        paying:
          type: boolean
          nullable: true
          deprecated: true
        type:
          nullable: true
          allOf:
            - $ref: "#/components/schemas/OrgType"
    UpdateParticipantRoleRequest:
      type: object
      properties:
        role:
          $ref: "#/components/schemas/WspRole"
    UpdatePipelineRequest:
      type: object
      properties:
        name:
          type: string
          title: "Pipeline Name"
          description: "Pipeline name must contain a minimum of 2 and a maximum of 99 alphanumeric characters separated by dashes, dots or underscores"
          example: "rna-seq-analysis"
          x-speakeasy-plan-validators: PipelineNameValidator
        description:
          type: string
        icon:
          type: string
        launch:
          $ref: "#/components/schemas/WorkflowLaunchRequest"
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    UpdatePipelineResponse:
      type: object
      properties:
        pipeline:
          $ref: "#/components/schemas/PipelineDbDto"
    UpdatePipelineSecretRequest:
      type: object
      properties:
        value:
          type: string
          x-speakeasy-param-sensitive: true
    UpdateTeamRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        avatarId:
          type: string
    UpdateWorkspaceRequest:
      type: object
      properties:
        name:
          type: string
        fullName:
          type: string
        description:
          type: string
        visibility:
          $ref: "#/components/schemas/Visibility"
    UploadDatasetVersionResponse:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/DatasetVersionDbDto"
    UploadEtag:
      type: object
      properties:
        partNumber:
          type: integer
          format: int32
        eTag:
          type: string
    UserDbDto:
      required:
        - email
        - userName
      type: object
      properties:
        id:
          type: integer
          format: int64
        userName:
          maxLength: 40
          type: string
        email:
          maxLength: 255
          type: string
          format: email
        firstName:
          maxLength: 100
          type: string
        lastName:
          maxLength: 100
          type: string
        organization:
          maxLength: 100
          type: string
        description:
          maxLength: 1000
          type: string
        avatar:
          type: string
        avatarId:
          type: string
        notification:
          type: boolean
        termsOfUseConsent:
          type: boolean
        marketingConsent:
          type: boolean
        lastAccess:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        deleted:
          type: boolean
      x-speakeasy-entity:
        - CurrentUser
        - User
    Visibility:
      type: string
      enum:
        - PRIVATE
        - SHARED
      x-speakeasy-param-optional: false
    Vpc:
      type: object
      properties:
        id:
          type: string
        isDefault:
          type: boolean
    WesErrorResponse:
      type: object
      properties:
        msg:
          type: string
        status_code:
          type: integer
          format: int32
    WfManifest:
      type: object
      properties:
        nextflowVersion:
          maxLength: 20
          type: string
        defaultBranch:
          maxLength: 20
          type: string
        version:
          maxLength: 20
          type: string
        homePage:
          maxLength: 200
          type: string
        gitmodules:
          maxLength: 150
          type: string
        description:
          maxLength: 1024
          type: string
        name:
          maxLength: 150
          type: string
        mainScript:
          maxLength: 100
          type: string
        author:
          maxLength: 150
          type: string
        icon:
          maxLength: 255
          type: string
    WfNextflow:
      type: object
      properties:
        version:
          maxLength: 20
          type: string
        build:
          maxLength: 10
          type: string
        timestamp:
          type: string
          format: date-time
    WfStats:
      type: object
      properties:
        computeTimeFmt:
          maxLength: 50
          type: string
        cachedCount:
          type: integer
          format: int32
        failedCount:
          type: integer
          format: int32
        ignoredCount:
          type: integer
          format: int32
        succeedCount:
          type: integer
          format: int32
        cachedCountFmt:
          type: string
        succeedCountFmt:
          type: string
        failedCountFmt:
          type: string
        ignoredCountFmt:
          type: string
        cachedPct:
          type: number
          format: float
        failedPct:
          type: number
          format: float
        succeedPct:
          type: number
          format: float
        ignoredPct:
          type: number
          format: float
        cachedDuration:
          type: integer
          format: int64
        failedDuration:
          type: integer
          format: int64
        succeedDuration:
          type: integer
          format: int64
    Workflow:
      required:
        - commandLine
        - projectName
        - runName
        - sessionId
        - submit
        - userName
        - workDir
      type: object
      properties:
        requiresAttention:
          type: boolean
        status:
          $ref: "#/components/schemas/WorkflowStatus"
        ownerId:
          type: integer
          format: int64
          readOnly: true
        repository:
          type: string
        id:
          maxLength: 16
          type: string
        submit:
          type: string
          format: date-time
        start:
          type: string
          format: date-time
        complete:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        lastUpdated:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        runName:
          maxLength: 80
          type: string
        sessionId:
          maxLength: 36
          type: string
        profile:
          maxLength: 100
          type: string
        workDir:
          type: string
        commitId:
          maxLength: 40
          type: string
        userName:
          maxLength: 40
          type: string
        scriptId:
          maxLength: 40
          type: string
        revision:
          maxLength: 100
          type: string
        commandLine:
          maxLength: 8096
          type: string
        projectName:
          maxLength: 200
          type: string
        scriptName:
          maxLength: 100
          type: string
        launchId:
          maxLength: 22
          type: string
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        manifest:
          $ref: "#/components/schemas/WfManifest"
        nextflow:
          $ref: "#/components/schemas/WfNextflow"
        stats:
          $ref: "#/components/schemas/WfStats"
        errorMessage:
          type: string
        errorReport:
          type: string
        deleted:
          type: boolean
          readOnly: true
        projectDir:
          type: string
        homeDir:
          type: string
        container:
          type: string
        containerEngine:
          type: string
        scriptFile:
          type: string
        launchDir:
          type: string
        duration:
          type: integer
          format: int64
        exitStatus:
          type: integer
          format: int32
        resume:
          type: boolean
        success:
          type: boolean
        logFile:
          maxLength: 255
          type: string
        outFile:
          maxLength: 255
          type: string
        operationId:
          maxLength: 110
          type: string
    WorkflowDbDto:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
          description: Array of status messages and logs from workflow execution
          x-speakeasy-param-readonly: true
        id:
          type: string
          description: Unique identifier for the workflow execution
          x-speakeasy-param-readonly: true
        ownerId:
          type: integer
          format: int64
          description: Numeric identifier of the user who owns this workflow
          x-speakeasy-param-readonly: true
        submit:
          type: string
          format: date-time
          description: Timestamp when the workflow was submitted for execution
          x-speakeasy-param-readonly: true
        start:
          type: string
          format: date-time
          description: Timestamp when the workflow execution actually started
          x-speakeasy-param-readonly: true
        complete:
          type: string
          format: date-time
          description: Timestamp when the workflow execution completed
          x-speakeasy-param-readonly: true
        dateCreated:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
          x-speakeasy-param-readonly: true
        runName:
          type: string
        sessionId:
          type: string
        profile:
          type: string
        workDir:
          type: string
        revision:
          type: string
        commandLine:
          type: string
        projectName:
          type: string
        scriptName:
          type: string
        launchId:
          type: string
        status:
          $ref: "#/components/schemas/WorkflowStatus"
          x-speakeasy-param-readonly: true
        requiresAttention:
          type: boolean
        configFiles:
          type: array
          items:
            type: string
        params:
          type: object
          additionalProperties: true
        configText:
          type: string
        deleted:
          type: boolean
          x-speakeasy-param-readonly: true
        repository:
          type: string
        resume:
          type: boolean
      description: |
        Represents a workflow execution record.
        Contains execution status, metadata, and results from pipeline
        runs including logs and performance metrics.
    WorkflowLaunchRequest:
      type: object
      properties:
        computeEnvId:
          type: string
          x-speakeasy-param-optional: true
          example: "4g09tT4pW4JFUvXTHdB6zP"
        runName:
          type: string
          example: "nextflow-hello"
        pipeline:
          type: string
          example: "https://github.com/nextflow-io/hello"
        workDir:
          type: string
          x-speakeasy-param-optional: true
          example: "s3://my-bucket/work"
        revision:
          type: string
          example: "main"
        configProfiles:
          type: array
          items:
            type: string
          example: ["docker", "aws"]
        userSecrets:
          type: array
          items:
            type: string
          example: ["MY_API_KEY", "DATABASE_PASSWORD"]
        workspaceSecrets:
          type: array
          items:
            type: string
          example: ["WORKSPACE_TOKEN", "SHARED_CREDENTIALS"]
        configText:
          type: string
          example: |
            process {
              executor = 'awsbatch'
              queue = 'my-queue'
            }
        towerConfig:
          type: string
        paramsText:
          type: string
          example: |
            {
              "input": "s3://my-bucket/input.csv",
              "output_dir": "s3://my-bucket/results"
            }
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
          example: |
            #!/bin/bash
            echo "Starting workflow execution"
            aws s3 sync s3://my-bucket/data ./data
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
          example: |
            #!/bin/bash
            echo "Workflow completed"
            aws s3 sync ./results s3://my-bucket/results
        mainScript:
          type: string
          example: "main.nf"
        entryName:
          type: string
          example: "main.nf"
        schemaName:
          type: string
          example: "nextflow_schema.json"
        resume:
          type: boolean
          example: true
        pullLatest:
          type: boolean
          example: true
        stubRun:
          type: boolean
          example: false
        labelIds:
          type: array
          items:
            type: integer
            format: int64
          example: [1001, 1002, 1003]
        headJobCpus:
          type: integer
          format: int32
          example: 2
        headJobMemoryMb:
          type: integer
          format: int32
          example: 4096
      required:
        - workDir
      x-speakeasy-entity: Workflows
    WorkflowLaunchResponse:
      type: object
      properties:
        id:
          type: string
        computeEnv:
          $ref: "#/components/schemas/ComputeEnv_ComputeConfig_"
        pipeline:
          type: string
        pipelineId:
          type: integer
          format: int64
        workDir:
          type: string
        revision:
          type: string
        sessionId:
          type: string
        configProfiles:
          type: array
          items:
            type: string
        userSecrets:
          type: array
          items:
            type: string
        workspaceSecrets:
          type: array
          items:
            type: string
        configText:
          type: string
        towerConfig:
          type: string
        paramsText:
          type: string
        preRunScript:
          type: string
          description: "Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        postRunScript:
          type: string
          description: "Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts)."
        mainScript:
          type: string
        entryName:
          type: string
        schemaName:
          type: string
        resume:
          type: boolean
        pullLatest:
          type: boolean
        stubRun:
          type: boolean
        resumeDir:
          type: string
        resumeCommitId:
          type: string
        headJobMemoryMb:
          type: integer
          format: int32
        headJobCpus:
          type: integer
          format: int32
        optimizationId:
          type: string
        optimizationTargets:
          type: string
        dateCreated:
          type: string
          format: date-time
    WorkflowLoad:
      required:
        - aborted
        - cached
        - cpuLoad
        - cpuTime
        - cpus
        - failed
        - invCtxSwitch
        - loadCpus
        - loadMemory
        - loadTasks
        - memoryReq
        - memoryRss
        - peakCpus
        - peakMemory
        - peakTasks
        - pending
        - readBytes
        - running
        - submitted
        - succeeded
        - volCtxSwitch
        - writeBytes
      type: object
      properties:
        pending:
          type: integer
          format: int64
        submitted:
          type: integer
          format: int64
        running:
          type: integer
          format: int64
        succeeded:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        cached:
          type: integer
          format: int64
        aborted:
          type: integer
          format: int64
        memoryEfficiency:
          type: number
          format: float
        cpuEfficiency:
          type: number
          format: float
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        executors:
          type: array
          items:
            type: string
        cpus:
          type: integer
          format: int64
        cpuTime:
          type: integer
          format: int64
        cpuLoad:
          type: integer
          format: int64
        memoryRss:
          type: integer
          format: int64
        memoryReq:
          type: integer
          format: int64
        readBytes:
          type: integer
          format: int64
        writeBytes:
          type: integer
          format: int64
        volCtxSwitch:
          type: integer
          format: int64
        invCtxSwitch:
          type: integer
          format: int64
        loadTasks:
          type: integer
          format: int64
        loadCpus:
          type: integer
          format: int64
        loadMemory:
          type: integer
          format: int64
        peakCpus:
          type: integer
          format: int64
        peakTasks:
          type: integer
          format: int64
        peakMemory:
          type: integer
          format: int64
        cost:
          type: number
    WorkflowLogResponse:
      type: object
      properties:
        log:
          $ref: "#/components/schemas/LogPage"
    WorkflowMetrics:
      required:
        - process
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
        process:
          maxLength: 255
          type: string
        cpu:
          $ref: "#/components/schemas/ResourceData"
        mem:
          $ref: "#/components/schemas/ResourceData"
        vmem:
          $ref: "#/components/schemas/ResourceData"
        time:
          $ref: "#/components/schemas/ResourceData"
        reads:
          $ref: "#/components/schemas/ResourceData"
        writes:
          $ref: "#/components/schemas/ResourceData"
        cpuUsage:
          $ref: "#/components/schemas/ResourceData"
        memUsage:
          $ref: "#/components/schemas/ResourceData"
        timeUsage:
          $ref: "#/components/schemas/ResourceData"
    WorkflowQueryAttribute:
      type: string
      enum:
        - optimized
        - labels
        - messages
        - minimal
    WorkflowStatus:
      type: string
      enum:
        - SUBMITTED
        - RUNNING
        - SUCCEEDED
        - FAILED
        - CANCELLED
        - UNKNOWN
    Workspace:
      required:
        - fullName
        - name
        - visibility
      type: object
      properties:
        id:
          type: integer
          format: int64
          nullable: true
          x-speakeasy-param-optional: true
        name:
          maxLength: 40
          pattern: "^[a-zA-Z\\d](?:[a-zA-Z\\d]|[-_](?=[a-zA-Z\\d])){1,38}$"
          type: string
          x-speakeasy-param-readonly: false
          example: "genomics-research"
        fullName:
          maxLength: 100
          type: string
          x-speakeasy-param-readonly: false
          example: "Genomics Research Workspace"
        description:
          maxLength: 1000
          type: string
          x-speakeasy-param-readonly: false
          example: "Workspace for genomics research projects and computational biology workflows"
        visibility:
          $ref: "#/components/schemas/Visibility"
          x-speakeasy-param-readonly: false
          example: "PRIVATE"
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
      x-speakeasy-entity: Workspace
      x-speakeasy-entity-description: |
        Manage workspaces for organizing projects and resources.

        Workspaces provide isolated environments for organizing pipelines,
        compute environments, and data, with configurable permissions
        and access controls for collaborative research projects.

        Each user has a unique user workspace to manage resources such as pipelines,
        compute environments, and credentials. You can also create multiple workspaces within
        an organization context and associate each of these workspaces with dedicated teams of users,
        while providing fine-grained access control for each of the teams.

        Organization workspaces extend the functionality of user workspaces by adding
        the ability to fine-tune access levels for specific members, collaborators, or teams.
        This is achieved by managing participants in the organization workspaces.

        Organizations consist of members, while workspaces consist of participants.
    WorkspaceDbDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique numeric identifier for the workspace
        name:
          type: string
          description: Short name or handle for the workspace
        fullName:
          type: string
          description: Complete display name for the workspace
        description:
          type: string
          description: Detailed description of the workspace's purpose
        visibility:
          $ref: "#/components/schemas/Visibility"
          description: Visibility level of the workspace (public, private, etc.)
      description: |
        Represents a workspace in the Seqera Platform.
        Contains workspace configuration, member permissions, and resource
        isolation settings for project organization.
    WspRole:
      type: string
      enum:
        - owner
        - admin
        - maintain
        - launch
        - connect
        - view
    AWSCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - aws
          default: aws
          description: Cloud provider type (automatically set to "aws")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: AWSCredential
          x-speakeasy-entity-description: 'Manage AWS credentials in Seqera platform using this resource.


            AWS credentials store authentication information for accessing AWS services

            within the Seqera Platform workflows.

'
          type: object
          required:
            - accessKey
            - secretKey
          properties:
            accessKey:
              type: string
              minLength: 16
              maxLength: 128
              pattern: ^(AKIA|ASIA|AIDA)[A-Z0-9]{16,}$
              description: AWS access key ID (required). Must start with AKIA (standard) or ASIA (temporary).
              example: AKIAIOSFODNN7EXAMPLE
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: access_key
            secretKey:
              type: string
              minLength: 40
              description: AWS secret access key (required, sensitive). Must be at least 40 characters.
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
              x-speakeasy-name-override: secret_key
              writeOnly: true
            assumeRoleArn:
              type: string
              pattern: ^arn:aws:iam::[0-9]{12}:role/.+$
              description: 'IAM role ARN to assume (optional, recommended for enhanced security). Format: arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME'
              example: arn:aws:iam::123456789012:role/SeqeraRole
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: assume_role_arn
              writeOnly: true
    CreateAWSCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredential'
    CreateAWSCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateAWSCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredential'
    DescribeAWSCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredential'
    AzureCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - azure
          default: azure
          description: Cloud provider type (automatically set to "azure")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: AzureCredential
          x-speakeasy-entity-description: 'Manage Azure credentials in Seqera platform using this resource.


            Azure credentials support three authentication modes:

            - Shared key: Use batch_key and storage_key (discriminator=''azure'')

            - Entra: Use tenant_id, client_id, client_secret (discriminator=''azure-entra'')

            - Cloud: Use tenant_id, client_id, client_secret (discriminator=''azure-cloud'')

'
          type: object
          required:
            - batchName
            - storageName
          properties:
            discriminator:
              type: string
              description: Authentication mode discriminator (azure, azure-entra, or azure-cloud)
              enum:
                - azure
                - azure-entra
                - azure-cloud
              default: azure
              x-speakeasy-terraform-ignore: true
              x-speakeasy-param-readonly: true
            batchName:
              type: string
              description: Azure Batch account name (required)
              example: myazurebatch
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: batch_name
            storageName:
              type: string
              description: Azure Blob Storage account name (required)
              example: myazurestorage
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: storage_name
            batchKey:
              type: string
              description: Azure Batch account key (for shared key authentication)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: YourAzureBatchAccountKeyHere==
              x-speakeasy-name-override: batch_key
              x-speakeasy-plan-validators: AzureCredentialSharedKeyValidator
              writeOnly: true
            storageKey:
              type: string
              description: Azure Storage account key (for shared key authentication)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: YourAzureStorageAccountKeyHere==
              x-speakeasy-name-override: storage_key
              x-speakeasy-plan-validators: AzureCredentialSharedKeyValidator
              writeOnly: true
            tenantId:
              type: string
              description: Azure tenant ID (for Entra/Cloud authentication)
              example: 00000000-0000-0000-0000-000000000000
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: tenant_id
              x-speakeasy-plan-validators: AzureCredentialEntraValidator
              writeOnly: true
            clientId:
              type: string
              description: Azure service principal client ID (for Entra/Cloud authentication)
              example: 00000000-0000-0000-0000-000000000000
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: client_id
              x-speakeasy-plan-validators: AzureCredentialEntraValidator
              writeOnly: true
            clientSecret:
              type: string
              description: Azure service principal client secret (for Entra/Cloud authentication)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: YourAzureClientSecretHere
              x-speakeasy-name-override: client_secret
              x-speakeasy-plan-validators: AzureCredentialEntraValidator
              writeOnly: true
    CreateAzureCredentialsRequest:
      type: object
      required:
        - credentials
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredential'
    CreateAzureCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateAzureCredentialsRequest:
      type: object
      required:
        - credentials
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredential'
    DescribeAzureCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredential'
    GoogleCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - google
          default: google
          description: Cloud provider type (automatically set to "google")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: GoogleCredential
          x-speakeasy-entity-description: 'Manage Google credentials in Seqera platform using this resource.


            Google credentials store authentication information for accessing Google Cloud services

            within the Seqera Platform workflows.

'
          type: object
          required:
            - data
          properties:
            data:
              type: string
              description: Google Cloud service account key JSON (required, sensitive).
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: "{\n  \"type\": \"service_account\",\n  \"project_id\": \"my-project\",\n  \"private_key_id\": \"key-id\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\n...\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"service-account@my-project.iam.gserviceaccount.com\",\n  \"client_id\": \"123456789\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\"\n}\n"
              writeOnly: true
    CreateGoogleCredentialsRequest:
      type: object
      required:
        - credentials
      properties:
        credentials:
          $ref: '#/components/schemas/GoogleCredential'
    CreateGoogleCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateGoogleCredentialsRequest:
      type: object
      required:
        - credentials
      properties:
        credentials:
          $ref: '#/components/schemas/GoogleCredential'
    DescribeGoogleCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GoogleCredential'
    BitbucketCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - bitbucket
          default: bitbucket
          description: Cloud provider type (automatically set to "bitbucket")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: BitbucketCredential
          x-speakeasy-terraform-resource-name: bitbucket_credential
          x-speakeasy-entity-description: 'Manage Bitbucket credentials in Seqera platform using this resource.


            Bitbucket credentials store authentication information for accessing Bitbucket

            repositories within the Seqera Platform workflows.

'
          type: object
          required:
            - username
            - token
          properties:
            username:
              type: string
              description: Bitbucket account username (for app passwords) or email (for API tokens). Required.
              example: myuser@example.com
              x-speakeasy-param-computed: false
            token:
              type: string
              description: Bitbucket API token (required, sensitive). App passwords are deprecated.
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: ATBB...
              writeOnly: true
            baseUrl:
              type: string
              description: 'Repository base URL for on-premises Bitbucket server (optional). Example: https://bitbucket.org/seqeralabs'
              example: https://bitbucket.org/myorg
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: base_url
              writeOnly: true
    CreateBitbucketCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/BitbucketCredential'
    CreateBitbucketCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateBitbucketCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/BitbucketCredential'
    DescribeBitbucketCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/BitbucketCredential'
    CodecommitCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - codecommit
          default: codecommit
          description: Cloud provider type (automatically set to "codecommit")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: CodecommitCredential
          x-speakeasy-terraform-resource-name: codecommit_credential
          x-speakeasy-entity-description: 'Manage Codecommit credentials in Seqera platform using this resource.


            Codecommit credentials store AWS authentication information for accessing

            AWS Codecommit repositories within the Seqera Platform workflows.

'
          type: object
          required:
            - accessKey
            - secretKey
          properties:
            accessKey:
              type: string
              description: AWS access key to access the Codecommit repository (required)
              example: AKIAIOSFODNN7EXAMPLE
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: access_key
            secretKey:
              type: string
              description: AWS secret key to access the Codecommit repository (required, sensitive)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
              x-speakeasy-name-override: secret_key
              writeOnly: true
            baseUrl:
              type: string
              description: 'Repository base URL to associate with a specific repository or AWS region (optional). Example: https://git-codecommit.eu-west-1.amazonaws.com'
              example: https://git-codecommit.us-east-1.amazonaws.com
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: base_url
              writeOnly: true
    CreateCodecommitCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CodecommitCredential'
    CreateCodecommitCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateCodecommitCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CodecommitCredential'
    DescribeCodecommitCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CodecommitCredential'
    ContainerRegistryCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - container-reg
          default: container-reg
          description: Cloud provider type (automatically set to "container-reg")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: ContainerRegistryCredential
          x-speakeasy-entity-description: 'Manage container registry credentials in Seqera platform using this resource.


            Container registry credentials store authentication information for accessing

            container registries (Docker Hub, ECR, GCR, ACR, etc.) within the Seqera Platform workflows.

'
          type: object
          required:
            - userName
            - password
          properties:
            userName:
              type: string
              description: Username for container registry authentication (required)
              example: myuser
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: user_name
            password:
              type: string
              description: Password or access token for container registry authentication (required, sensitive)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: mypassword
              writeOnly: true
            registry:
              type: string
              description: 'Container registry server URL (optional). Examples: docker.io, gcr.io, account.dkr.ecr.region.amazonaws.com'
              example: docker.io
              x-speakeasy-param-computed: false
              writeOnly: true
    CreateContainerRegistryCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/ContainerRegistryCredential'
    CreateContainerRegistryCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateContainerRegistryCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/ContainerRegistryCredential'
    DescribeContainerRegistryCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/ContainerRegistryCredential'
    GiteaCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - gitea
          default: gitea
          description: Cloud provider type (automatically set to "gitea")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: GiteaCredential
          x-speakeasy-entity-description: 'Manage Gitea credentials in Seqera platform using this resource.


            Gitea credentials store authentication information for accessing Gitea

            repositories within the Seqera Platform workflows.

'
          type: object
          required:
            - username
            - password
          properties:
            username:
              type: string
              description: Gitea account username (required)
              example: myuser
              x-speakeasy-param-computed: false
            password:
              type: string
              description: Gitea account password (required, sensitive)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: mypassword
              writeOnly: true
            baseUrl:
              type: string
              description: 'Repository base URL for Gitea server or to associate with specific repository (optional). Example: https://try.gitea.io/seqera/tower'
              example: https://gitea.example.com
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: base_url
              writeOnly: true
    CreateGiteaCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GiteaCredential'
    CreateGiteaCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateGiteaCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GiteaCredential'
    DescribeGiteaCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GiteaCredential'
    GithubCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - github
          default: github
          description: Cloud provider type (automatically set to "github")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: GithubCredential
          x-speakeasy-terraform-resource-name: github_credential
          x-speakeasy-entity-description: 'Manage GitHub credentials in Seqera platform using this resource.


            GitHub credentials store authentication information for accessing GitHub

            repositories within the Seqera Platform workflows.

'
          type: object
          required:
            - accessToken
          properties:
            accessToken:
              type: string
              description: GitHub Personal Access Token (PAT) for authentication (required, sensitive)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: ghp_1234567890abcdefghijklmnopqrstuvwxyz
              x-speakeasy-name-override: access_token
              writeOnly: true
            baseUrl:
              type: string
              description: 'Repository base URL for GitHub Enterprise Server (optional). Leave empty for GitHub.com. Example: https://github.mycompany.com'
              example: https://github.mycompany.com
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: base_url
              writeOnly: true
    CreateGithubCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GithubCredential'
    CreateGithubCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateGithubCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GithubCredential'
    DescribeGithubCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GithubCredential'
    GitlabCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - gitlab
          default: gitlab
          description: Cloud provider type (automatically set to "gitlab")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: GitlabCredential
          x-speakeasy-terraform-resource-name: gitlab_credential
          x-speakeasy-entity-description: 'Manage GitLab credentials in Seqera platform using this resource.


            GitLab credentials store authentication information for accessing GitLab

            repositories within the Seqera Platform workflows.

'
          type: object
          required:
            - token
          properties:
            token:
              type: string
              description: GitLab Personal Access Token or Project Access Token (required, sensitive)
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              example: glpat-xxxxxxxxxxxxxxxxxxxx
              writeOnly: true
            baseUrl:
              type: string
              description: 'Repository base URL for self-hosted GitLab server (optional). Leave empty for GitLab.com. Example: https://gitlab.mycompany.com'
              example: https://gitlab.mycompany.com
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: base_url
              writeOnly: true
    CreateGitlabCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GitlabCredential'
    CreateGitlabCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateGitlabCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GitlabCredential'
    DescribeGitlabCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/GitlabCredential'
    SSHCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - ssh
          default: ssh
          description: Cloud provider type (automatically set to "ssh")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: SSHCredential
          x-speakeasy-entity-description: 'Manage SSH credentials in Seqera platform using this resource.


            SSH credentials store SSH private keys for secure access to remote

            compute environments and resources within the Seqera Platform workflows.

'
          type: object
          required:
            - privateKey
          properties:
            privateKey:
              type: string
              description: 'SSH private key content (required, sensitive). The content of the private key file from the SSH asymmetrical key pair. Generate with: ssh-keygen'
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: private_key
              writeOnly: true
            passphrase:
              type: string
              description: Passphrase associated with the SSH private key (optional, sensitive). Leave empty if no passphrase is needed.
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              writeOnly: true
    CreateSSHCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/SSHCredential'
    CreateSSHCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateSSHCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/SSHCredential'
    DescribeSSHCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/SSHCredential'
    TowerAgentCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - agent
          default: agent
          description: Cloud provider type (automatically set to "agent")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: TowerAgentCredential
          x-speakeasy-entity-description: 'Manage Tower Agent credentials in Seqera platform using this resource.


            Tower Agent credentials store connection IDs for Tower Agent instances that

            enable secure communication between the Seqera Platform and compute environments.

'
          type: object
          required:
            - connectionId
          properties:
            connectionId:
              type: string
              description: Tower Agent connection ID (required). A unique UUID string used to identify the Tower Agent instance. Generate using random_uuid resource.
              example: 31e42060-7985-4727-aca1-4071c819ad8e
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: connection_id
              writeOnly: true
            workDir:
              type: string
              description: Working directory for the Tower Agent (optional)
              example: /work
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: work_dir
              writeOnly: true
    CreateTowerAgentCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/TowerAgentCredential'
    CreateTowerAgentCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateTowerAgentCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/TowerAgentCredential'
    DescribeTowerAgentCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/TowerAgentCredential'
    KubernetesCredential:
      required:
        - name
        - keys
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the credential (max 22 characters)
          x-speakeasy-param-readonly: true
          x-speakeasy-param-suppress-computed-diff: true
        name:
          maxLength: 100
          type: string
          description: Display name for the credential (max 100 characters)
          x-speakeasy-param-force-new: true
        provider:
          type: string
          enum:
            - k8s
          default: k8s
          description: Cloud provider type (automatically set to "k8s")
          x-speakeasy-name-override: providerType
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the credential has been soft-deleted
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the credential was last used
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the credential was created
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the credential was last updated
          x-speakeasy-param-readonly: true
          x-speakeasy-terraform-ignore: true
        keys:
          x-speakeasy-entity: KubernetesCredential
          x-speakeasy-entity-description: 'Manage Kubernetes credentials in Seqera platform using this resource.


            Kubernetes credentials enable secure connections to Kubernetes clusters for workflow

            execution. Supports two authentication methods: Service Account Token and X.509 Client Certificates.'
          type: object
          properties:
            token:
              type: string
              description: Service Account token for Kubernetes authentication (optional). Required if using token-based authentication.
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              writeOnly: true
            certificate:
              type: string
              description: X.509 client certificate for Kubernetes authentication (optional). Required if using certificate-based authentication.
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: client_certificate
              writeOnly: true
            privateKey:
              type: string
              description: Private key for X.509 client certificate (optional). Required if using certificate-based authentication.
              x-speakeasy-param-sensitive: true
              x-speakeasy-param-computed: false
              x-speakeasy-name-override: private_key
              writeOnly: true
    CreateKubernetesCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/KubernetesCredential'
    CreateKubernetesCredentialsResponse:
      type: object
      properties:
        credentialsId:
          type: string
    UpdateKubernetesCredentialsRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/KubernetesCredential'
    DescribeKubernetesCredentialsResponse:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/KubernetesCredential'
    # AWS-specific compute environment schema
    AWSBatchCE_ComputeConfig:
      x-speakeasy-entity: AWSBatchCE
      x-speakeasy-entity-version: 1
      x-speakeasy-entity-description: |
        Manage AWS compute environments in Seqera platform using this resource.

        AWS compute environments define the execution platform where a pipeline will run
        on AWS infrastructure (AWS Batch, AWS Cloud, EKS).
      required:
        - config
        - name
        - platform
        - credentialsId
      type: object
      properties:
        credentialsId:
          type: string
          description: AWS credentials identifier
          x-speakeasy-param-force-new: true
        orgId:
          type: integer
          format: int64
          readOnly: true
          x-speakeasy-param-readonly: true
        workspaceId:
          type: integer
          format: int64
          description: Workspace numeric identifier
          x-speakeasy-param-force-new: true
        id:
          type: string
          description: Unique identifier for the compute environment
          x-speakeasy-param-readonly: true
        name:
          maxLength: 100
          type: string
          description: Display name for the compute environment
        description:
          type: string
          description: Optional description of the compute environment
          x-speakeasy-param-computed: false
          x-speakeasy-param-force-new: true
        platform:
          type: string
          enum:
            - aws-batch
          description: AWS platform type
          x-speakeasy-param-optional: false
          x-speakeasy-param-force-new: true
        status:
          type: string
          description: Compute environment status
          x-speakeasy-param-readonly: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the compute environment was created
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the compute environment was last updated
          x-speakeasy-param-readonly: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the compute environment was last used
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the compute environment has been deleted
          x-speakeasy-param-readonly: true
        config:
          description: AWS-specific compute environment configuration
          $ref: '#/components/schemas/AwsBatchConfig'
          x-speakeasy-param-force-new: true
    # AWS-specific request/response schemas
    CreateAWSBatchCERequest:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    CreateAWSBatchCEResponse:
      type: object
      properties:
        computeEnvId:
          type: string
    UpdateAWSBatchCERequest:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'
    DescribeAWSBatchCEResponse:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'
    ListAWSBatchCEsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: '#/components/schemas/AWSBatchCE_ComputeConfig'
        totalSize:
          type: integer
          format: int64
    # AWS-specific compute environment schema
    AWSComputeEnv_ComputeConfig:
      x-speakeasy-entity: AWSComputeEnv
      x-speakeasy-entity-version: 1
      x-speakeasy-entity-description: |
        Manage AWS compute environments in Seqera platform using this resource.

        AWS compute environments define the execution platform where a pipeline will run
        on AWS infrastructure (AWS Batch, AWS Cloud, EKS).
      required:
        - config
        - name
        - platform
        - credentialsId
      type: object
      properties:
        credentialsId:
          type: string
          description: AWS credentials identifier
          x-speakeasy-param-force-new: true
        orgId:
          type: integer
          format: int64
          readOnly: true
          x-speakeasy-param-readonly: true
        workspaceId:
          type: integer
          format: int64
          description: Workspace numeric identifier
          x-speakeasy-param-force-new: true
        id:
          type: string
          description: Unique identifier for the compute environment
          x-speakeasy-param-readonly: true
        name:
          maxLength: 100
          type: string
          description: Display name for the compute environment
        description:
          type: string
          description: Optional description of the compute environment
          x-speakeasy-param-computed: false
          x-speakeasy-param-force-new: true
        platform:
          type: string
          enum:
            - aws-batch
          description: AWS platform type
          x-speakeasy-param-optional: false
          x-speakeasy-param-force-new: true
        status:
          type: string
          description: Compute environment status
          x-speakeasy-param-readonly: true
        dateCreated:
          type: string
          format: date-time
          description: Timestamp when the compute environment was created
          x-speakeasy-param-readonly: true
        lastUpdated:
          type: string
          format: date-time
          description: Timestamp when the compute environment was last updated
          x-speakeasy-param-readonly: true
        lastUsed:
          type: string
          format: date-time
          description: Timestamp when the compute environment was last used
          x-speakeasy-param-readonly: true
        deleted:
          type: boolean
          description: Flag indicating if the compute environment has been deleted
          x-speakeasy-param-readonly: true
        config:
          description: AWS-specific compute environment configuration
          $ref: '#/components/schemas/AwsBatchConfig'
          x-speakeasy-param-force-new: true
    # AWS-specific request/response schemas
    CreateAWSComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/AWSComputeEnv_ComputeConfig'
        labelIds:
          type: array
          items:
            type: integer
            format: int64
    CreateAWSComputeEnvResponse:
      type: object
      properties:
        computeEnvId:
          type: string
    UpdateAWSComputeEnvRequest:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/AWSComputeEnv_ComputeConfig'
    DescribeAWSComputeEnvResponse:
      type: object
      properties:
        computeEnv:
          $ref: '#/components/schemas/AWSComputeEnv_ComputeConfig'
    ListAWSComputeEnvsResponse:
      type: object
      properties:
        computeEnvs:
          type: array
          items:
            $ref: '#/components/schemas/AWSComputeEnv_ComputeConfig'
        totalSize:
          type: integer
          format: int64
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
tags:
  - name: actions
    description: Pipeline actions
  - name: avatars
    description: Avatars
  - name: compute-envs
    description: Compute environments
  - name: credentials
    description: Credentials
  - name: data-links
    description: Cloud storage directory paths in Data Explorer
  - name: datasets
    description: Pipeline input datasets (samplesheets) in CSV or TSV format
  - name: ga4gh
    description: GA4GH workflow execution service runs
  - name: labels
    description: Labels and resource labels
  - name: launch
    description: Workflow launch events
  - name: orgs
    description: Organizations
  - name: pipelines
    description: Pipelines
  - name: pipeline-secrets
    description: Pipeline secrets in a user or workspace context
  - name: platforms
    description: Computing platforms
  - name: service-info
    description: Seqera Platform API service information
  - name: studios
    description: Studios and Studio sessions
  - name: teams
    description: Teams in an organization context
  - name: tokens
    description: API access tokens
  - name: trace
    description: Workflow execution traces
  - name: users
    description: Users
  - name: workflows
    description: Workflow executions
  - name: workspaces
    description: Workspaces in an organization context
servers:
  - url: https://api.cloud.seqera.io
