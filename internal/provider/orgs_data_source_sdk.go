// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/speakeasy/terraform-provider-seqera/internal/provider/typeconvert"
	tfTypes "github.com/speakeasy/terraform-provider-seqera/internal/provider/types"
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/models/operations"
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *OrgsDataSourceModel) ToOperationsListOrganizationsRequest(ctx context.Context) (*operations.ListOrganizationsRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	role := new(string)
	if !r.Role.IsUnknown() && !r.Role.IsNull() {
		*role = r.Role.ValueString()
	} else {
		role = nil
	}
	out := operations.ListOrganizationsRequest{
		Role: role,
	}

	return &out, diags
}

func (r *OrgsDataSourceModel) RefreshFromSharedListOrganizationsResponse(ctx context.Context, resp *shared.ListOrganizationsResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Organizations = []tfTypes.OrganizationDbDto{}
		if len(r.Organizations) > len(resp.Organizations) {
			r.Organizations = r.Organizations[:len(resp.Organizations)]
		}
		for organizationsCount, organizationsItem := range resp.Organizations {
			var organizations tfTypes.OrganizationDbDto
			organizations.Description = types.StringPointerValue(organizationsItem.Description)
			organizations.FullName = types.StringPointerValue(organizationsItem.FullName)
			organizations.Location = types.StringPointerValue(organizationsItem.Location)
			organizations.LogoID = types.StringPointerValue(organizationsItem.LogoID)
			organizations.LogoURL = types.StringPointerValue(organizationsItem.LogoURL)
			organizations.MemberID = types.Int64PointerValue(organizationsItem.MemberID)
			if organizationsItem.MemberRole != nil {
				organizations.MemberRole = types.StringValue(string(*organizationsItem.MemberRole))
			} else {
				organizations.MemberRole = types.StringNull()
			}
			organizations.Name = types.StringPointerValue(organizationsItem.Name)
			organizations.OrgID = types.Int64PointerValue(organizationsItem.OrgID)
			organizations.Paying = types.BoolPointerValue(organizationsItem.Paying)
			if organizationsItem.Type != nil {
				organizations.Type = types.StringValue(string(*organizationsItem.Type))
			} else {
				organizations.Type = types.StringNull()
			}
			organizations.Website = types.StringPointerValue(organizationsItem.Website)
			if organizationsCount+1 > len(r.Organizations) {
				r.Organizations = append(r.Organizations, organizations)
			} else {
				r.Organizations[organizationsCount].Description = organizations.Description
				r.Organizations[organizationsCount].FullName = organizations.FullName
				r.Organizations[organizationsCount].Location = organizations.Location
				r.Organizations[organizationsCount].LogoID = organizations.LogoID
				r.Organizations[organizationsCount].LogoURL = organizations.LogoURL
				r.Organizations[organizationsCount].MemberID = organizations.MemberID
				r.Organizations[organizationsCount].MemberRole = organizations.MemberRole
				r.Organizations[organizationsCount].Name = organizations.Name
				r.Organizations[organizationsCount].OrgID = organizations.OrgID
				r.Organizations[organizationsCount].Paying = organizations.Paying
				r.Organizations[organizationsCount].Type = organizations.Type
				r.Organizations[organizationsCount].Website = organizations.Website
			}
		}
		r.TotalSize = types.Int32PointerValue(typeconvert.IntPointerToInt32Pointer(resp.TotalSize))
	}

	return diags
}
