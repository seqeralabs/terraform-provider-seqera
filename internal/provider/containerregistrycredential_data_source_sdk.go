// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/operations"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *ContainerRegistryCredentialDataSourceModel) RefreshFromSharedContainerRegistryCredentialKeysOutput(ctx context.Context, resp *shared.ContainerRegistryCredentialKeysOutput) diag.Diagnostics {
	var diags diag.Diagnostics

	r.UserName = types.StringValue(resp.UserName)

	return diags
}

func (r *ContainerRegistryCredentialDataSourceModel) RefreshFromSharedContainerRegistryCredentialOutput(ctx context.Context, resp *shared.ContainerRegistryCredentialOutput) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.ID = types.StringPointerValue(resp.ID)
		diags.Append(r.RefreshFromSharedContainerRegistryCredentialKeysOutput(ctx, &resp.Keys)...)

		if diags.HasError() {
			return diags
		}

		r.Name = types.StringValue(resp.Name)
		if resp.ProviderType != nil {
			r.ProviderType = types.StringValue(string(*resp.ProviderType))
		} else {
			r.ProviderType = types.StringNull()
		}
	}

	return diags
}

func (r *ContainerRegistryCredentialDataSourceModel) RefreshFromSharedDescribeContainerRegistryCredentialsResponse(ctx context.Context, resp *shared.DescribeContainerRegistryCredentialsResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		diags.Append(r.RefreshFromSharedContainerRegistryCredentialOutput(ctx, resp.Credentials)...)

		if diags.HasError() {
			return diags
		}

	}

	return diags
}

func (r *ContainerRegistryCredentialDataSourceModel) ToOperationsDescribeContainerRegistryCredentialsRequest(ctx context.Context) (*operations.DescribeContainerRegistryCredentialsRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var credentialsID string
	credentialsID = r.CredentialsID.ValueString()

	workspaceID := new(int64)
	if !r.WorkspaceID.IsUnknown() && !r.WorkspaceID.IsNull() {
		*workspaceID = r.WorkspaceID.ValueInt64()
	} else {
		workspaceID = nil
	}
	out := operations.DescribeContainerRegistryCredentialsRequest{
		CredentialsID: credentialsID,
		WorkspaceID:   workspaceID,
	}

	return &out, diags
}
