// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/provider/typeconvert"
	tfTypes "github.com/seqeralabs/terraform-provider-seqera/internal/provider/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/operations"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *DatasetDataSourceModel) RefreshFromSharedDescribeDatasetResponse(ctx context.Context, resp *shared.DescribeDatasetResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if resp.Dataset == nil {
			r.Dataset = nil
		} else {
			r.Dataset = &tfTypes.Dataset{}
			r.Dataset.DateCreated = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.Dataset.DateCreated))
			r.Dataset.Deleted = types.BoolPointerValue(resp.Dataset.Deleted)
			r.Dataset.Description = types.StringPointerValue(resp.Dataset.Description)
			r.Dataset.ID = types.StringPointerValue(resp.Dataset.ID)
			r.Dataset.LastUpdated = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.Dataset.LastUpdated))
			r.Dataset.MediaType = types.StringPointerValue(resp.Dataset.MediaType)
			r.Dataset.Name = types.StringValue(resp.Dataset.Name)
		}
	}

	return diags
}

func (r *DatasetDataSourceModel) ToOperationsDescribeDatasetV2Request(ctx context.Context) (*operations.DescribeDatasetV2Request, diag.Diagnostics) {
	var diags diag.Diagnostics

	workspaceID := new(int64)
	if !r.WorkspaceID.IsUnknown() && !r.WorkspaceID.IsNull() {
		*workspaceID = r.WorkspaceID.ValueInt64()
	} else {
		workspaceID = nil
	}
	var datasetID string
	datasetID = r.DatasetID.ValueString()

	out := operations.DescribeDatasetV2Request{
		WorkspaceID: workspaceID,
		DatasetID:   datasetID,
	}

	return &out, diags
}
