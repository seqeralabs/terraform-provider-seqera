// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/provider/typeconvert"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/operations"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *PipelineSecretDataSourceModel) RefreshFromSharedPipelineSecret(ctx context.Context, resp *shared.PipelineSecret) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.DateCreated = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.DateCreated))
		r.ID = types.Int64PointerValue(resp.ID)
		r.LastUpdated = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.LastUpdated))
		r.LastUsed = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.LastUsed))
		r.Name = types.StringValue(resp.Name)
	}

	return diags
}

func (r *PipelineSecretDataSourceModel) ToOperationsDescribePipelineSecretRequest(ctx context.Context) (*operations.DescribePipelineSecretRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var secretID int64
	secretID = r.SecretID.ValueInt64()

	workspaceID := new(int64)
	if !r.WorkspaceID.IsUnknown() && !r.WorkspaceID.IsNull() {
		*workspaceID = r.WorkspaceID.ValueInt64()
	} else {
		workspaceID = nil
	}
	out := operations.DescribePipelineSecretRequest{
		SecretID:    secretID,
		WorkspaceID: workspaceID,
	}

	return &out, diags
}
