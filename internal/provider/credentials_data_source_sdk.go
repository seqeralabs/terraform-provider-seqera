// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/seqeralabs/terraform-provider-seqera/internal/provider/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/operations"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *CredentialsDataSourceModel) RefreshFromSharedListCredentialsDataSourceResponse(ctx context.Context, resp *shared.ListCredentialsDataSourceResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.Credentials = []tfTypes.Credential{}

		for _, credentialsItem := range resp.Credentials {
			var credentials tfTypes.Credential

			credentials.ID = types.StringPointerValue(credentialsItem.ID)
			credentials.Name = types.StringPointerValue(credentialsItem.Name)
			credentials.Provider = types.StringPointerValue(credentialsItem.Provider)

			r.Credentials = append(r.Credentials, credentials)
		}
		r.WorkspaceID = types.Int64PointerValue(resp.WorkspaceID)
	}

	return diags
}

func (r *CredentialsDataSourceModel) ToOperationsListCredentialsDataSourceRequest(ctx context.Context) (*operations.ListCredentialsDataSourceRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	workspaceID := new(int64)
	if !r.WorkspaceID.IsUnknown() && !r.WorkspaceID.IsNull() {
		*workspaceID = r.WorkspaceID.ValueInt64()
	} else {
		workspaceID = nil
	}
	out := operations.ListCredentialsDataSourceRequest{
		WorkspaceID: workspaceID,
	}

	return &out, diags
}
