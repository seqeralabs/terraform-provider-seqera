// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/seqeralabs/terraform-provider-seqera/internal/provider/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/operations"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *DataLinksDataSourceModel) RefreshFromSharedListDataLinksDataSourceResponse(ctx context.Context, resp *shared.ListDataLinksDataSourceResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.DataLinks = []tfTypes.DataLink{}

		for _, dataLinksItem := range resp.DataLinks {
			var dataLinks tfTypes.DataLink

			dataLinks.ID = types.StringPointerValue(dataLinksItem.ID)
			dataLinks.Name = types.StringPointerValue(dataLinksItem.Name)
			dataLinks.Provider = types.StringPointerValue(dataLinksItem.Provider)
			dataLinks.Region = types.StringPointerValue(dataLinksItem.Region)
			dataLinks.ResourceRef = types.StringPointerValue(dataLinksItem.ResourceRef)

			r.DataLinks = append(r.DataLinks, dataLinks)
		}
		r.WorkspaceID = types.Int64PointerValue(resp.WorkspaceID)
	}

	return diags
}

func (r *DataLinksDataSourceModel) ToOperationsListDataLinksDataSourceRequest(ctx context.Context) (*operations.ListDataLinksDataSourceRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	workspaceID := new(int64)
	if !r.WorkspaceID.IsUnknown() && !r.WorkspaceID.IsNull() {
		*workspaceID = r.WorkspaceID.ValueInt64()
	} else {
		workspaceID = nil
	}
	out := operations.ListDataLinksDataSourceRequest{
		WorkspaceID: workspaceID,
	}

	return &out, diags
}
