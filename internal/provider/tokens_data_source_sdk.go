// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/seqeralabs/terraform-provider-seqera/internal/provider/typeconvert"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
)

func (r *TokensDataSourceModel) RefreshFromSharedAccessToken(ctx context.Context, resp *shared.AccessToken) diag.Diagnostics {
	var diags diag.Diagnostics

	r.BasicAuth = types.StringPointerValue(resp.BasicAuth)
	r.DateCreated = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.DateCreated))
	r.ID = types.Int64PointerValue(resp.ID)
	r.LastUsed = types.StringPointerValue(typeconvert.TimePointerToStringPointer(resp.LastUsed))
	r.Name = types.StringValue(resp.Name)

	return diags
}

func (r *TokensDataSourceModel) RefreshFromSharedListAccessTokensResponse(ctx context.Context, resp *shared.ListAccessTokensResponse) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		if len(resp.Tokens) == 0 {
			diags.AddError("Unexpected response from API", "Missing response body array data.")
			return diags
		}

		diags.Append(r.RefreshFromSharedAccessToken(ctx, &resp.Tokens[0])...)

		if diags.HasError() {
			return diags
		}

	}

	return diags
}
