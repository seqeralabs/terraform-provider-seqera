// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package mapvalidators

import (
	"context"
	"fmt"
	"regexp"

	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
)

var _ validator.Map = MapStudioEnvironmentVariableValidatorValidator{}

// MapStudioEnvironmentVariableValidatorValidator validates that environment variable names
// contain only alphanumeric and underscore characters, and cannot begin with a number.
type MapStudioEnvironmentVariableValidatorValidator struct{}

// Description describes the validation in plain text formatting.
func (v MapStudioEnvironmentVariableValidatorValidator) Description(_ context.Context) string {
	return "environment variable names must contain only alphanumeric and underscore characters, and cannot begin with a number"
}

// MarkdownDescription describes the validation in Markdown formatting.
func (v MapStudioEnvironmentVariableValidatorValidator) MarkdownDescription(ctx context.Context) string {
	return v.Description(ctx)
}

// Validate performs the validation.
func (v MapStudioEnvironmentVariableValidatorValidator) ValidateMap(ctx context.Context, req validator.MapRequest, resp *validator.MapResponse) {
	// Only validate the attribute configuration value if it is known.
	if req.ConfigValue.IsNull() || req.ConfigValue.IsUnknown() {
		return
	}

	// Regular expression pattern: must start with letter or underscore,
	// followed by any number of alphanumeric characters or underscores
	pattern := regexp.MustCompile(`^[a-zA-Z_][a-zA-Z0-9_]*$`)

	// Get the map keys
	elements := req.ConfigValue.Elements()
	for key := range elements {
		if !pattern.MatchString(key) {
			resp.Diagnostics.AddAttributeError(
				req.Path,
				"Invalid Environment Variable Name",
				fmt.Sprintf("The environment variable name '%s' is invalid. "+
					"Variable names must contain only alphanumeric and underscore characters, "+
					"and cannot begin with a number.", key),
			)
		}
	}
}

// StudioEnvironmentVariableValidator returns a validator which ensures that environment
// variable names follow the Seqera Platform naming rules:
// - Only alphanumeric and underscore characters
// - Cannot begin with a number
func StudioEnvironmentVariableValidator() validator.Map {
	return MapStudioEnvironmentVariableValidatorValidator{}
}
