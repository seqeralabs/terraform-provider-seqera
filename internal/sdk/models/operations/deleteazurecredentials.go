// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
	"net/http"
)

type DeleteAzureCredentialsRequest struct {
	// Credentials string identifier
	CredentialsID string `pathParam:"style=simple,explode=false,name=credentialsId"`
	// Workspace numeric identifier
	WorkspaceID *int64 `queryParam:"style=form,explode=true,name=workspaceId"`
	// If set credentials deletion will be blocked by running jobs that depend on them
	Checked *bool `queryParam:"style=form,explode=true,name=checked"`
}

func (o *DeleteAzureCredentialsRequest) GetCredentialsID() string {
	if o == nil {
		return ""
	}
	return o.CredentialsID
}

func (o *DeleteAzureCredentialsRequest) GetWorkspaceID() *int64 {
	if o == nil {
		return nil
	}
	return o.WorkspaceID
}

func (o *DeleteAzureCredentialsRequest) GetChecked() *bool {
	if o == nil {
		return nil
	}
	return o.Checked
}

type DeleteAzureCredentialsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Bad request
	ErrorResponse *shared.ErrorResponse
	// Running jobs block the deletion of this credentials
	DeleteCredentialsConflictResponse *shared.DeleteCredentialsConflictResponse
}

func (o *DeleteAzureCredentialsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteAzureCredentialsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteAzureCredentialsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteAzureCredentialsResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}

func (o *DeleteAzureCredentialsResponse) GetDeleteCredentialsConflictResponse() *shared.DeleteCredentialsConflictResponse {
	if o == nil {
		return nil
	}
	return o.DeleteCredentialsConflictResponse
}
