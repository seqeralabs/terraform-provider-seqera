// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/models/shared"
	"net/http"
)

type DescribePipelineRepositoryRequest struct {
	// Pipeline repository name or URL
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Pipeline revision
	Revision *string `queryParam:"style=form,explode=true,name=revision"`
	// Workspace numeric identifier
	WorkspaceID *int64 `queryParam:"style=form,explode=true,name=workspaceId"`
	// Pipeline alternative main.nf
	MainScript *string `queryParam:"style=form,explode=true,name=mainScript"`
}

func (o *DescribePipelineRepositoryRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *DescribePipelineRepositoryRequest) GetRevision() *string {
	if o == nil {
		return nil
	}
	return o.Revision
}

func (o *DescribePipelineRepositoryRequest) GetWorkspaceID() *int64 {
	if o == nil {
		return nil
	}
	return o.WorkspaceID
}

func (o *DescribePipelineRepositoryRequest) GetMainScript() *string {
	if o == nil {
		return nil
	}
	return o.MainScript
}

type DescribePipelineRepositoryResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	DescribePipelineInfoResponse *shared.DescribePipelineInfoResponse
	// Bad request
	ErrorResponse *shared.ErrorResponse
}

func (o *DescribePipelineRepositoryResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DescribePipelineRepositoryResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DescribePipelineRepositoryResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DescribePipelineRepositoryResponse) GetDescribePipelineInfoResponse() *shared.DescribePipelineInfoResponse {
	if o == nil {
		return nil
	}
	return o.DescribePipelineInfoResponse
}

func (o *DescribePipelineRepositoryResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}
