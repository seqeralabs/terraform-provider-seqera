// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/models/shared"
	"net/http"
)

type DeleteWorkflowManyRequest struct {
	// Workspace numeric identifier
	WorkspaceID *int64 `queryParam:"style=form,explode=true,name=workspaceId"`
	// Force the deletion even if any workflows are active
	Force *bool `queryParam:"style=form,explode=true,name=force"`
	// Delete workflows request
	DeleteWorkflowsRequest shared.DeleteWorkflowsRequest `request:"mediaType=application/json"`
}

func (o *DeleteWorkflowManyRequest) GetWorkspaceID() *int64 {
	if o == nil {
		return nil
	}
	return o.WorkspaceID
}

func (o *DeleteWorkflowManyRequest) GetForce() *bool {
	if o == nil {
		return nil
	}
	return o.Force
}

func (o *DeleteWorkflowManyRequest) GetDeleteWorkflowsRequest() shared.DeleteWorkflowsRequest {
	if o == nil {
		return shared.DeleteWorkflowsRequest{}
	}
	return o.DeleteWorkflowsRequest
}

type DeleteWorkflowManyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK - Return the IDs of workflows that could not be deleted, if any
	DeleteWorkflowsResponse *shared.DeleteWorkflowsResponse
	// Bad request
	ErrorResponse *shared.ErrorResponse
}

func (o *DeleteWorkflowManyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeleteWorkflowManyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeleteWorkflowManyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeleteWorkflowManyResponse) GetDeleteWorkflowsResponse() *shared.DeleteWorkflowsResponse {
	if o == nil {
		return nil
	}
	return o.DeleteWorkflowsResponse
}

func (o *DeleteWorkflowManyResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}
