// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/models/shared"
	"net/http"
)

type DescribeWorkflowRequest struct {
	// Workflow string identifier
	WorkflowID string `pathParam:"style=simple,explode=false,name=workflowId"`
	// Workspace numeric identifier
	WorkspaceID *int64 `queryParam:"style=form,explode=true,name=workspaceId"`
	// Comma-separated list of attributes to retrieve. Returns an empty value for each attribute not specified.
	Attributes []shared.WorkflowQueryAttribute `queryParam:"style=form,explode=false,name=attributes"`
}

func (o *DescribeWorkflowRequest) GetWorkflowID() string {
	if o == nil {
		return ""
	}
	return o.WorkflowID
}

func (o *DescribeWorkflowRequest) GetWorkspaceID() *int64 {
	if o == nil {
		return nil
	}
	return o.WorkspaceID
}

func (o *DescribeWorkflowRequest) GetAttributes() []shared.WorkflowQueryAttribute {
	if o == nil {
		return nil
	}
	return o.Attributes
}

type DescribeWorkflowResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK
	DescribeWorkflowResponse *shared.DescribeWorkflowResponse
	// Bad request
	ErrorResponse *shared.ErrorResponse
}

func (o *DescribeWorkflowResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DescribeWorkflowResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DescribeWorkflowResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DescribeWorkflowResponse) GetDescribeWorkflowResponse() *shared.DescribeWorkflowResponse {
	if o == nil {
		return nil
	}
	return o.DescribeWorkflowResponse
}

func (o *DescribeWorkflowResponse) GetErrorResponse() *shared.ErrorResponse {
	if o == nil {
		return nil
	}
	return o.ErrorResponse
}
