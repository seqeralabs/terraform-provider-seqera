// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkflowStatus string

const (
	WorkflowStatusSubmitted WorkflowStatus = "SUBMITTED"
	WorkflowStatusRunning   WorkflowStatus = "RUNNING"
	WorkflowStatusSucceeded WorkflowStatus = "SUCCEEDED"
	WorkflowStatusFailed    WorkflowStatus = "FAILED"
	WorkflowStatusCancelled WorkflowStatus = "CANCELLED"
	WorkflowStatusUnknown   WorkflowStatus = "UNKNOWN"
)

func (e WorkflowStatus) ToPointer() *WorkflowStatus {
	return &e
}
func (e *WorkflowStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBMITTED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "UNKNOWN":
		*e = WorkflowStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowStatus: %v", v)
	}
}
