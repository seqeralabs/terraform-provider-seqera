// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

type WorkflowLoad struct {
	Pending              int64      `json:"pending"`
	Submitted            int64      `json:"submitted"`
	Running              int64      `json:"running"`
	Succeeded            int64      `json:"succeeded"`
	Failed               int64      `json:"failed"`
	Cached               int64      `json:"cached"`
	Aborted              int64      `json:"aborted"`
	Retries              int64      `json:"retries"`
	Ignored              int64      `json:"ignored"`
	MemoryEfficiency     *float32   `json:"memoryEfficiency,omitempty"`
	CPUEfficiency        *float32   `json:"cpuEfficiency,omitempty"`
	DateCreated          *time.Time `json:"dateCreated,omitempty"`
	LastUpdated          *time.Time `json:"lastUpdated,omitempty"`
	Version              *int64     `json:"version,omitempty"`
	Executors            []string   `json:"executors,omitempty"`
	Cpus                 int64      `json:"cpus"`
	CPUTime              int64      `json:"cpuTime"`
	CPULoad              int64      `json:"cpuLoad"`
	MemoryRss            int64      `json:"memoryRss"`
	MemoryReq            int64      `json:"memoryReq"`
	ReadBytes            int64      `json:"readBytes"`
	WriteBytes           int64      `json:"writeBytes"`
	VolCtxSwitch         int64      `json:"volCtxSwitch"`
	InvCtxSwitch         int64      `json:"invCtxSwitch"`
	LoadTasks            int64      `json:"loadTasks"`
	LoadCpus             int64      `json:"loadCpus"`
	LoadMemory           int64      `json:"loadMemory"`
	PeakCpus             int64      `json:"peakCpus"`
	PeakTasks            int64      `json:"peakTasks"`
	PeakMemory           int64      `json:"peakMemory"`
	Cost                 *float64   `json:"cost,omitempty"`
	NetCpus              *int64     `json:"netCpus,omitempty"`
	NetCPUTime           *int64     `json:"netCpuTime,omitempty"`
	NetCPULoad           *int64     `json:"netCpuLoad,omitempty"`
	NetMemoryRss         *int64     `json:"netMemoryRss,omitempty"`
	NetMemoryReq         *int64     `json:"netMemoryReq,omitempty"`
	NetMemoryConsumption *float64   `json:"netMemoryConsumption,omitempty"`
	NetReadBytes         *int64     `json:"netReadBytes,omitempty"`
	NetWriteBytes        *int64     `json:"netWriteBytes,omitempty"`
	NetVolCtxSwitch      *int64     `json:"netVolCtxSwitch,omitempty"`
	NetInvCtxSwitch      *int64     `json:"netInvCtxSwitch,omitempty"`
	NetCost              *float64   `json:"netCost,omitempty"`
}

func (w WorkflowLoad) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowLoad) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkflowLoad) GetPending() int64 {
	if o == nil {
		return 0
	}
	return o.Pending
}

func (o *WorkflowLoad) GetSubmitted() int64 {
	if o == nil {
		return 0
	}
	return o.Submitted
}

func (o *WorkflowLoad) GetRunning() int64 {
	if o == nil {
		return 0
	}
	return o.Running
}

func (o *WorkflowLoad) GetSucceeded() int64 {
	if o == nil {
		return 0
	}
	return o.Succeeded
}

func (o *WorkflowLoad) GetFailed() int64 {
	if o == nil {
		return 0
	}
	return o.Failed
}

func (o *WorkflowLoad) GetCached() int64 {
	if o == nil {
		return 0
	}
	return o.Cached
}

func (o *WorkflowLoad) GetAborted() int64 {
	if o == nil {
		return 0
	}
	return o.Aborted
}

func (o *WorkflowLoad) GetRetries() int64 {
	if o == nil {
		return 0
	}
	return o.Retries
}

func (o *WorkflowLoad) GetIgnored() int64 {
	if o == nil {
		return 0
	}
	return o.Ignored
}

func (o *WorkflowLoad) GetMemoryEfficiency() *float32 {
	if o == nil {
		return nil
	}
	return o.MemoryEfficiency
}

func (o *WorkflowLoad) GetCPUEfficiency() *float32 {
	if o == nil {
		return nil
	}
	return o.CPUEfficiency
}

func (o *WorkflowLoad) GetDateCreated() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateCreated
}

func (o *WorkflowLoad) GetLastUpdated() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}

func (o *WorkflowLoad) GetVersion() *int64 {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *WorkflowLoad) GetExecutors() []string {
	if o == nil {
		return nil
	}
	return o.Executors
}

func (o *WorkflowLoad) GetCpus() int64 {
	if o == nil {
		return 0
	}
	return o.Cpus
}

func (o *WorkflowLoad) GetCPUTime() int64 {
	if o == nil {
		return 0
	}
	return o.CPUTime
}

func (o *WorkflowLoad) GetCPULoad() int64 {
	if o == nil {
		return 0
	}
	return o.CPULoad
}

func (o *WorkflowLoad) GetMemoryRss() int64 {
	if o == nil {
		return 0
	}
	return o.MemoryRss
}

func (o *WorkflowLoad) GetMemoryReq() int64 {
	if o == nil {
		return 0
	}
	return o.MemoryReq
}

func (o *WorkflowLoad) GetReadBytes() int64 {
	if o == nil {
		return 0
	}
	return o.ReadBytes
}

func (o *WorkflowLoad) GetWriteBytes() int64 {
	if o == nil {
		return 0
	}
	return o.WriteBytes
}

func (o *WorkflowLoad) GetVolCtxSwitch() int64 {
	if o == nil {
		return 0
	}
	return o.VolCtxSwitch
}

func (o *WorkflowLoad) GetInvCtxSwitch() int64 {
	if o == nil {
		return 0
	}
	return o.InvCtxSwitch
}

func (o *WorkflowLoad) GetLoadTasks() int64 {
	if o == nil {
		return 0
	}
	return o.LoadTasks
}

func (o *WorkflowLoad) GetLoadCpus() int64 {
	if o == nil {
		return 0
	}
	return o.LoadCpus
}

func (o *WorkflowLoad) GetLoadMemory() int64 {
	if o == nil {
		return 0
	}
	return o.LoadMemory
}

func (o *WorkflowLoad) GetPeakCpus() int64 {
	if o == nil {
		return 0
	}
	return o.PeakCpus
}

func (o *WorkflowLoad) GetPeakTasks() int64 {
	if o == nil {
		return 0
	}
	return o.PeakTasks
}

func (o *WorkflowLoad) GetPeakMemory() int64 {
	if o == nil {
		return 0
	}
	return o.PeakMemory
}

func (o *WorkflowLoad) GetCost() *float64 {
	if o == nil {
		return nil
	}
	return o.Cost
}

func (o *WorkflowLoad) GetNetCpus() *int64 {
	if o == nil {
		return nil
	}
	return o.NetCpus
}

func (o *WorkflowLoad) GetNetCPUTime() *int64 {
	if o == nil {
		return nil
	}
	return o.NetCPUTime
}

func (o *WorkflowLoad) GetNetCPULoad() *int64 {
	if o == nil {
		return nil
	}
	return o.NetCPULoad
}

func (o *WorkflowLoad) GetNetMemoryRss() *int64 {
	if o == nil {
		return nil
	}
	return o.NetMemoryRss
}

func (o *WorkflowLoad) GetNetMemoryReq() *int64 {
	if o == nil {
		return nil
	}
	return o.NetMemoryReq
}

func (o *WorkflowLoad) GetNetMemoryConsumption() *float64 {
	if o == nil {
		return nil
	}
	return o.NetMemoryConsumption
}

func (o *WorkflowLoad) GetNetReadBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.NetReadBytes
}

func (o *WorkflowLoad) GetNetWriteBytes() *int64 {
	if o == nil {
		return nil
	}
	return o.NetWriteBytes
}

func (o *WorkflowLoad) GetNetVolCtxSwitch() *int64 {
	if o == nil {
		return nil
	}
	return o.NetVolCtxSwitch
}

func (o *WorkflowLoad) GetNetInvCtxSwitch() *int64 {
	if o == nil {
		return nil
	}
	return o.NetInvCtxSwitch
}

func (o *WorkflowLoad) GetNetCost() *float64 {
	if o == nil {
		return nil
	}
	return o.NetCost
}
