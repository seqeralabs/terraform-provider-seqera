// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataLinkDtoStatus string

const (
	DataLinkDtoStatusValid   DataLinkDtoStatus = "VALID"
	DataLinkDtoStatusInvalid DataLinkDtoStatus = "INVALID"
)

func (e DataLinkDtoStatus) ToPointer() *DataLinkDtoStatus {
	return &e
}
func (e *DataLinkDtoStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALID":
		fallthrough
	case "INVALID":
		*e = DataLinkDtoStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataLinkDtoStatus: %v", v)
	}
}

// DataLinkDto - Represents a data link connection to external storage systems.
// Provides access to cloud storage, file systems, and data repositories
// for pipeline input/output operations.
type DataLinkDto struct {
	// Unique identifier for the data link
	DataLinkID *string `json:"id,omitempty"`
	// Display name for the data link connection
	Name *string `json:"name,omitempty"`
	// Description of the data link's purpose and contents
	Description *string `json:"description,omitempty"`
	// Reference identifier for the external resource
	ResourceRef  *string       `json:"resourceRef,omitempty"`
	Type         *DataLinkType `json:"type,omitempty"`
	ProviderType *ProviderType `json:"provider,omitempty"`
	// Geographic region where the data link is hosted
	Region *string `json:"region,omitempty"`
	// Array of credentials required to access the data link
	Credentials      []DataLinkCredentials `json:"credentials,omitempty"`
	PublicAccessible *bool                 `json:"publicAccessible,omitempty"`
	Hidden           *bool                 `json:"hidden,omitempty"`
	Status           *DataLinkDtoStatus    `json:"status,omitempty"`
	Message          *string               `json:"message,omitempty"`
}

func (d *DataLinkDto) GetDataLinkID() *string {
	if d == nil {
		return nil
	}
	return d.DataLinkID
}

func (d *DataLinkDto) GetName() *string {
	if d == nil {
		return nil
	}
	return d.Name
}

func (d *DataLinkDto) GetDescription() *string {
	if d == nil {
		return nil
	}
	return d.Description
}

func (d *DataLinkDto) GetResourceRef() *string {
	if d == nil {
		return nil
	}
	return d.ResourceRef
}

func (d *DataLinkDto) GetType() *DataLinkType {
	if d == nil {
		return nil
	}
	return d.Type
}

func (d *DataLinkDto) GetProviderType() *ProviderType {
	if d == nil {
		return nil
	}
	return d.ProviderType
}

func (d *DataLinkDto) GetRegion() *string {
	if d == nil {
		return nil
	}
	return d.Region
}

func (d *DataLinkDto) GetCredentials() []DataLinkCredentials {
	if d == nil {
		return nil
	}
	return d.Credentials
}

func (d *DataLinkDto) GetPublicAccessible() *bool {
	if d == nil {
		return nil
	}
	return d.PublicAccessible
}

func (d *DataLinkDto) GetHidden() *bool {
	if d == nil {
		return nil
	}
	return d.Hidden
}

func (d *DataLinkDto) GetStatus() *DataLinkDtoStatus {
	if d == nil {
		return nil
	}
	return d.Status
}

func (d *DataLinkDto) GetMessage() *string {
	if d == nil {
		return nil
	}
	return d.Message
}
