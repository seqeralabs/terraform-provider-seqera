// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
)

// CredentialProvider - Credential provider type (currently only SSH)
type CredentialProvider string

const (
	CredentialProviderSSH CredentialProvider = "ssh"
)

func (e CredentialProvider) ToPointer() *CredentialProvider {
	return &e
}
func (e *CredentialProvider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ssh":
		*e = CredentialProvider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CredentialProvider: %v", v)
	}
}

type GridManagedCredentials struct {
	// Managed Credentials numeric identifier
	ManagedCredentialsID *int64 `json:"managedCredentialsId,omitempty"`
	// Parent Managed Identity numeric identifier
	ManagedIdentityID int64 `json:"managedIdentityId"`
	// User numeric identifier
	UserID *int64 `json:"userId,omitempty"`
	// Username for SSH authentication
	UserName *string `json:"userName,omitempty"`
	// Credential provider type (currently only SSH)
	CredentialProvider *CredentialProvider `default:"ssh" json:"provider"`
	// Organization numeric identifier
	OrgID *int64 `json:"orgId,omitempty"`
}

func (g GridManagedCredentials) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GridManagedCredentials) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"managedIdentityId"}); err != nil {
		return err
	}
	return nil
}

func (g *GridManagedCredentials) GetManagedCredentialsID() *int64 {
	if g == nil {
		return nil
	}
	return g.ManagedCredentialsID
}

func (g *GridManagedCredentials) GetManagedIdentityID() int64 {
	if g == nil {
		return 0
	}
	return g.ManagedIdentityID
}

func (g *GridManagedCredentials) GetUserID() *int64 {
	if g == nil {
		return nil
	}
	return g.UserID
}

func (g *GridManagedCredentials) GetUserName() *string {
	if g == nil {
		return nil
	}
	return g.UserName
}

func (g *GridManagedCredentials) GetCredentialProvider() *CredentialProvider {
	if g == nil {
		return nil
	}
	return g.CredentialProvider
}

func (g *GridManagedCredentials) GetOrgID() *int64 {
	if g == nil {
		return nil
	}
	return g.OrgID
}
