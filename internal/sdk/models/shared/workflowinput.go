// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

type WorkflowInput struct {
	RequiresAttention *bool           `json:"requiresAttention,omitempty"`
	Status            *WorkflowStatus `json:"status,omitempty"`
	Repository        *string         `json:"repository,omitempty"`
	ID                *string         `json:"id,omitempty"`
	Submit            time.Time       `json:"submit"`
	Start             *time.Time      `json:"start,omitempty"`
	Complete          *time.Time      `json:"complete,omitempty"`
	RunName           string          `json:"runName"`
	SessionID         string          `json:"sessionId"`
	Profile           *string         `json:"profile,omitempty"`
	WorkDir           string          `json:"workDir"`
	CommitID          *string         `json:"commitId,omitempty"`
	UserName          string          `json:"userName"`
	ScriptID          *string         `json:"scriptId,omitempty"`
	Revision          *string         `json:"revision,omitempty"`
	CommandLine       string          `json:"commandLine"`
	ProjectName       string          `json:"projectName"`
	ScriptName        *string         `json:"scriptName,omitempty"`
	LaunchID          *string         `json:"launchId,omitempty"`
	ConfigFiles       []string        `json:"configFiles,omitempty"`
	Params            map[string]any  `json:"params,omitempty"`
	ConfigText        *string         `json:"configText,omitempty"`
	Manifest          *WfManifest     `json:"manifest,omitempty"`
	Nextflow          *WfNextflow     `json:"nextflow,omitempty"`
	Stats             *WfStats        `json:"stats,omitempty"`
	ErrorMessage      *string         `json:"errorMessage,omitempty"`
	ErrorReport       *string         `json:"errorReport,omitempty"`
	ProjectDir        *string         `json:"projectDir,omitempty"`
	HomeDir           *string         `json:"homeDir,omitempty"`
	Container         *string         `json:"container,omitempty"`
	ContainerEngine   *string         `json:"containerEngine,omitempty"`
	ScriptFile        *string         `json:"scriptFile,omitempty"`
	LaunchDir         *string         `json:"launchDir,omitempty"`
	Duration          *int64          `json:"duration,omitempty"`
	ExitStatus        *int            `json:"exitStatus,omitempty"`
	Resume            *bool           `json:"resume,omitempty"`
	Success           *bool           `json:"success,omitempty"`
	LogFile           *string         `json:"logFile,omitempty"`
	OutFile           *string         `json:"outFile,omitempty"`
	OperationID       *string         `json:"operationId,omitempty"`
}

func (w WorkflowInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WorkflowInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WorkflowInput) GetRequiresAttention() *bool {
	if o == nil {
		return nil
	}
	return o.RequiresAttention
}

func (o *WorkflowInput) GetStatus() *WorkflowStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *WorkflowInput) GetRepository() *string {
	if o == nil {
		return nil
	}
	return o.Repository
}

func (o *WorkflowInput) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *WorkflowInput) GetSubmit() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Submit
}

func (o *WorkflowInput) GetStart() *time.Time {
	if o == nil {
		return nil
	}
	return o.Start
}

func (o *WorkflowInput) GetComplete() *time.Time {
	if o == nil {
		return nil
	}
	return o.Complete
}

func (o *WorkflowInput) GetRunName() string {
	if o == nil {
		return ""
	}
	return o.RunName
}

func (o *WorkflowInput) GetSessionID() string {
	if o == nil {
		return ""
	}
	return o.SessionID
}

func (o *WorkflowInput) GetProfile() *string {
	if o == nil {
		return nil
	}
	return o.Profile
}

func (o *WorkflowInput) GetWorkDir() string {
	if o == nil {
		return ""
	}
	return o.WorkDir
}

func (o *WorkflowInput) GetCommitID() *string {
	if o == nil {
		return nil
	}
	return o.CommitID
}

func (o *WorkflowInput) GetUserName() string {
	if o == nil {
		return ""
	}
	return o.UserName
}

func (o *WorkflowInput) GetScriptID() *string {
	if o == nil {
		return nil
	}
	return o.ScriptID
}

func (o *WorkflowInput) GetRevision() *string {
	if o == nil {
		return nil
	}
	return o.Revision
}

func (o *WorkflowInput) GetCommandLine() string {
	if o == nil {
		return ""
	}
	return o.CommandLine
}

func (o *WorkflowInput) GetProjectName() string {
	if o == nil {
		return ""
	}
	return o.ProjectName
}

func (o *WorkflowInput) GetScriptName() *string {
	if o == nil {
		return nil
	}
	return o.ScriptName
}

func (o *WorkflowInput) GetLaunchID() *string {
	if o == nil {
		return nil
	}
	return o.LaunchID
}

func (o *WorkflowInput) GetConfigFiles() []string {
	if o == nil {
		return nil
	}
	return o.ConfigFiles
}

func (o *WorkflowInput) GetParams() map[string]any {
	if o == nil {
		return nil
	}
	return o.Params
}

func (o *WorkflowInput) GetConfigText() *string {
	if o == nil {
		return nil
	}
	return o.ConfigText
}

func (o *WorkflowInput) GetManifest() *WfManifest {
	if o == nil {
		return nil
	}
	return o.Manifest
}

func (o *WorkflowInput) GetNextflow() *WfNextflow {
	if o == nil {
		return nil
	}
	return o.Nextflow
}

func (o *WorkflowInput) GetStats() *WfStats {
	if o == nil {
		return nil
	}
	return o.Stats
}

func (o *WorkflowInput) GetErrorMessage() *string {
	if o == nil {
		return nil
	}
	return o.ErrorMessage
}

func (o *WorkflowInput) GetErrorReport() *string {
	if o == nil {
		return nil
	}
	return o.ErrorReport
}

func (o *WorkflowInput) GetProjectDir() *string {
	if o == nil {
		return nil
	}
	return o.ProjectDir
}

func (o *WorkflowInput) GetHomeDir() *string {
	if o == nil {
		return nil
	}
	return o.HomeDir
}

func (o *WorkflowInput) GetContainer() *string {
	if o == nil {
		return nil
	}
	return o.Container
}

func (o *WorkflowInput) GetContainerEngine() *string {
	if o == nil {
		return nil
	}
	return o.ContainerEngine
}

func (o *WorkflowInput) GetScriptFile() *string {
	if o == nil {
		return nil
	}
	return o.ScriptFile
}

func (o *WorkflowInput) GetLaunchDir() *string {
	if o == nil {
		return nil
	}
	return o.LaunchDir
}

func (o *WorkflowInput) GetDuration() *int64 {
	if o == nil {
		return nil
	}
	return o.Duration
}

func (o *WorkflowInput) GetExitStatus() *int {
	if o == nil {
		return nil
	}
	return o.ExitStatus
}

func (o *WorkflowInput) GetResume() *bool {
	if o == nil {
		return nil
	}
	return o.Resume
}

func (o *WorkflowInput) GetSuccess() *bool {
	if o == nil {
		return nil
	}
	return o.Success
}

func (o *WorkflowInput) GetLogFile() *string {
	if o == nil {
		return nil
	}
	return o.LogFile
}

func (o *WorkflowInput) GetOutFile() *string {
	if o == nil {
		return nil
	}
	return o.OutFile
}

func (o *WorkflowInput) GetOperationID() *string {
	if o == nil {
		return nil
	}
	return o.OperationID
}
