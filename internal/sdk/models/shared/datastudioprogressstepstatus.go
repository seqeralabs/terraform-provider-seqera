// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataStudioProgressStepStatus string

const (
	DataStudioProgressStepStatusPending    DataStudioProgressStepStatus = "pending"
	DataStudioProgressStepStatusInProgress DataStudioProgressStepStatus = "in-progress"
	DataStudioProgressStepStatusSucceeded  DataStudioProgressStepStatus = "succeeded"
	DataStudioProgressStepStatusErrored    DataStudioProgressStepStatus = "errored"
)

func (e DataStudioProgressStepStatus) ToPointer() *DataStudioProgressStepStatus {
	return &e
}
func (e *DataStudioProgressStepStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "in-progress":
		fallthrough
	case "succeeded":
		fallthrough
	case "errored":
		*e = DataStudioProgressStepStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataStudioProgressStepStatus: %v", v)
	}
}
