// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

// AWSBatchCEComputeConfigPlatform - AWS platform type
type AWSBatchCEComputeConfigPlatform string

const (
	AWSBatchCEComputeConfigPlatformAwsBatch AWSBatchCEComputeConfigPlatform = "aws-batch"
)

func (e AWSBatchCEComputeConfigPlatform) ToPointer() *AWSBatchCEComputeConfigPlatform {
	return &e
}
func (e *AWSBatchCEComputeConfigPlatform) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws-batch":
		*e = AWSBatchCEComputeConfigPlatform(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AWSBatchCEComputeConfigPlatform: %v", v)
	}
}

type AWSBatchCEComputeConfigInput struct {
	// AWS credentials identifier
	CredentialsID string `json:"credentialsId"`
	// Workspace numeric identifier
	WorkspaceID *int64 `json:"workspaceId,omitempty"`
	// Unique identifier for the compute environment
	ID *string `json:"id,omitempty"`
	// Display name for the compute environment
	Name string `json:"name"`
	// Optional description of the compute environment
	Description *string `json:"description,omitempty"`
	// AWS platform type
	Platform AWSBatchCEComputeConfigPlatform `json:"platform"`
	// Compute environment status
	Status *string `json:"status,omitempty"`
	// Timestamp when the compute environment was created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// Timestamp when the compute environment was last updated
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// Timestamp when the compute environment was last used
	LastUsed *time.Time `json:"lastUsed,omitempty"`
	// Flag indicating if the compute environment has been deleted
	Deleted *bool          `json:"deleted,omitempty"`
	Config  AwsBatchConfig `json:"config"`
}

func (a AWSBatchCEComputeConfigInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AWSBatchCEComputeConfigInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"credentialsId", "name", "platform", "config"}); err != nil {
		return err
	}
	return nil
}

func (a *AWSBatchCEComputeConfigInput) GetCredentialsID() string {
	if a == nil {
		return ""
	}
	return a.CredentialsID
}

func (a *AWSBatchCEComputeConfigInput) GetWorkspaceID() *int64 {
	if a == nil {
		return nil
	}
	return a.WorkspaceID
}

func (a *AWSBatchCEComputeConfigInput) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AWSBatchCEComputeConfigInput) GetName() string {
	if a == nil {
		return ""
	}
	return a.Name
}

func (a *AWSBatchCEComputeConfigInput) GetDescription() *string {
	if a == nil {
		return nil
	}
	return a.Description
}

func (a *AWSBatchCEComputeConfigInput) GetPlatform() AWSBatchCEComputeConfigPlatform {
	if a == nil {
		return AWSBatchCEComputeConfigPlatform("")
	}
	return a.Platform
}

func (a *AWSBatchCEComputeConfigInput) GetStatus() *string {
	if a == nil {
		return nil
	}
	return a.Status
}

func (a *AWSBatchCEComputeConfigInput) GetDateCreated() *time.Time {
	if a == nil {
		return nil
	}
	return a.DateCreated
}

func (a *AWSBatchCEComputeConfigInput) GetLastUpdated() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastUpdated
}

func (a *AWSBatchCEComputeConfigInput) GetLastUsed() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastUsed
}

func (a *AWSBatchCEComputeConfigInput) GetDeleted() *bool {
	if a == nil {
		return nil
	}
	return a.Deleted
}

func (a *AWSBatchCEComputeConfigInput) GetConfig() AwsBatchConfig {
	if a == nil {
		return AwsBatchConfig{}
	}
	return a.Config
}

type AWSBatchCEComputeConfig struct {
	// AWS credentials identifier
	CredentialsID string `json:"credentialsId"`
	OrgID         *int64 `json:"orgId,omitempty"`
	// Workspace numeric identifier
	WorkspaceID *int64 `json:"workspaceId,omitempty"`
	// Unique identifier for the compute environment
	ID *string `json:"id,omitempty"`
	// Display name for the compute environment
	Name string `json:"name"`
	// Optional description of the compute environment
	Description *string `json:"description,omitempty"`
	// AWS platform type
	Platform AWSBatchCEComputeConfigPlatform `json:"platform"`
	// Compute environment status
	Status *string `json:"status,omitempty"`
	// Timestamp when the compute environment was created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// Timestamp when the compute environment was last updated
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// Timestamp when the compute environment was last used
	LastUsed *time.Time `json:"lastUsed,omitempty"`
	// Flag indicating if the compute environment has been deleted
	Deleted *bool          `json:"deleted,omitempty"`
	Config  AwsBatchConfig `json:"config"`
}

func (a AWSBatchCEComputeConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AWSBatchCEComputeConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"credentialsId", "name", "platform", "config"}); err != nil {
		return err
	}
	return nil
}

func (a *AWSBatchCEComputeConfig) GetCredentialsID() string {
	if a == nil {
		return ""
	}
	return a.CredentialsID
}

func (a *AWSBatchCEComputeConfig) GetOrgID() *int64 {
	if a == nil {
		return nil
	}
	return a.OrgID
}

func (a *AWSBatchCEComputeConfig) GetWorkspaceID() *int64 {
	if a == nil {
		return nil
	}
	return a.WorkspaceID
}

func (a *AWSBatchCEComputeConfig) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AWSBatchCEComputeConfig) GetName() string {
	if a == nil {
		return ""
	}
	return a.Name
}

func (a *AWSBatchCEComputeConfig) GetDescription() *string {
	if a == nil {
		return nil
	}
	return a.Description
}

func (a *AWSBatchCEComputeConfig) GetPlatform() AWSBatchCEComputeConfigPlatform {
	if a == nil {
		return AWSBatchCEComputeConfigPlatform("")
	}
	return a.Platform
}

func (a *AWSBatchCEComputeConfig) GetStatus() *string {
	if a == nil {
		return nil
	}
	return a.Status
}

func (a *AWSBatchCEComputeConfig) GetDateCreated() *time.Time {
	if a == nil {
		return nil
	}
	return a.DateCreated
}

func (a *AWSBatchCEComputeConfig) GetLastUpdated() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastUpdated
}

func (a *AWSBatchCEComputeConfig) GetLastUsed() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastUsed
}

func (a *AWSBatchCEComputeConfig) GetDeleted() *bool {
	if a == nil {
		return nil
	}
	return a.Deleted
}

func (a *AWSBatchCEComputeConfig) GetConfig() AwsBatchConfig {
	if a == nil {
		return AwsBatchConfig{}
	}
	return a.Config
}
