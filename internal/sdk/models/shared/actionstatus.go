// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionStatus string

const (
	ActionStatusCreating ActionStatus = "CREATING"
	ActionStatusActive   ActionStatus = "ACTIVE"
	ActionStatusError    ActionStatus = "ERROR"
	ActionStatusPaused   ActionStatus = "PAUSED"
)

func (e ActionStatus) ToPointer() *ActionStatus {
	return &e
}
func (e *ActionStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ERROR":
		fallthrough
	case "PAUSED":
		*e = ActionStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionStatus: %v", v)
	}
}
