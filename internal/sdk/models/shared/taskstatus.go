// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskStatus string

const (
	TaskStatusNew       TaskStatus = "NEW"
	TaskStatusSubmitted TaskStatus = "SUBMITTED"
	TaskStatusRunning   TaskStatus = "RUNNING"
	TaskStatusCached    TaskStatus = "CACHED"
	TaskStatusCompleted TaskStatus = "COMPLETED"
	TaskStatusFailed    TaskStatus = "FAILED"
	TaskStatusAborted   TaskStatus = "ABORTED"
)

func (e TaskStatus) ToPointer() *TaskStatus {
	return &e
}
func (e *TaskStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEW":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "CACHED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "ABORTED":
		*e = TaskStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskStatus: %v", v)
	}
}
