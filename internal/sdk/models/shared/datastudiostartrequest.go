// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
)

type Configuration struct {
	// Set to 0 to disable GPU or 1 to enable GPU.
	Gpu *int `default:"0" json:"gpu"`
	// Number of CPU cores to allocate
	CPU *int `json:"cpu,omitempty"`
	// Memory allocation for the Studio session in megabytes (MB).
	Memory    *int     `json:"memory,omitempty"`
	MountData []string `json:"mountData,omitempty"`
	// Studio-specific environment variables as key-value pairs. Variable names must contain only alphanumeric and underscore characters, and cannot begin with a number.
	Environment      map[string]string `json:"environment,omitempty"`
	CondaEnvironment *string           `json:"condaEnvironment,omitempty"`
	// Maximum lifespan of the Studio session in hours
	LifespanHours *int `json:"lifespanHours,omitempty"`
}

func (c Configuration) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *Configuration) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (c *Configuration) GetGpu() *int {
	if c == nil {
		return nil
	}
	return c.Gpu
}

func (c *Configuration) GetCPU() *int {
	if c == nil {
		return nil
	}
	return c.CPU
}

func (c *Configuration) GetMemory() *int {
	if c == nil {
		return nil
	}
	return c.Memory
}

func (c *Configuration) GetMountData() []string {
	if c == nil {
		return nil
	}
	return c.MountData
}

func (c *Configuration) GetEnvironment() map[string]string {
	if c == nil {
		return nil
	}
	return c.Environment
}

func (c *Configuration) GetCondaEnvironment() *string {
	if c == nil {
		return nil
	}
	return c.CondaEnvironment
}

func (c *Configuration) GetLifespanHours() *int {
	if c == nil {
		return nil
	}
	return c.LifespanHours
}

type DataStudioStartRequest struct {
	Configuration *Configuration `json:"configuration,omitempty"`
	Description   *string        `json:"description,omitempty"`
	LabelIds      []int64        `json:"labelIds,omitempty"`
	Spot          *bool          `json:"spot,omitempty"`
}

func (d *DataStudioStartRequest) GetConfiguration() *Configuration {
	if d == nil {
		return nil
	}
	return d.Configuration
}

func (d *DataStudioStartRequest) GetDescription() *string {
	if d == nil {
		return nil
	}
	return d.Description
}

func (d *DataStudioStartRequest) GetLabelIds() []int64 {
	if d == nil {
		return nil
	}
	return d.LabelIds
}

func (d *DataStudioStartRequest) GetSpot() *bool {
	if d == nil {
		return nil
	}
	return d.Spot
}
