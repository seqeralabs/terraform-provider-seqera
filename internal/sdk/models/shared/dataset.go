// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

// Dataset - Represents a dataset in the Seqera Platform.
// Contains dataset metadata, versioning information, and access
// controls for data management and sharing.
type Dataset struct {
	// Unique identifier for the dataset (max 22 characters)
	ID *string `json:"id,omitempty"`
	// Dataset name following naming conventions (1-100 characters)
	Name string `json:"name"`
	// Detailed description of the dataset contents and purpose (max 1000 characters)
	Description *string `json:"description,omitempty"`
	// MIME type or media type of the dataset content (max 80 characters)
	MediaType *string `json:"mediaType,omitempty"`
	// Read-only flag indicating if the dataset has been deleted
	Deleted     *bool      `json:"deleted,omitempty"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

func (d Dataset) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *Dataset) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"name"}); err != nil {
		return err
	}
	return nil
}

func (d *Dataset) GetID() *string {
	if d == nil {
		return nil
	}
	return d.ID
}

func (d *Dataset) GetName() string {
	if d == nil {
		return ""
	}
	return d.Name
}

func (d *Dataset) GetDescription() *string {
	if d == nil {
		return nil
	}
	return d.Description
}

func (d *Dataset) GetMediaType() *string {
	if d == nil {
		return nil
	}
	return d.MediaType
}

func (d *Dataset) GetDeleted() *bool {
	if d == nil {
		return nil
	}
	return d.Deleted
}

func (d *Dataset) GetDateCreated() *time.Time {
	if d == nil {
		return nil
	}
	return d.DateCreated
}

func (d *Dataset) GetLastUpdated() *time.Time {
	if d == nil {
		return nil
	}
	return d.LastUpdated
}
