// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateManagedCredentialsRequestProvider string

const (
	CreateManagedCredentialsRequestProviderSSH CreateManagedCredentialsRequestProvider = "ssh"
)

func (e CreateManagedCredentialsRequestProvider) ToPointer() *CreateManagedCredentialsRequestProvider {
	return &e
}
func (e *CreateManagedCredentialsRequestProvider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ssh":
		*e = CreateManagedCredentialsRequestProvider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateManagedCredentialsRequestProvider: %v", v)
	}
}

type CreateManagedCredentialsRequest struct {
	Provider *CreateManagedCredentialsRequestProvider `json:"provider,omitempty"`
	// Represents credentials used for authentication with various platforms and services.
	// Contains authentication information for accessing cloud providers, Git repositories,
	// and other external services within the Seqera Platform.
	//
	Credentials *CredentialsInput                `json:"credentials,omitempty"`
	Metadata    *ManagedCredentialsMetadataInput `json:"metadata,omitempty"`
}

func (c *CreateManagedCredentialsRequest) GetProvider() *CreateManagedCredentialsRequestProvider {
	if c == nil {
		return nil
	}
	return c.Provider
}

func (c *CreateManagedCredentialsRequest) GetCredentials() *CredentialsInput {
	if c == nil {
		return nil
	}
	return c.Credentials
}

func (c *CreateManagedCredentialsRequest) GetMetadata() *ManagedCredentialsMetadataInput {
	if c == nil {
		return nil
	}
	return c.Metadata
}
