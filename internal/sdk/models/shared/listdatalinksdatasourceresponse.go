// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type DataLink struct {
	// Data link ID
	ID *string `json:"id,omitempty"`
	// Data link name
	Name *string `json:"name,omitempty"`
	// Provider type (aws, azure, google, azure_entra, seqeracompute)
	Provider *string `json:"provider,omitempty"`
	// Resource reference (e.g., s3://bucket-name)
	ResourceRef *string `json:"resourceRef,omitempty"`
	// Geographic region where the data link is hosted
	Region *string `json:"region,omitempty"`
}

func (d *DataLink) GetID() *string {
	if d == nil {
		return nil
	}
	return d.ID
}

func (d *DataLink) GetName() *string {
	if d == nil {
		return nil
	}
	return d.Name
}

func (d *DataLink) GetProvider() *string {
	if d == nil {
		return nil
	}
	return d.Provider
}

func (d *DataLink) GetResourceRef() *string {
	if d == nil {
		return nil
	}
	return d.ResourceRef
}

func (d *DataLink) GetRegion() *string {
	if d == nil {
		return nil
	}
	return d.Region
}

type ListDataLinksDataSourceResponse struct {
	// Workspace ID used for filtering
	WorkspaceID *int64 `json:"workspaceId,omitempty"`
	// List of data links
	DataLinks []DataLink `json:"dataLinks"`
}

func (l *ListDataLinksDataSourceResponse) GetWorkspaceID() *int64 {
	if l == nil {
		return nil
	}
	return l.WorkspaceID
}

func (l *ListDataLinksDataSourceResponse) GetDataLinks() []DataLink {
	if l == nil {
		return []DataLink{}
	}
	return l.DataLinks
}
