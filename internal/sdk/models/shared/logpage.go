// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type LogPage struct {
	Truncated    *bool             `json:"truncated,omitempty"`
	Entries      *IteratorString   `json:"entries,omitempty"`
	RewindToken  *string           `json:"rewindToken,omitempty"`
	ForwardToken *string           `json:"forwardToken,omitempty"`
	Pending      *bool             `json:"pending,omitempty"`
	Message      *string           `json:"message,omitempty"`
	Downloads    []LogPageDownload `json:"downloads,omitempty"`
}

func (o *LogPage) GetTruncated() *bool {
	if o == nil {
		return nil
	}
	return o.Truncated
}

func (o *LogPage) GetEntries() *IteratorString {
	if o == nil {
		return nil
	}
	return o.Entries
}

func (o *LogPage) GetRewindToken() *string {
	if o == nil {
		return nil
	}
	return o.RewindToken
}

func (o *LogPage) GetForwardToken() *string {
	if o == nil {
		return nil
	}
	return o.ForwardToken
}

func (o *LogPage) GetPending() *bool {
	if o == nil {
		return nil
	}
	return o.Pending
}

func (o *LogPage) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *LogPage) GetDownloads() []LogPageDownload {
	if o == nil {
		return nil
	}
	return o.Downloads
}
