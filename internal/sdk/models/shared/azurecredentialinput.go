// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AzureCredentialInputProviderType - Cloud provider type (azure)
type AzureCredentialInputProviderType string

const (
	AzureCredentialInputProviderTypeAzure AzureCredentialInputProviderType = "azure"
)

func (e AzureCredentialInputProviderType) ToPointer() *AzureCredentialInputProviderType {
	return &e
}
func (e *AzureCredentialInputProviderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "azure":
		*e = AzureCredentialInputProviderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AzureCredentialInputProviderType: %v", v)
	}
}

type AzureCredentialInput struct {
	// Unique identifier for the credential (max 22 characters)
	CredentialsID *string `json:"id,omitempty"`
	// Display name for the credential (max 100 characters)
	Name string `json:"name"`
	// Optional description explaining the purpose of the credential
	Description *string `json:"description,omitempty"`
	// Cloud provider type (azure)
	ProviderType AzureCredentialInputProviderType `json:"provider"`
	// Base URL for the service
	BaseURL *string `json:"baseUrl,omitempty"`
	// Category of the credential
	Category *string           `json:"category,omitempty"`
	Keys     AzureSecurityKeys `json:"keys"`
}

func (o *AzureCredentialInput) GetCredentialsID() *string {
	if o == nil {
		return nil
	}
	return o.CredentialsID
}

func (o *AzureCredentialInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AzureCredentialInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AzureCredentialInput) GetProviderType() AzureCredentialInputProviderType {
	if o == nil {
		return AzureCredentialInputProviderType("")
	}
	return o.ProviderType
}

func (o *AzureCredentialInput) GetBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.BaseURL
}

func (o *AzureCredentialInput) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *AzureCredentialInput) GetKeys() AzureSecurityKeys {
	if o == nil {
		return AzureSecurityKeys{}
	}
	return o.Keys
}
