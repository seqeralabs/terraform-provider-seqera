// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

type DatasetDto struct {
	ID             *string          `json:"id,omitempty"`
	User           *UserInfo        `json:"user,omitempty"`
	WorkspaceID    *int64           `json:"workspaceId,omitempty"`
	OrganizationID *int64           `json:"organizationId,omitempty"`
	Name           *string          `json:"name,omitempty"`
	LastUpdatedBy  *UserInfo        `json:"lastUpdatedBy,omitempty"`
	Description    *string          `json:"description,omitempty"`
	MediaType      *string          `json:"mediaType,omitempty"`
	DateCreated    *time.Time       `json:"dateCreated,omitempty"`
	LastUpdated    *time.Time       `json:"lastUpdated,omitempty"`
	Deleted        *bool            `json:"deleted,omitempty"`
	Hidden         *bool            `json:"hidden,omitempty"`
	Labels         []LabelDbDto     `json:"labels,omitempty"`
	Version        *int64           `json:"version,omitempty"`
	RunsInfo       *DatasetRunsInfo `json:"runsInfo,omitempty"`
}

func (d DatasetDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DatasetDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (d *DatasetDto) GetID() *string {
	if d == nil {
		return nil
	}
	return d.ID
}

func (d *DatasetDto) GetUser() *UserInfo {
	if d == nil {
		return nil
	}
	return d.User
}

func (d *DatasetDto) GetWorkspaceID() *int64 {
	if d == nil {
		return nil
	}
	return d.WorkspaceID
}

func (d *DatasetDto) GetOrganizationID() *int64 {
	if d == nil {
		return nil
	}
	return d.OrganizationID
}

func (d *DatasetDto) GetName() *string {
	if d == nil {
		return nil
	}
	return d.Name
}

func (d *DatasetDto) GetLastUpdatedBy() *UserInfo {
	if d == nil {
		return nil
	}
	return d.LastUpdatedBy
}

func (d *DatasetDto) GetDescription() *string {
	if d == nil {
		return nil
	}
	return d.Description
}

func (d *DatasetDto) GetMediaType() *string {
	if d == nil {
		return nil
	}
	return d.MediaType
}

func (d *DatasetDto) GetDateCreated() *time.Time {
	if d == nil {
		return nil
	}
	return d.DateCreated
}

func (d *DatasetDto) GetLastUpdated() *time.Time {
	if d == nil {
		return nil
	}
	return d.LastUpdated
}

func (d *DatasetDto) GetDeleted() *bool {
	if d == nil {
		return nil
	}
	return d.Deleted
}

func (d *DatasetDto) GetHidden() *bool {
	if d == nil {
		return nil
	}
	return d.Hidden
}

func (d *DatasetDto) GetLabels() []LabelDbDto {
	if d == nil {
		return nil
	}
	return d.Labels
}

func (d *DatasetDto) GetVersion() *int64 {
	if d == nil {
		return nil
	}
	return d.Version
}

func (d *DatasetDto) GetRunsInfo() *DatasetRunsInfo {
	if d == nil {
		return nil
	}
	return d.RunsInfo
}
