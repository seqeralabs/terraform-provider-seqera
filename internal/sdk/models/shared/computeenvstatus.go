// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComputeEnvStatus string

const (
	ComputeEnvStatusCreating  ComputeEnvStatus = "CREATING"
	ComputeEnvStatusAvailable ComputeEnvStatus = "AVAILABLE"
	ComputeEnvStatusErrored   ComputeEnvStatus = "ERRORED"
	ComputeEnvStatusInvalid   ComputeEnvStatus = "INVALID"
)

func (e ComputeEnvStatus) ToPointer() *ComputeEnvStatus {
	return &e
}
func (e *ComputeEnvStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATING":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "ERRORED":
		fallthrough
	case "INVALID":
		*e = ComputeEnvStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComputeEnvStatus: %v", v)
	}
}
