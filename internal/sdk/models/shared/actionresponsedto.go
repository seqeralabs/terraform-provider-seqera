// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

// ActionResponseDto - Represents a pipeline action in the Seqera Platform.
// Contains action configuration, triggers, and execution settings
// for automated pipeline workflows.
type ActionResponseDto struct {
	// Unique identifier for the action
	ID     *string `json:"id,omitempty"`
	Launch *Launch `json:"launch,omitempty"`
	// Human-readable name for the action
	Name *string `json:"name,omitempty"`
	// Identifier for the webhook associated with this action
	HookID *string `json:"hookId,omitempty"`
	// URL endpoint for the webhook that triggers this action
	HookURL *string `json:"hookUrl,omitempty"`
	// Status or informational message about the action
	Message     *string           `json:"message,omitempty"`
	Source      *ActionSource     `json:"source,omitempty"`
	Status      *ActionStatus     `json:"status,omitempty"`
	Config      *ActionConfigType `json:"config,omitempty"`
	Event       *ActionEventType  `json:"event,omitempty"`
	LastSeen    *time.Time        `json:"lastSeen,omitempty"`
	DateCreated *time.Time        `json:"dateCreated,omitempty"`
	LastUpdated *time.Time        `json:"lastUpdated,omitempty"`
	Labels      []LabelDbDto      `json:"labels,omitempty"`
}

func (a ActionResponseDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActionResponseDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *ActionResponseDto) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *ActionResponseDto) GetLaunch() *Launch {
	if a == nil {
		return nil
	}
	return a.Launch
}

func (a *ActionResponseDto) GetName() *string {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *ActionResponseDto) GetHookID() *string {
	if a == nil {
		return nil
	}
	return a.HookID
}

func (a *ActionResponseDto) GetHookURL() *string {
	if a == nil {
		return nil
	}
	return a.HookURL
}

func (a *ActionResponseDto) GetMessage() *string {
	if a == nil {
		return nil
	}
	return a.Message
}

func (a *ActionResponseDto) GetSource() *ActionSource {
	if a == nil {
		return nil
	}
	return a.Source
}

func (a *ActionResponseDto) GetStatus() *ActionStatus {
	if a == nil {
		return nil
	}
	return a.Status
}

func (a *ActionResponseDto) GetConfig() *ActionConfigType {
	if a == nil {
		return nil
	}
	return a.Config
}

func (a *ActionResponseDto) GetConfigGithub() *GithubActionConfig {
	if v := a.GetConfig(); v != nil {
		return v.GithubActionConfig
	}
	return nil
}

func (a *ActionResponseDto) GetConfigTower() *ActionTowerActionConfig {
	if v := a.GetConfig(); v != nil {
		return v.ActionTowerActionConfig
	}
	return nil
}

func (a *ActionResponseDto) GetEvent() *ActionEventType {
	if a == nil {
		return nil
	}
	return a.Event
}

func (a *ActionResponseDto) GetEventGithub() *GithubActionEvent {
	if v := a.GetEvent(); v != nil {
		return v.GithubActionEvent
	}
	return nil
}

func (a *ActionResponseDto) GetEventTower() *ActionTowerActionEvent {
	if v := a.GetEvent(); v != nil {
		return v.ActionTowerActionEvent
	}
	return nil
}

func (a *ActionResponseDto) GetLastSeen() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastSeen
}

func (a *ActionResponseDto) GetDateCreated() *time.Time {
	if a == nil {
		return nil
	}
	return a.DateCreated
}

func (a *ActionResponseDto) GetLastUpdated() *time.Time {
	if a == nil {
		return nil
	}
	return a.LastUpdated
}

func (a *ActionResponseDto) GetLabels() []LabelDbDto {
	if a == nil {
		return nil
	}
	return a.Labels
}
