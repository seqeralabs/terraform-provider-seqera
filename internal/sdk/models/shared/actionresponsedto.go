// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

// ActionResponseDto - Represents a pipeline action in the Seqera Platform.
// Contains action configuration, triggers, and execution settings
// for automated pipeline workflows.
type ActionResponseDto struct {
	ID          *string           `json:"id,omitempty"`
	Launch      *Launch           `json:"launch,omitempty"`
	Name        *string           `json:"name,omitempty"`
	HookID      *string           `json:"hookId,omitempty"`
	HookURL     *string           `json:"hookUrl,omitempty"`
	Message     *string           `json:"message,omitempty"`
	Source      *ActionSource     `json:"source,omitempty"`
	Status      *ActionStatus     `json:"status,omitempty"`
	Config      *ActionConfigType `json:"config,omitempty"`
	Event       *ActionEventType  `json:"event,omitempty"`
	LastSeen    *time.Time        `json:"lastSeen,omitempty"`
	DateCreated *time.Time        `json:"dateCreated,omitempty"`
	LastUpdated *time.Time        `json:"lastUpdated,omitempty"`
	Labels      []LabelDbDto      `json:"labels,omitempty"`
}

func (a ActionResponseDto) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ActionResponseDto) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ActionResponseDto) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ActionResponseDto) GetLaunch() *Launch {
	if o == nil {
		return nil
	}
	return o.Launch
}

func (o *ActionResponseDto) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ActionResponseDto) GetHookID() *string {
	if o == nil {
		return nil
	}
	return o.HookID
}

func (o *ActionResponseDto) GetHookURL() *string {
	if o == nil {
		return nil
	}
	return o.HookURL
}

func (o *ActionResponseDto) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *ActionResponseDto) GetSource() *ActionSource {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *ActionResponseDto) GetStatus() *ActionStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *ActionResponseDto) GetConfig() *ActionConfigType {
	if o == nil {
		return nil
	}
	return o.Config
}

func (o *ActionResponseDto) GetConfigGithub() *GithubActionConfig {
	if v := o.GetConfig(); v != nil {
		return v.GithubActionConfig
	}
	return nil
}

func (o *ActionResponseDto) GetConfigTower() *ActionTowerActionConfig {
	if v := o.GetConfig(); v != nil {
		return v.ActionTowerActionConfig
	}
	return nil
}

func (o *ActionResponseDto) GetEvent() *ActionEventType {
	if o == nil {
		return nil
	}
	return o.Event
}

func (o *ActionResponseDto) GetEventGithub() *GithubActionEvent {
	if v := o.GetEvent(); v != nil {
		return v.GithubActionEvent
	}
	return nil
}

func (o *ActionResponseDto) GetEventTower() *ActionTowerActionEvent {
	if v := o.GetEvent(); v != nil {
		return v.ActionTowerActionEvent
	}
	return nil
}

func (o *ActionResponseDto) GetLastSeen() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastSeen
}

func (o *ActionResponseDto) GetDateCreated() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateCreated
}

func (o *ActionResponseDto) GetLastUpdated() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}

func (o *ActionResponseDto) GetLabels() []LabelDbDto {
	if o == nil {
		return nil
	}
	return o.Labels
}
