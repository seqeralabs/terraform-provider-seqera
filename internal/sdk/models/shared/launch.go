// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Launch struct {
	ID          *string `json:"id,omitempty"`
	Pipeline    string  `json:"pipeline"`
	WorkDir     *string `json:"workDir,omitempty"`
	Revision    *string `json:"revision,omitempty"`
	ConfigText  *string `json:"configText,omitempty"`
	TowerConfig *string `json:"towerConfig,omitempty"`
	ParamsText  *string `json:"paramsText,omitempty"`
	// Add a script that executes in the nf-launch script prior to invoking Nextflow processes. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts).
	PreRunScript *string `json:"preRunScript,omitempty"`
	// Add a script that executes after all Nextflow processes have completed. See [Pre and post-run scripts](https://docs.seqera.io/platform-cloud/launch/advanced#pre-and-post-run-scripts).
	PostRunScript       *string  `json:"postRunScript,omitempty"`
	MainScript          *string  `json:"mainScript,omitempty"`
	EntryName           *string  `json:"entryName,omitempty"`
	SchemaName          *string  `json:"schemaName,omitempty"`
	Resume              *bool    `json:"resume,omitempty"`
	ResumeLaunchID      *string  `json:"resumeLaunchId,omitempty"`
	PullLatest          *bool    `json:"pullLatest,omitempty"`
	StubRun             *bool    `json:"stubRun,omitempty"`
	SessionID           *string  `json:"sessionId,omitempty"`
	RunName             *string  `json:"runName,omitempty"`
	ConfigProfiles      []string `json:"configProfiles,omitempty"`
	UserSecrets         []string `json:"userSecrets,omitempty"`
	WorkspaceSecrets    []string `json:"workspaceSecrets,omitempty"`
	OptimizationID      *string  `json:"optimizationId,omitempty"`
	OptimizationTargets *string  `json:"optimizationTargets,omitempty"`
	HeadJobCpus         *int     `json:"headJobCpus,omitempty"`
	HeadJobMemoryMb     *int     `json:"headJobMemoryMb,omitempty"`
	LaunchContainer     *string  `json:"launchContainer,omitempty"`
}

func (l *Launch) GetID() *string {
	if l == nil {
		return nil
	}
	return l.ID
}

func (l *Launch) GetPipeline() string {
	if l == nil {
		return ""
	}
	return l.Pipeline
}

func (l *Launch) GetWorkDir() *string {
	if l == nil {
		return nil
	}
	return l.WorkDir
}

func (l *Launch) GetRevision() *string {
	if l == nil {
		return nil
	}
	return l.Revision
}

func (l *Launch) GetConfigText() *string {
	if l == nil {
		return nil
	}
	return l.ConfigText
}

func (l *Launch) GetTowerConfig() *string {
	if l == nil {
		return nil
	}
	return l.TowerConfig
}

func (l *Launch) GetParamsText() *string {
	if l == nil {
		return nil
	}
	return l.ParamsText
}

func (l *Launch) GetPreRunScript() *string {
	if l == nil {
		return nil
	}
	return l.PreRunScript
}

func (l *Launch) GetPostRunScript() *string {
	if l == nil {
		return nil
	}
	return l.PostRunScript
}

func (l *Launch) GetMainScript() *string {
	if l == nil {
		return nil
	}
	return l.MainScript
}

func (l *Launch) GetEntryName() *string {
	if l == nil {
		return nil
	}
	return l.EntryName
}

func (l *Launch) GetSchemaName() *string {
	if l == nil {
		return nil
	}
	return l.SchemaName
}

func (l *Launch) GetResume() *bool {
	if l == nil {
		return nil
	}
	return l.Resume
}

func (l *Launch) GetResumeLaunchID() *string {
	if l == nil {
		return nil
	}
	return l.ResumeLaunchID
}

func (l *Launch) GetPullLatest() *bool {
	if l == nil {
		return nil
	}
	return l.PullLatest
}

func (l *Launch) GetStubRun() *bool {
	if l == nil {
		return nil
	}
	return l.StubRun
}

func (l *Launch) GetSessionID() *string {
	if l == nil {
		return nil
	}
	return l.SessionID
}

func (l *Launch) GetRunName() *string {
	if l == nil {
		return nil
	}
	return l.RunName
}

func (l *Launch) GetConfigProfiles() []string {
	if l == nil {
		return nil
	}
	return l.ConfigProfiles
}

func (l *Launch) GetUserSecrets() []string {
	if l == nil {
		return nil
	}
	return l.UserSecrets
}

func (l *Launch) GetWorkspaceSecrets() []string {
	if l == nil {
		return nil
	}
	return l.WorkspaceSecrets
}

func (l *Launch) GetOptimizationID() *string {
	if l == nil {
		return nil
	}
	return l.OptimizationID
}

func (l *Launch) GetOptimizationTargets() *string {
	if l == nil {
		return nil
	}
	return l.OptimizationTargets
}

func (l *Launch) GetHeadJobCpus() *int {
	if l == nil {
		return nil
	}
	return l.HeadJobCpus
}

func (l *Launch) GetHeadJobMemoryMb() *int {
	if l == nil {
		return nil
	}
	return l.HeadJobMemoryMb
}

func (l *Launch) GetLaunchContainer() *string {
	if l == nil {
		return nil
	}
	return l.LaunchContainer
}
