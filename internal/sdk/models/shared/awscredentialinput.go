// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AWSCredentialInputProviderType - Cloud provider type (aws)
type AWSCredentialInputProviderType string

const (
	AWSCredentialInputProviderTypeAws AWSCredentialInputProviderType = "aws"
)

func (e AWSCredentialInputProviderType) ToPointer() *AWSCredentialInputProviderType {
	return &e
}
func (e *AWSCredentialInputProviderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws":
		*e = AWSCredentialInputProviderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AWSCredentialInputProviderType: %v", v)
	}
}

type AWSCredentialInput struct {
	// Unique identifier for the credential (max 22 characters)
	CredentialsID *string `json:"id,omitempty"`
	// Display name for the credential (max 100 characters)
	Name string `json:"name"`
	// Optional description explaining the purpose of the credential
	Description *string `json:"description,omitempty"`
	// Cloud provider type (aws)
	ProviderType AWSCredentialInputProviderType `json:"provider"`
	// Base URL for the service
	BaseURL *string `json:"baseUrl,omitempty"`
	// Category of the credential
	Category *string         `json:"category,omitempty"`
	Keys     AwsSecurityKeys `json:"keys"`
}

func (o *AWSCredentialInput) GetCredentialsID() *string {
	if o == nil {
		return nil
	}
	return o.CredentialsID
}

func (o *AWSCredentialInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AWSCredentialInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AWSCredentialInput) GetProviderType() AWSCredentialInputProviderType {
	if o == nil {
		return AWSCredentialInputProviderType("")
	}
	return o.ProviderType
}

func (o *AWSCredentialInput) GetBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.BaseURL
}

func (o *AWSCredentialInput) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *AWSCredentialInput) GetKeys() AwsSecurityKeys {
	if o == nil {
		return AwsSecurityKeys{}
	}
	return o.Keys
}

type AWSCredentialInputOutput struct {
	// Unique identifier for the credential (max 22 characters)
	CredentialsID *string `json:"id,omitempty"`
	// Display name for the credential (max 100 characters)
	Name string `json:"name"`
	// Optional description explaining the purpose of the credential
	Description *string `json:"description,omitempty"`
	// Cloud provider type (aws)
	ProviderType AWSCredentialInputProviderType `json:"provider"`
	// Base URL for the service
	BaseURL *string `json:"baseUrl,omitempty"`
	// Category of the credential
	Category *string               `json:"category,omitempty"`
	Keys     AwsSecurityKeysOutput `json:"keys"`
}

func (o *AWSCredentialInputOutput) GetCredentialsID() *string {
	if o == nil {
		return nil
	}
	return o.CredentialsID
}

func (o *AWSCredentialInputOutput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AWSCredentialInputOutput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AWSCredentialInputOutput) GetProviderType() AWSCredentialInputProviderType {
	if o == nil {
		return AWSCredentialInputProviderType("")
	}
	return o.ProviderType
}

func (o *AWSCredentialInputOutput) GetBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.BaseURL
}

func (o *AWSCredentialInputOutput) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *AWSCredentialInputOutput) GetKeys() AwsSecurityKeysOutput {
	if o == nil {
		return AwsSecurityKeysOutput{}
	}
	return o.Keys
}
