// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

type Workspace struct {
	ID          *int64     `json:"id,omitempty"`
	Name        string     `json:"name"`
	FullName    string     `json:"fullName"`
	Description *string    `json:"description,omitempty"`
	Visibility  Visibility `json:"visibility"`
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
}

func (w Workspace) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *Workspace) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Workspace) GetID() *int64 {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Workspace) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Workspace) GetFullName() string {
	if o == nil {
		return ""
	}
	return o.FullName
}

func (o *Workspace) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Workspace) GetVisibility() Visibility {
	if o == nil {
		return Visibility("")
	}
	return o.Visibility
}

func (o *Workspace) GetDateCreated() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateCreated
}

func (o *Workspace) GetLastUpdated() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}
