// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PipelineOptimizationStatus string

const (
	PipelineOptimizationStatusOptimized   PipelineOptimizationStatus = "OPTIMIZED"
	PipelineOptimizationStatusOptimizable PipelineOptimizationStatus = "OPTIMIZABLE"
	PipelineOptimizationStatusUnavailable PipelineOptimizationStatus = "UNAVAILABLE"
)

func (e PipelineOptimizationStatus) ToPointer() *PipelineOptimizationStatus {
	return &e
}
func (e *PipelineOptimizationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPTIMIZED":
		fallthrough
	case "OPTIMIZABLE":
		fallthrough
	case "UNAVAILABLE":
		*e = PipelineOptimizationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PipelineOptimizationStatus: %v", v)
	}
}
