// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type ManagedIdentityDbDtoAbstractGridConfig struct {
	ID   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	// Grid computing platform type
	Platform *GridPlatform       `json:"platform,omitempty"`
	Config   *AbstractGridConfig `json:"config,omitempty"`
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetID() *int64 {
	if m == nil {
		return nil
	}
	return m.ID
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetName() *string {
	if m == nil {
		return nil
	}
	return m.Name
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetPlatform() *GridPlatform {
	if m == nil {
		return nil
	}
	return m.Platform
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfig() *AbstractGridConfig {
	if m == nil {
		return nil
	}
	return m.Config
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigMoabPlatform() *AbstractGridConfigMoabConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigMoabConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigAwsBatch() *AbstractGridConfigAWSBatchConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigAWSBatchConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigLocalPlatform() *AbstractGridConfigLocalExecutionConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigLocalExecutionConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigGkePlatform() *AbstractGridConfigGoogleGKEClusterConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigGoogleGKEClusterConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigGoogleBatch() *AbstractGridConfigGoogleBatchServiceConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigGoogleBatchServiceConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigAwsCloud() *AbstractGridConfigAWSCloudConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigAWSCloudConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigSlurmPlatform() *AbstractGridConfigSlurmConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigSlurmConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigK8sPlatform() *AbstractGridConfigKubernetesComputeConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigKubernetesComputeConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigAltairPlatform() *AbstractGridConfigAltairPBSConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigAltairPBSConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigLsfPlatform() *AbstractGridConfigIBMLSFConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigIBMLSFConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigAzureBatch() *AbstractGridConfigAzureBatchConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigAzureBatchConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigSeqeracomputePlatform() *AbstractGridConfigSeqeraComputeConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigSeqeraComputeConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigEksPlatform() *AbstractGridConfigAmazonEKSClusterConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigAmazonEKSClusterConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigGoogleLifesciences() *AbstractGridConfigGoogleLifeSciencesConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigGoogleLifeSciencesConfiguration
	}
	return nil
}

func (m *ManagedIdentityDbDtoAbstractGridConfig) GetConfigUgePlatform() *AbstractGridConfigUnivaGridEngineConfiguration {
	if v := m.GetConfig(); v != nil {
		return v.AbstractGridConfigUnivaGridEngineConfiguration
	}
	return nil
}
