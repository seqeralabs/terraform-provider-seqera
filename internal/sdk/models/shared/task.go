// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

type Task struct {
	Hash        *string          `json:"hash,omitempty"`
	Name        *string          `json:"name,omitempty"`
	Process     *string          `json:"process,omitempty"`
	Tag         *string          `json:"tag,omitempty"`
	Submit      *time.Time       `json:"submit,omitempty"`
	Start       *time.Time       `json:"start,omitempty"`
	Complete    *time.Time       `json:"complete,omitempty"`
	Module      []string         `json:"module,omitempty"`
	Container   *string          `json:"container,omitempty"`
	Attempt     *int             `json:"attempt,omitempty"`
	Script      *string          `json:"script,omitempty"`
	Scratch     *string          `json:"scratch,omitempty"`
	Workdir     *string          `json:"workdir,omitempty"`
	Queue       *string          `json:"queue,omitempty"`
	Cpus        *int             `json:"cpus,omitempty"`
	Memory      *int64           `json:"memory,omitempty"`
	Disk        *int64           `json:"disk,omitempty"`
	Time        *int64           `json:"time,omitempty"`
	Env         *string          `json:"env,omitempty"`
	Executor    *string          `json:"executor,omitempty"`
	MachineType *string          `json:"machineType,omitempty"`
	CloudZone   *string          `json:"cloudZone,omitempty"`
	PriceModel  *CloudPriceModel `json:"priceModel,omitempty"`
	Cost        *float64         `json:"cost,omitempty"`
	ErrorAction *string          `json:"errorAction,omitempty"`
	ExitStatus  *int             `json:"exitStatus,omitempty"`
	Duration    *int64           `json:"duration,omitempty"`
	Realtime    *int64           `json:"realtime,omitempty"`
	NativeID    *string          `json:"nativeId,omitempty"`
	Pcpu        *float64         `json:"pcpu,omitempty"`
	Pmem        *float64         `json:"pmem,omitempty"`
	Rss         *int64           `json:"rss,omitempty"`
	Vmem        *int64           `json:"vmem,omitempty"`
	PeakRss     *int64           `json:"peakRss,omitempty"`
	PeakVmem    *int64           `json:"peakVmem,omitempty"`
	Rchar       *int64           `json:"rchar,omitempty"`
	Wchar       *int64           `json:"wchar,omitempty"`
	Syscr       *int64           `json:"syscr,omitempty"`
	Syscw       *int64           `json:"syscw,omitempty"`
	ReadBytes   *int64           `json:"readBytes,omitempty"`
	WriteBytes  *int64           `json:"writeBytes,omitempty"`
	VolCtxt     *int64           `json:"volCtxt,omitempty"`
	InvCtxt     *int64           `json:"invCtxt,omitempty"`
	Exit        *int             `json:"exit,omitempty"`
	ID          *int64           `json:"id,omitempty"`
	TaskID      int64            `json:"taskId"`
	Status      TaskStatus       `json:"status"`
	DateCreated *time.Time       `json:"dateCreated,omitempty"`
	LastUpdated *time.Time       `json:"lastUpdated,omitempty"`
}

func (t Task) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *Task) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, []string{"taskId", "status"}); err != nil {
		return err
	}
	return nil
}

func (t *Task) GetHash() *string {
	if t == nil {
		return nil
	}
	return t.Hash
}

func (t *Task) GetName() *string {
	if t == nil {
		return nil
	}
	return t.Name
}

func (t *Task) GetProcess() *string {
	if t == nil {
		return nil
	}
	return t.Process
}

func (t *Task) GetTag() *string {
	if t == nil {
		return nil
	}
	return t.Tag
}

func (t *Task) GetSubmit() *time.Time {
	if t == nil {
		return nil
	}
	return t.Submit
}

func (t *Task) GetStart() *time.Time {
	if t == nil {
		return nil
	}
	return t.Start
}

func (t *Task) GetComplete() *time.Time {
	if t == nil {
		return nil
	}
	return t.Complete
}

func (t *Task) GetModule() []string {
	if t == nil {
		return nil
	}
	return t.Module
}

func (t *Task) GetContainer() *string {
	if t == nil {
		return nil
	}
	return t.Container
}

func (t *Task) GetAttempt() *int {
	if t == nil {
		return nil
	}
	return t.Attempt
}

func (t *Task) GetScript() *string {
	if t == nil {
		return nil
	}
	return t.Script
}

func (t *Task) GetScratch() *string {
	if t == nil {
		return nil
	}
	return t.Scratch
}

func (t *Task) GetWorkdir() *string {
	if t == nil {
		return nil
	}
	return t.Workdir
}

func (t *Task) GetQueue() *string {
	if t == nil {
		return nil
	}
	return t.Queue
}

func (t *Task) GetCpus() *int {
	if t == nil {
		return nil
	}
	return t.Cpus
}

func (t *Task) GetMemory() *int64 {
	if t == nil {
		return nil
	}
	return t.Memory
}

func (t *Task) GetDisk() *int64 {
	if t == nil {
		return nil
	}
	return t.Disk
}

func (t *Task) GetTime() *int64 {
	if t == nil {
		return nil
	}
	return t.Time
}

func (t *Task) GetEnv() *string {
	if t == nil {
		return nil
	}
	return t.Env
}

func (t *Task) GetExecutor() *string {
	if t == nil {
		return nil
	}
	return t.Executor
}

func (t *Task) GetMachineType() *string {
	if t == nil {
		return nil
	}
	return t.MachineType
}

func (t *Task) GetCloudZone() *string {
	if t == nil {
		return nil
	}
	return t.CloudZone
}

func (t *Task) GetPriceModel() *CloudPriceModel {
	if t == nil {
		return nil
	}
	return t.PriceModel
}

func (t *Task) GetCost() *float64 {
	if t == nil {
		return nil
	}
	return t.Cost
}

func (t *Task) GetErrorAction() *string {
	if t == nil {
		return nil
	}
	return t.ErrorAction
}

func (t *Task) GetExitStatus() *int {
	if t == nil {
		return nil
	}
	return t.ExitStatus
}

func (t *Task) GetDuration() *int64 {
	if t == nil {
		return nil
	}
	return t.Duration
}

func (t *Task) GetRealtime() *int64 {
	if t == nil {
		return nil
	}
	return t.Realtime
}

func (t *Task) GetNativeID() *string {
	if t == nil {
		return nil
	}
	return t.NativeID
}

func (t *Task) GetPcpu() *float64 {
	if t == nil {
		return nil
	}
	return t.Pcpu
}

func (t *Task) GetPmem() *float64 {
	if t == nil {
		return nil
	}
	return t.Pmem
}

func (t *Task) GetRss() *int64 {
	if t == nil {
		return nil
	}
	return t.Rss
}

func (t *Task) GetVmem() *int64 {
	if t == nil {
		return nil
	}
	return t.Vmem
}

func (t *Task) GetPeakRss() *int64 {
	if t == nil {
		return nil
	}
	return t.PeakRss
}

func (t *Task) GetPeakVmem() *int64 {
	if t == nil {
		return nil
	}
	return t.PeakVmem
}

func (t *Task) GetRchar() *int64 {
	if t == nil {
		return nil
	}
	return t.Rchar
}

func (t *Task) GetWchar() *int64 {
	if t == nil {
		return nil
	}
	return t.Wchar
}

func (t *Task) GetSyscr() *int64 {
	if t == nil {
		return nil
	}
	return t.Syscr
}

func (t *Task) GetSyscw() *int64 {
	if t == nil {
		return nil
	}
	return t.Syscw
}

func (t *Task) GetReadBytes() *int64 {
	if t == nil {
		return nil
	}
	return t.ReadBytes
}

func (t *Task) GetWriteBytes() *int64 {
	if t == nil {
		return nil
	}
	return t.WriteBytes
}

func (t *Task) GetVolCtxt() *int64 {
	if t == nil {
		return nil
	}
	return t.VolCtxt
}

func (t *Task) GetInvCtxt() *int64 {
	if t == nil {
		return nil
	}
	return t.InvCtxt
}

func (t *Task) GetExit() *int {
	if t == nil {
		return nil
	}
	return t.Exit
}

func (t *Task) GetID() *int64 {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *Task) GetTaskID() int64 {
	if t == nil {
		return 0
	}
	return t.TaskID
}

func (t *Task) GetStatus() TaskStatus {
	if t == nil {
		return TaskStatus("")
	}
	return t.Status
}

func (t *Task) GetDateCreated() *time.Time {
	if t == nil {
		return nil
	}
	return t.DateCreated
}

func (t *Task) GetLastUpdated() *time.Time {
	if t == nil {
		return nil
	}
	return t.LastUpdated
}
