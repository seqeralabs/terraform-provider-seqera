// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

// GoogleCredentialProviderType - Cloud provider type (google)
type GoogleCredentialProviderType string

const (
	GoogleCredentialProviderTypeGoogle GoogleCredentialProviderType = "google"
)

func (e GoogleCredentialProviderType) ToPointer() *GoogleCredentialProviderType {
	return &e
}
func (e *GoogleCredentialProviderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "google":
		*e = GoogleCredentialProviderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCredentialProviderType: %v", v)
	}
}

type GoogleCredential struct {
	// Unique identifier for the credential (max 22 characters)
	CredentialsID *string `json:"id,omitempty"`
	// Display name for the credential (max 100 characters)
	Name string `json:"name"`
	// Optional description explaining the purpose of the credential
	Description *string `json:"description,omitempty"`
	// Cloud provider type (google)
	ProviderType GoogleCredentialProviderType `json:"provider"`
	// Base URL for the service
	BaseURL *string `json:"baseUrl,omitempty"`
	// Category of the credential
	Category *string `json:"category,omitempty"`
	// Flag indicating if the credential has been soft-deleted
	Deleted *bool `json:"deleted,omitempty"`
	// Timestamp when the credential was last used
	LastUsed *time.Time `json:"lastUsed,omitempty"`
	// Timestamp when the credential was created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// Timestamp when the credential was last updated
	LastUpdated *time.Time               `json:"lastUpdated,omitempty"`
	Keys        GoogleSecurityKeysOutput `json:"keys"`
}

func (g GoogleCredential) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GoogleCredential) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GoogleCredential) GetCredentialsID() *string {
	if o == nil {
		return nil
	}
	return o.CredentialsID
}

func (o *GoogleCredential) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *GoogleCredential) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *GoogleCredential) GetProviderType() GoogleCredentialProviderType {
	if o == nil {
		return GoogleCredentialProviderType("")
	}
	return o.ProviderType
}

func (o *GoogleCredential) GetBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.BaseURL
}

func (o *GoogleCredential) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *GoogleCredential) GetDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *GoogleCredential) GetLastUsed() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUsed
}

func (o *GoogleCredential) GetDateCreated() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateCreated
}

func (o *GoogleCredential) GetLastUpdated() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}

func (o *GoogleCredential) GetKeys() GoogleSecurityKeysOutput {
	if o == nil {
		return GoogleSecurityKeysOutput{}
	}
	return o.Keys
}
