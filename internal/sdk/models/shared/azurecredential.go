// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/seqeralabs/terraform-provider-seqera/internal/sdk/internal/utils"
	"time"
)

// AzureCredentialProviderType - Cloud provider type (azure)
type AzureCredentialProviderType string

const (
	AzureCredentialProviderTypeAzure AzureCredentialProviderType = "azure"
)

func (e AzureCredentialProviderType) ToPointer() *AzureCredentialProviderType {
	return &e
}
func (e *AzureCredentialProviderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "azure":
		*e = AzureCredentialProviderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AzureCredentialProviderType: %v", v)
	}
}

type AzureCredential struct {
	// Unique identifier for the credential (max 22 characters)
	CredentialsID *string `json:"id,omitempty"`
	// Display name for the credential (max 100 characters)
	Name string `json:"name"`
	// Optional description explaining the purpose of the credential
	Description *string `json:"description,omitempty"`
	// Cloud provider type (azure)
	ProviderType AzureCredentialProviderType `json:"provider"`
	// Base URL for the service
	BaseURL *string `json:"baseUrl,omitempty"`
	// Category of the credential
	Category *string `json:"category,omitempty"`
	// Flag indicating if the credential has been soft-deleted
	Deleted *bool `json:"deleted,omitempty"`
	// Timestamp when the credential was last used
	LastUsed *time.Time `json:"lastUsed,omitempty"`
	// Timestamp when the credential was created
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// Timestamp when the credential was last updated
	LastUpdated *time.Time              `json:"lastUpdated,omitempty"`
	Keys        AzureSecurityKeysOutput `json:"keys"`
}

func (a AzureCredential) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AzureCredential) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"name", "provider", "keys"}); err != nil {
		return err
	}
	return nil
}

func (o *AzureCredential) GetCredentialsID() *string {
	if o == nil {
		return nil
	}
	return o.CredentialsID
}

func (o *AzureCredential) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *AzureCredential) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *AzureCredential) GetProviderType() AzureCredentialProviderType {
	if o == nil {
		return AzureCredentialProviderType("")
	}
	return o.ProviderType
}

func (o *AzureCredential) GetBaseURL() *string {
	if o == nil {
		return nil
	}
	return o.BaseURL
}

func (o *AzureCredential) GetCategory() *string {
	if o == nil {
		return nil
	}
	return o.Category
}

func (o *AzureCredential) GetDeleted() *bool {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *AzureCredential) GetLastUsed() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUsed
}

func (o *AzureCredential) GetDateCreated() *time.Time {
	if o == nil {
		return nil
	}
	return o.DateCreated
}

func (o *AzureCredential) GetLastUpdated() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastUpdated
}

func (o *AzureCredential) GetKeys() AzureSecurityKeysOutput {
	if o == nil {
		return AzureSecurityKeysOutput{}
	}
	return o.Keys
}
