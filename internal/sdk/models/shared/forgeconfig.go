// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ForgeConfigType string

const (
	ForgeConfigTypeSpot ForgeConfigType = "SPOT"
	ForgeConfigTypeEc2  ForgeConfigType = "EC2"
)

func (e ForgeConfigType) ToPointer() *ForgeConfigType {
	return &e
}
func (e *ForgeConfigType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SPOT":
		fallthrough
	case "EC2":
		*e = ForgeConfigType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ForgeConfigType: %v", v)
	}
}

type AllocStrategy string

const (
	AllocStrategyBestFit                    AllocStrategy = "BEST_FIT"
	AllocStrategyBestFitProgressive         AllocStrategy = "BEST_FIT_PROGRESSIVE"
	AllocStrategySpotCapacityOptimized      AllocStrategy = "SPOT_CAPACITY_OPTIMIZED"
	AllocStrategySpotPriceCapacityOptimized AllocStrategy = "SPOT_PRICE_CAPACITY_OPTIMIZED"
)

func (e AllocStrategy) ToPointer() *AllocStrategy {
	return &e
}
func (e *AllocStrategy) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BEST_FIT":
		fallthrough
	case "BEST_FIT_PROGRESSIVE":
		fallthrough
	case "SPOT_CAPACITY_OPTIMIZED":
		fallthrough
	case "SPOT_PRICE_CAPACITY_OPTIMIZED":
		*e = AllocStrategy(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllocStrategy: %v", v)
	}
}

type ForgeConfig struct {
	Type               ForgeConfigType `json:"type"`
	MinCpus            int             `json:"minCpus"`
	MaxCpus            *int            `json:"maxCpus,omitempty"`
	GpuEnabled         *bool           `json:"gpuEnabled,omitempty"`
	EbsAutoScale       *bool           `json:"ebsAutoScale,omitempty"`
	InstanceTypes      []string        `json:"instanceTypes,omitempty"`
	AllocStrategy      *AllocStrategy  `json:"allocStrategy,omitempty"`
	ImageID            *string         `json:"imageId,omitempty"`
	VpcID              *string         `json:"vpcId,omitempty"`
	Subnets            []string        `json:"subnets,omitempty"`
	SecurityGroups     []string        `json:"securityGroups,omitempty"`
	FsxMount           *string         `json:"fsxMount,omitempty"`
	FsxName            *string         `json:"fsxName,omitempty"`
	FsxSize            *int            `json:"fsxSize,omitempty"`
	DisposeOnDeletion  *bool           `json:"disposeOnDeletion,omitempty"`
	Ec2KeyPair         *string         `json:"ec2KeyPair,omitempty"`
	AllowBuckets       []string        `json:"allowBuckets,omitempty"`
	EbsBlockSize       *int            `json:"ebsBlockSize,omitempty"`
	FusionEnabled      *bool           `json:"fusionEnabled,omitempty"`
	BidPercentage      *int            `json:"bidPercentage,omitempty"`
	EfsCreate          *bool           `json:"efsCreate,omitempty"`
	EfsID              *string         `json:"efsId,omitempty"`
	EfsMount           *string         `json:"efsMount,omitempty"`
	DragenEnabled      *bool           `json:"dragenEnabled,omitempty"`
	DragenAmiID        *string         `json:"dragenAmiId,omitempty"`
	EbsBootSize        *int            `json:"ebsBootSize,omitempty"`
	EcsConfig          *string         `json:"ecsConfig,omitempty"`
	FargateHeadEnabled *bool           `json:"fargateHeadEnabled,omitempty"`
	Arm64Enabled       *bool           `json:"arm64Enabled,omitempty"`
	DragenInstanceType *string         `json:"dragenInstanceType,omitempty"`
}

func (o *ForgeConfig) GetType() ForgeConfigType {
	if o == nil {
		return ForgeConfigType("")
	}
	return o.Type
}

func (o *ForgeConfig) GetMinCpus() int {
	if o == nil {
		return 0
	}
	return o.MinCpus
}

func (o *ForgeConfig) GetMaxCpus() *int {
	if o == nil {
		return nil
	}
	return o.MaxCpus
}

func (o *ForgeConfig) GetGpuEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.GpuEnabled
}

func (o *ForgeConfig) GetEbsAutoScale() *bool {
	if o == nil {
		return nil
	}
	return o.EbsAutoScale
}

func (o *ForgeConfig) GetInstanceTypes() []string {
	if o == nil {
		return nil
	}
	return o.InstanceTypes
}

func (o *ForgeConfig) GetAllocStrategy() *AllocStrategy {
	if o == nil {
		return nil
	}
	return o.AllocStrategy
}

func (o *ForgeConfig) GetImageID() *string {
	if o == nil {
		return nil
	}
	return o.ImageID
}

func (o *ForgeConfig) GetVpcID() *string {
	if o == nil {
		return nil
	}
	return o.VpcID
}

func (o *ForgeConfig) GetSubnets() []string {
	if o == nil {
		return nil
	}
	return o.Subnets
}

func (o *ForgeConfig) GetSecurityGroups() []string {
	if o == nil {
		return nil
	}
	return o.SecurityGroups
}

func (o *ForgeConfig) GetFsxMount() *string {
	if o == nil {
		return nil
	}
	return o.FsxMount
}

func (o *ForgeConfig) GetFsxName() *string {
	if o == nil {
		return nil
	}
	return o.FsxName
}

func (o *ForgeConfig) GetFsxSize() *int {
	if o == nil {
		return nil
	}
	return o.FsxSize
}

func (o *ForgeConfig) GetDisposeOnDeletion() *bool {
	if o == nil {
		return nil
	}
	return o.DisposeOnDeletion
}

func (o *ForgeConfig) GetEc2KeyPair() *string {
	if o == nil {
		return nil
	}
	return o.Ec2KeyPair
}

func (o *ForgeConfig) GetAllowBuckets() []string {
	if o == nil {
		return nil
	}
	return o.AllowBuckets
}

func (o *ForgeConfig) GetEbsBlockSize() *int {
	if o == nil {
		return nil
	}
	return o.EbsBlockSize
}

func (o *ForgeConfig) GetFusionEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.FusionEnabled
}

func (o *ForgeConfig) GetBidPercentage() *int {
	if o == nil {
		return nil
	}
	return o.BidPercentage
}

func (o *ForgeConfig) GetEfsCreate() *bool {
	if o == nil {
		return nil
	}
	return o.EfsCreate
}

func (o *ForgeConfig) GetEfsID() *string {
	if o == nil {
		return nil
	}
	return o.EfsID
}

func (o *ForgeConfig) GetEfsMount() *string {
	if o == nil {
		return nil
	}
	return o.EfsMount
}

func (o *ForgeConfig) GetDragenEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.DragenEnabled
}

func (o *ForgeConfig) GetDragenAmiID() *string {
	if o == nil {
		return nil
	}
	return o.DragenAmiID
}

func (o *ForgeConfig) GetEbsBootSize() *int {
	if o == nil {
		return nil
	}
	return o.EbsBootSize
}

func (o *ForgeConfig) GetEcsConfig() *string {
	if o == nil {
		return nil
	}
	return o.EcsConfig
}

func (o *ForgeConfig) GetFargateHeadEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.FargateHeadEnabled
}

func (o *ForgeConfig) GetArm64Enabled() *bool {
	if o == nil {
		return nil
	}
	return o.Arm64Enabled
}

func (o *ForgeConfig) GetDragenInstanceType() *string {
	if o == nil {
		return nil
	}
	return o.DragenInstanceType
}
